<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/4.2.12" created="2017-02-17 02:06" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>徐安博客</title>
	<link>http://xuanner.com/wp</link>
	<description>一个简单blog</description>
	<pubDate>Fri, 17 Feb 2017 02:06:52 +0000</pubDate>
	<language>zh-CN</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://xuanner.com/wp</wp:base_site_url>
	<wp:base_blog_url>http://xuanner.com/wp</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>xuan698400</wp:author_login><wp:author_email>javaandswing@163.com</wp:author_email><wp:author_display_name><![CDATA[xuan698400]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>14</wp:term_id><wp:category_nicename>android</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Android]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>15</wp:term_id><wp:category_nicename>ios%e5%bc%80%e5%8f%91</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[IOS开发]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>6</wp:term_id><wp:category_nicename>java</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[JAVA]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>7</wp:term_id><wp:category_nicename>jshtml</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[JS/HTML/CSS]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>8</wp:term_id><wp:category_nicename>php</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[PHP]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>13</wp:term_id><wp:category_nicename>tomcat%e5%8e%9f%e7%90%86</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[Tomcat原理]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>10</wp:term_id><wp:category_nicename>worldpress</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[WorldPress]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>uncategorized</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[其他]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>16</wp:term_id><wp:category_nicename>%e5%8f%91%e5%b8%83bug%e7%96%91%e9%9a%be%e6%9d%82%e7%97%87</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[发布BUG疑难杂症]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>2</wp:term_id><wp:category_nicename>%e5%b0%8f%e5%8f%99%e6%95%a3%e6%96%87</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[小叙散文]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>9</wp:term_id><wp:category_nicename>%e6%80%aa%e4%ba%ba%e4%bc%a0%e8%af%b4</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[怪人传说]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>5</wp:term_id><wp:category_nicename>%e6%8a%80%e6%9c%af%e6%9d%82%e8%b0%88</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[技术杂谈]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>3</wp:term_id><wp:category_nicename>%e6%95%b0%e6%8d%ae%e5%ba%93</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[数据库]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>12</wp:term_id><wp:category_nicename>%e7%94%9f%e6%b4%bb%e7%82%b9%e6%bb%b4</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[生活点滴]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>11</wp:term_id><wp:category_nicename>%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[设计模式]]></wp:cat_name></wp:category>
	<wp:term><wp:term_id>18</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug>top</wp:term_slug><wp:term_name><![CDATA[top]]></wp:term_name></wp:term>

	<generator>http://wordpress.org/?v=4.2.12</generator>

	<item>
		<title>示例页面</title>
		<link>http://xuanner.com/wp/sample-page/</link>
		<pubDate>Thu, 09 Jul 2015 15:01:44 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://qxu1591330385.my3w.com/wp/?page_id=2</guid>
		<description></description>
		<content:encoded><![CDATA[这是示范页面。页面和博客文章不同，它的位置是固定的，通常会在站点导航栏显示。很多用户都创建一个“关于”页面，向访客介绍自己。例如，个人博客通常有类似这样的介绍：
<blockquote>欢迎！我白天是个邮递员，晚上就是个有抱负的演员。这是我的博客。我住在天朝的帝都，有条叫做杰克的狗。</blockquote>
……公司博客可以这样写：
<blockquote>XYZ Doohickey公司成立于1971年，自从建立以来，我们一直向社会贡献着优秀doohicky。我们的公司总部位于天朝魔都，有着超过两千名员工，对魔都政府税收有着巨大贡献。</blockquote>
您可以访问<a href="http://qxu1591330385.my3w.com/wp/wp-admin/">仪表盘</a>，删除本页面，然后添加您自己的内容。祝您使用愉快！



[java]
@Override
protected void dgInit() {
    loadView();
    initWidgits();
    setVisibility(View.GONE);
}
[/java]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>2</wp:post_id>
		<wp:post_date>2015-07-09 23:01:44</wp:post_date>
		<wp:post_date_gmt>2015-07-09 15:01:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sample-page</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>走不对的方向</title>
		<link>http://xuanner.com/wp/2011/12/29/%e8%b5%b0%e4%b8%8d%e5%af%b9%e7%9a%84%e6%96%b9%e5%90%91/</link>
		<pubDate>Thu, 29 Dec 2011 15:37:15 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://xuan.tomner.com/?p=15</guid>
		<description></description>
		<content:encoded><![CDATA[一步一个脚印，一步一阵清风。
夏末的晚风，又见交叉口。
往东，往西，不如往前走。
变脸的天知道下雨，淋湿的狗知道回家。
游走的风，却要在石桥下，徘徊。不是倦了，不是偷懒。
只是看不见了，那一抹西阳。你说，轻盈的风可以走的更远。
他说，不必再走，哪里都是归宿。。
我说，只是迷路了。笑语的鸟，在枝头戏闹。这里没有路。
那，我这是要去哪里？]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>15</wp:post_id>
		<wp:post_date>2011-12-29 15:37:15</wp:post_date>
		<wp:post_date_gmt>2011-12-29 15:37:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%b5%b0%e4%b8%8d%e5%af%b9%e7%9a%84%e6%96%b9%e5%90%91</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e5%b0%8f%e5%8f%99%e6%95%a3%e6%96%87"><![CDATA[小叙散文]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[39]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>清淡淡漠的黄昏</title>
		<link>http://xuanner.com/wp/2011/12/29/%e6%b8%85%e6%b7%a1%e6%b7%a1%e6%bc%a0%e7%9a%84%e9%bb%84%e6%98%8f/</link>
		<pubDate>Thu, 29 Dec 2011 15:41:35 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://xuan.tomner.com/?p=20</guid>
		<description></description>
		<content:encoded><![CDATA[天微热。有点点闷。河道还是很脏。
操场还是很小。悠悠的风下，还是一陈不变的夕阳西下。
一圈。两圈。三圈。
享受繁硕的偷闲。
青草上。一叶。两叶。成对的飞。
缓缓的歌。清清的感受。风一点暖。天一点灰。人一点倦。却足以。
小路。半黄叶。折枝枯老。又是一道独影。青苔的石桌。偶尔日晒。偶尔小雨缠绵。偶尔听丝丝细语。
抬头。台阶。一步一步。刷卡。棕古色的桌前。又开始新的奋斗。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>20</wp:post_id>
		<wp:post_date>2011-12-29 15:41:35</wp:post_date>
		<wp:post_date_gmt>2011-12-29 15:41:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%b8%85%e6%b7%a1%e6%b7%a1%e6%bc%a0%e7%9a%84%e9%bb%84%e6%98%8f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e5%b0%8f%e5%8f%99%e6%95%a3%e6%96%87"><![CDATA[小叙散文]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[40]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>梦想词</title>
		<link>http://xuanner.com/wp/2011/12/29/%e6%a2%a6%e6%83%b3%e8%af%8d/</link>
		<pubDate>Thu, 29 Dec 2011 15:49:27 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://xuan.tomner.com/?p=25</guid>
		<description></description>
		<content:encoded><![CDATA[林涛呼啸瑟瑟风，
夕烟缭绕朦胧路。
相知有素谁人知，
心心念念觅无踪。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>25</wp:post_id>
		<wp:post_date>2011-12-29 15:49:27</wp:post_date>
		<wp:post_date_gmt>2011-12-29 15:49:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%a2%a6%e6%83%b3%e8%af%8d</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e5%b0%8f%e5%8f%99%e6%95%a3%e6%96%87"><![CDATA[小叙散文]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[35]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>看荷</title>
		<link>http://xuanner.com/wp/2011/12/29/%e7%9c%8b%e8%8d%b7/</link>
		<pubDate>Thu, 29 Dec 2011 15:51:49 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://xuan.tomner.com/?p=27</guid>
		<description></description>
		<content:encoded><![CDATA[你挽着我的手，去看荷。
正是荷开叶的时候，也正是细雨绵绵的时候。荷花开，露出小小的莲蓬，清香的花蕊，很多很多。
你说，荷叶为什么总是不沾泥水呢？
我流着口水回答，荷叶粉蒸肉一定很好吃。
为此你轻轻地拂了我一巴掌。说我不会欣赏。
你说，爱荷就要爱它的全部。
我说，那如果它寥落了呢？
你说，可以听打在它上面的雨声。还有，养育它的那池污水呀。
我说，欣赏别人的孤凄是一种罪恶。
你不再说话。靠在我肩上，听荷开的声音。
我自己也被这句无心的话点到了心的深处。这片荷叶的繁华，这群英姿勃发的嫩叶，这几朵即开的浅荷，总有一天会悄悄凋零。那是何等孤凄啊。真的还会有人再欣赏它们么？
其实我不是一个好思的人，大多想法也是空洞而可笑。所以也不再思忖。只听得细雨在荷叶上跃跃跳动，集于荷心，在“哗”的一声后，便泄于清池中了。荷叶在弯腰之后，又挺直了胸膛，昂然向天。
那时，勃发的碧荷，没想到，还有飘零的孤凄。
一年后，你离开了我。眼眶充斥着晶莹的泪珠，像当时荷叶上的晶珠。你深深地望着我，像在欣赏。终于你转身走来了。
那个季节，正是荷叶飘零的时候，也是凉雨丝丝的时候。
我一个人，寻着路，又去看荷。
荷田一片凄落萧条。池面残叶一片，在凉雨散落下，毫无生机。
想起了自己的那句话，竟然有些难看起来。同样，我在欣赏它的凄凉，它在欣赏我的落寞。你不愿欣赏，所以才走开了。难道我们都罪恶吗?但我觉得它没有一点罪过。
盛开，飘零都是生命的一部分。此时花残，明年花更红。它依然会撑开亭亭的叶，像少女般漫舞。听着人们的赞赏，它会忘记昨日的孤寂和凄凉，更不会想到即将来临的凋零。
又想起了你的话，爱荷就要爱它的全部。
起身向荷。感觉一阵头晕，向荷池走了一圈。舒服了许多。
你又依在我身旁，指向荷心，对着我笑。我又绕荷池走了一圈。什么都不见了。只有一叶即开的荷。
倒吸可一口凉气，转身离开了。
对，荷叶又开了。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>27</wp:post_id>
		<wp:post_date>2011-12-29 15:51:49</wp:post_date>
		<wp:post_date_gmt>2011-12-29 15:51:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%9c%8b%e8%8d%b7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e5%b0%8f%e5%8f%99%e6%95%a3%e6%96%87"><![CDATA[小叙散文]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[37]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>杭州-乌镇</title>
		<link>http://xuanner.com/wp/?p=546</link>
		<pubDate>Thu, 03 Jan 2013 03:23:27 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=546</guid>
		<description></description>
		<content:encoded><![CDATA[7:51。到达古墩路和留祥路交叉点。马表。77076。情况远远元要比想象中的难。但是我想我会继续前行。

8:21。到达瓜山立交桥。马表。82456。其实也没那么难，不是吗？

8:50。到达石桥立交桥。码表。87626。真是意犹未尽。y不过好像时间拖的有点久。得抓紧了。come on。

9:39。终于到余杭界。妈的，还在杭州。码表。95626。会不会走偏了啊。

9:58。哪个不争气的自行车胎暴了。幸好及时。问了一下。扫地的大叔。现在补胎呢。马变。96768

钱。3元，买酸梅汤。
补胎。3元。

10:24。重新上路。抓紧时间了。

11:12。好像骑了很久了。码表。10945。不想知道这里是哪。不想知道这里是哪里？只知道这里是。320国道177。想撒尿潮。

11:45。11215。到达320国道余杭收费站。是否意味着出余杭。也就是说，除了杭州。

12:25。11989。终于进入桐乡界。

1:03。12712。进桐乡界，骑车有一会儿了。蛋疼。就停下来休息一下。平时看都不想看的小面包。这会儿吃起来特别香。实在不知道这里是哪。有目标，但看不清路标。也许这样才能走的更远。

1:46。13670。到达灵安镇。每次想停下来的时候，都会忍忍，总有于到灵安镇了，那离乌镇还回远么，你说呢？

2:45。14480。再临安镇到乌镇之间。实在饿的不行。幸福的啃的面包。终于知道。为什么许多有钱人。也会不幸福。因为他们永远。不会知道。饥饿之后幸福的人吧。

3:13。14963。来过未曾离开。终于看到乌镇的广告牌了。目标不远了。

3:49。15588。终于看到了。矛盾的，这两个字。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>546</wp:post_id>
		<wp:post_date>2013-01-03 11:23:27</wp:post_date>
		<wp:post_date_gmt>2013-01-03 03:23:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e7%94%9f%e6%b4%bb%e7%82%b9%e6%bb%b4"><![CDATA[生活点滴]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://xuanner.com/wp/2015/07/10/677/</link>
		<pubDate>Thu, 09 Jul 2015 17:02:39 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://qxu1591330385.my3w.com/wp/?p=677</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>677</wp:post_id>
		<wp:post_date>2015-07-10 01:02:39</wp:post_date>
		<wp:post_date_gmt>2015-07-09 17:02:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>677</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="top"><![CDATA[top]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[15]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://xuanner.com/wp/2015/07/10/678/</link>
		<pubDate>Thu, 09 Jul 2015 17:02:39 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://qxu1591330385.my3w.com/wp/?p=678</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>678</wp:post_id>
		<wp:post_date>2015-07-10 01:02:39</wp:post_date>
		<wp:post_date_gmt>2015-07-09 17:02:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>678</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="top"><![CDATA[top]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://xuanner.com/wp/2015/07/10/679/</link>
		<pubDate>Thu, 09 Jul 2015 17:02:39 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://qxu1591330385.my3w.com/wp/?p=679</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>679</wp:post_id>
		<wp:post_date>2015-07-10 01:02:39</wp:post_date>
		<wp:post_date_gmt>2015-07-09 17:02:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>679</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>3</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="top"><![CDATA[top]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[7]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://xuanner.com/wp/2015/07/10/680/</link>
		<pubDate>Thu, 09 Jul 2015 17:02:39 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://qxu1591330385.my3w.com/wp/?p=680</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>680</wp:post_id>
		<wp:post_date>2015-07-10 01:02:39</wp:post_date>
		<wp:post_date_gmt>2015-07-09 17:02:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>680</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>4</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="top"><![CDATA[top]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[8]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://xuanner.com/wp/2015/07/10/681/</link>
		<pubDate>Thu, 09 Jul 2015 17:02:39 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://qxu1591330385.my3w.com/wp/?p=681</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>681</wp:post_id>
		<wp:post_date>2015-07-10 01:02:39</wp:post_date>
		<wp:post_date_gmt>2015-07-09 17:02:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>681</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>5</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="top"><![CDATA[top]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[13]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://xuanner.com/wp/2015/07/10/682/</link>
		<pubDate>Thu, 09 Jul 2015 17:02:39 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://qxu1591330385.my3w.com/wp/?p=682</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>682</wp:post_id>
		<wp:post_date>2015-07-10 01:02:39</wp:post_date>
		<wp:post_date_gmt>2015-07-09 17:02:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>682</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>6</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="top"><![CDATA[top]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[10]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://xuanner.com/wp/2015/07/10/683/</link>
		<pubDate>Thu, 09 Jul 2015 17:02:39 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://qxu1591330385.my3w.com/wp/?p=683</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>683</wp:post_id>
		<wp:post_date>2015-07-10 01:02:39</wp:post_date>
		<wp:post_date_gmt>2015-07-09 17:02:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>683</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>7</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="top"><![CDATA[top]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[16]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://xuanner.com/wp/2015/07/10/684/</link>
		<pubDate>Thu, 09 Jul 2015 17:02:39 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://qxu1591330385.my3w.com/wp/?p=684</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>684</wp:post_id>
		<wp:post_date>2015-07-10 01:02:39</wp:post_date>
		<wp:post_date_gmt>2015-07-09 17:02:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>684</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>8</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="top"><![CDATA[top]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[14]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://xuanner.com/wp/2015/07/10/685/</link>
		<pubDate>Thu, 09 Jul 2015 17:02:40 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://qxu1591330385.my3w.com/wp/?p=685</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>685</wp:post_id>
		<wp:post_date>2015-07-10 01:02:40</wp:post_date>
		<wp:post_date_gmt>2015-07-09 17:02:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>685</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>9</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="top"><![CDATA[top]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[2]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://xuanner.com/wp/2015/07/10/686/</link>
		<pubDate>Thu, 09 Jul 2015 17:02:40 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://qxu1591330385.my3w.com/wp/?p=686</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>686</wp:post_id>
		<wp:post_date>2015-07-10 01:02:40</wp:post_date>
		<wp:post_date_gmt>2015-07-09 17:02:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>686</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>10</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="top"><![CDATA[top]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[9]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://xuanner.com/wp/2015/07/10/687/</link>
		<pubDate>Thu, 09 Jul 2015 17:02:40 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://qxu1591330385.my3w.com/wp/?p=687</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>687</wp:post_id>
		<wp:post_date>2015-07-10 01:02:40</wp:post_date>
		<wp:post_date_gmt>2015-07-09 17:02:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>687</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>11</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="top"><![CDATA[top]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://xuanner.com/wp/2015/07/10/688/</link>
		<pubDate>Thu, 09 Jul 2015 17:02:40 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://qxu1591330385.my3w.com/wp/?p=688</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>688</wp:post_id>
		<wp:post_date>2015-07-10 01:02:40</wp:post_date>
		<wp:post_date_gmt>2015-07-09 17:02:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>688</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>12</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="top"><![CDATA[top]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[3]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://xuanner.com/wp/2015/07/10/690/</link>
		<pubDate>Thu, 09 Jul 2015 17:02:40 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://qxu1591330385.my3w.com/wp/?p=690</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>690</wp:post_id>
		<wp:post_date>2015-07-10 01:02:40</wp:post_date>
		<wp:post_date_gmt>2015-07-09 17:02:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>690</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>13</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="top"><![CDATA[top]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[12]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title></title>
		<link>http://xuanner.com/wp/2015/07/10/691/</link>
		<pubDate>Thu, 09 Jul 2015 17:02:40 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://qxu1591330385.my3w.com/wp/?p=691</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>691</wp:post_id>
		<wp:post_date>2015-07-10 01:02:40</wp:post_date>
		<wp:post_date_gmt>2015-07-09 17:02:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>691</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>14</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="top"><![CDATA[top]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[11]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>对不起，我爱你</title>
		<link>http://xuanner.com/wp/2011/12/29/%e5%af%b9%e4%b8%8d%e8%b5%b7%ef%bc%8c%e6%88%91%e7%88%b1%e4%bd%a0/</link>
		<pubDate>Thu, 29 Dec 2011 16:12:24 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://xuan.tomner.com/?p=36</guid>
		<description></description>
		<content:encoded><![CDATA[有些时候就是不甘心，明明知道我们就像两条交错过的线，已经越走越远了。
有些时候真的很难过，难过的是没有一次真正的投入过，等到想明白了，你却已经走了。
有些时候真恨自己，恨自己没有耐心，总是想得到了再好好珍惜，可是天下没有那么简单的事情。
有些时候很无奈，天生的使命让我举步为艰，不是我不想，是我没这个条件。
有些时候觉得自己很伟大，那是因为心已经碎成了粉磨，想给自己一个安慰。
有些时候觉得自己很可怜，那是走到了路的尽头，前面已经没有了路。
有些时候自己像在行尸走肉，没有什么能奢望的，也没有能力去改变。
有些时候我好困，那种永远不要醒来的感觉是一种美好的幻想。
有些时候不想理会这个世界，心里严重扭曲到自己都无法承受。
有些时候压力好大，因为生活变成了一种责任。
有些时候常常幻想，那一点可悲让我得到了一点快乐。
有些时候不知道自己是谁，因为困了想睡的时候，总会伤悲。
有些时候在梦里哭泣的醒来，然后又惶惶睡去。
有些时候被恶梦惊醒，却要忍受一个人的世界。
有些时候想要改变自己的愚蠢，可是找不到方向什么才是对的。
有些时候我小便不解手，因为那时早已麻木。
有些时候我恨你，因为我的度量太小，而我又太爱你了。
有些时候我就这样写着写着睡着了。希望永远不要醒来，可还是一个天明的早上。
有些时候，会出现在很多时候。。。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>36</wp:post_id>
		<wp:post_date>2011-12-29 16:12:24</wp:post_date>
		<wp:post_date_gmt>2011-12-29 16:12:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%af%b9%e4%b8%8d%e8%b5%b7%ef%bc%8c%e6%88%91%e7%88%b1%e4%bd%a0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e5%b0%8f%e5%8f%99%e6%95%a3%e6%96%87"><![CDATA[小叙散文]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[29]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>旧伤</title>
		<link>http://xuanner.com/wp/2011/12/30/%e6%97%a7%e4%bc%a4/</link>
		<pubDate>Fri, 30 Dec 2011 01:27:01 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://xuan.tomner.com/?p=38</guid>
		<description></description>
		<content:encoded><![CDATA[说不准的路，在那里，无情的延伸。
伤不透的人，看不清，站在原地。
拿不了的心，纠结在，无尽的深渊。
放不下的影，模糊着，渐远渐近。

漫步着空虚的灵魂。
听不清喃喃的细雨。
扯不断思尘连绵乱。
留不住红衣挥别离。

堤坝，挡不住的海，不愿倾泻。
最怕，等不及的叶，又是秋凉。

翻开层层心土。
埋下重重思念。
洒点时间，拌点忧伤。
要么春暖花开。
要么腐沉心底。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>38</wp:post_id>
		<wp:post_date>2011-12-30 01:27:01</wp:post_date>
		<wp:post_date_gmt>2011-12-30 01:27:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%97%a7%e4%bc%a4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e5%b0%8f%e5%8f%99%e6%95%a3%e6%96%87"><![CDATA[小叙散文]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[56]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>又一缕丝愁</title>
		<link>http://xuanner.com/wp/2011/12/30/%e5%8f%88%e4%b8%80%e7%bc%95%e4%b8%9d%e6%84%81/</link>
		<pubDate>Fri, 30 Dec 2011 01:40:36 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://xuan.tomner.com/?p=41</guid>
		<description></description>
		<content:encoded><![CDATA[回忆是翻开陈旧相片摸不到的脸，让定格的画面浮现你的视线，看不清模糊的眼。
悄悄的点开熟悉的链接，在梦幻与真实来回之间，徘徊思念。
月光透不过层叠的窗帘，再梦幻的想念也换不回拥抱的怀念。

红纱半遮的脸，在远近之间，仿佛虚幻倒影的湖面，不郑石子，不起涟漪。
陶笛吹鸣，求一曲宁神安定，吹抚纱间的尘。

昨日东风敲门人不在，探窗迎风风不留，自演流水花无意。
君言芽叶更适春风照，寒了芽留不住等不了，便黄了叶。

李白的诗，林夕的词，留住的往事如风，捉不到的月光握紧，消了失。
锋利的刀，尖锐的剑，斩不断，刺不透，一把捞起，依旧红的尘。

神情宛若风霜定，一扇便起，白色茫茫，看不清路，抓不住手中的飘落的霜片。
丽水环山，桃红漫绿，路过，路过，只因不敢停留。

只身又上路，掩平滞留的脚印，再不舍再不舍，新的脚印已深。
坐等夕月晚风吹回的深夜，不如闭眼安睡，见又一个新的天明。
留不留，留得梦在，不留梦中人。
念不动便是空，佛不真，叫人空无一切，清空是为了更好的填满。

你懂便是你。
你不懂因为没有你，也许在别处。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>41</wp:post_id>
		<wp:post_date>2011-12-30 01:40:36</wp:post_date>
		<wp:post_date_gmt>2011-12-30 01:40:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%8f%88%e4%b8%80%e7%bc%95%e4%b8%9d%e6%84%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e5%b0%8f%e5%8f%99%e6%95%a3%e6%96%87"><![CDATA[小叙散文]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[36]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>小区sybase和oracle数据库</title>
		<link>http://xuanner.com/wp/2011/12/30/%e5%b0%8f%e5%8c%basybase%e5%92%8coracle%e6%95%b0%e6%8d%ae%e5%ba%93/</link>
		<pubDate>Fri, 30 Dec 2011 02:12:09 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://xuan.tomner.com/?p=45</guid>
		<description></description>
		<content:encoded><![CDATA[1、oracle不支持top， 用rownum替代（mySql用limit）

2、oracle不支持getdate， 用sysdate替代。或者程序new Date()；

3、oracle不支持A.id *= B.a_id这样左连接写法，用A.id = B.a_id(+)替代。最好通用：left join tableA on ...

4、column、number、mode、date等是oracle的关键字，不能用作列名，可以用作别名，但要加“”

5、sybase只有存贮过程，调用{call up_max_user_id(?,?)}。oracle可有函数，调用select up_max_user_id(?,?) from dual

6、sybase允许插入null，而oracle的字段如果加了索引即使在构建时没有加not null，也不允许插入null了。oracle中""和null几乎等同。

7、sybase可以在程序里这样拼接日期时间，例如：creation_time = "2011-01-01 00:00:00.999";那个oracle不支持，改成creation_time = "to_date('2011-01-01 00:00:00','yyyy-mm-dd hh24:mi:ss')";其中to_date是oralce特有函数。

8、关于like查询语句写法：sybase支持类似 SELECT * FROM sys_region WHERE id LIKE ?+'__00'直接这样的写法，oracel要用SqlCreator去拼后面的like条件。

9、insert时，如果没有插入某个字段，而该字段刚好不能插null，会报null错误，同第6点有点像。

10、如果varchar类型的字段，sybase都会把空格去掉，而oracle不会，而oracle中的查找条件""相当于null了。例如：id&gt;“”和id&gt;“  ”在sybase中一样，而在oracle中前者任何数据都没有。

11、sybase可这样查询select id='' from eb_user，而oracle就不行喽，因为oracle中''认为是null

12、在sybase可这样查询select id,name from eb_user group by id，而oracle就不行喽，正规写法：select id,name from eb_user group by id,name

13、注意索引的不同，oracle基本上会有很好的自动寻找索引。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>45</wp:post_id>
		<wp:post_date>2011-12-30 02:12:09</wp:post_date>
		<wp:post_date_gmt>2011-12-30 02:12:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%b0%8f%e5%8c%basybase%e5%92%8coracle%e6%95%b0%e6%8d%ae%e5%ba%93</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%95%b0%e6%8d%ae%e5%ba%93"><![CDATA[数据库]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[40]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>mySql基础笔记</title>
		<link>http://xuanner.com/wp/2011/12/31/mysql%e5%9f%ba%e7%a1%80%e7%ac%94%e8%ae%b0/</link>
		<pubDate>Sat, 31 Dec 2011 01:45:23 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://xuan.tomner.com/?p=50</guid>
		<description></description>
		<content:encoded><![CDATA[1.使用SHOW语句找出在服务器上当前存在什么数据库
show databases;

2.创建一个数据库myDatabase
create database myDatabase;

3.选择你所创建的数据库
use myDatabase;

4.查看现在的数据库中存在什么表
show tables;

5.创建一个数据库表
create table myTable(username varchar(20),password varchar(20));

6.显示表的结构
describe myTable;

7.往表中加入记录
insert into myTable(username, password) values ("xuan","222");

8.用文本方式将数据装入数据库表中
load data local infile "D:/mysql.txt" into table myTable;

9.导入.sql文件命令
use database;
source d:/mysql.sql;

10.删除表
drop table myTable;

11.清空表
delete from myTable;

12.更新表中数据
update myTable set username="111" where password="222";

//========================mySql常用数据类型========================
第一个：VARCHAR
VARCHAR通常用来表示最多为255个字符的变量长度字符串。
如果你要储存和处理字母数字类的数据，这种数据类型是最合适的。
用来计算的数字不要用VARCHAR类型保存。
例如：VARCHAR(20)

第二个：DECIMAL
最适合保存那些将被用于计算的数据。
例如，如果你需要在小数点前面保存五位数，且小数点后只保留三位,可以：Decimal(5+3,3)或 Decimal(8,3)
12345.678，56872.690都好，128781.1这种就会报错了。

第三个：DATE
MySQL中默认的日期格式是yyyy-mm-dd。

第四个：INT
INT数据类型可以用来保存那些不包含小数点的数字。
TINYINT——这个类型最多可容纳三位数。
SMALLINT——最多可容纳五位数。
MEDIUMINT——最多可容纳八位数。
INT——可以容纳十位数。
BIGINT——最多可容纳二十位数。

第五个：TEXT
TEXT可以用来存储超量的数据。

第六个：TIMESTAMP
含有日期时间。


================add by 2012-11-22======================
1、mysql在表中随机取一条数据，但据说性能不是很好，一般小数据无所谓啦
SELECT * FROM sasa_message ORDER BY RAND() LIMIT 1]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>50</wp:post_id>
		<wp:post_date>2011-12-31 01:45:23</wp:post_date>
		<wp:post_date_gmt>2011-12-31 01:45:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mysql%e5%9f%ba%e7%a1%80%e7%ac%94%e8%ae%b0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%95%b0%e6%8d%ae%e5%ba%93"><![CDATA[数据库]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[70]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>linux基础命令</title>
		<link>http://xuanner.com/wp/2011/12/31/linux%e5%9f%ba%e7%a1%80%e5%91%bd%e4%bb%a4/</link>
		<pubDate>Sat, 31 Dec 2011 02:21:29 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://xuan.tomner.com/?p=58</guid>
		<description></description>
		<content:encoded><![CDATA[1、查看文件
tail -3 -f myFile.txt（其中-f显示最尾部的内容，并不断刷新，使你看到最新的内容。-n 100是看100行。filename就是要看的文件了。）
head -3 myFile.txt（查看头部开始）
cat myFile.txt（查看文件）
vi xuan.txt（编辑文件，如果xuan.txt不存在就新建一个，:wq :q分别为保存退出，不保存退出，a esc键分别切换命令模式很输入模式）

2、查看进程ps
例如：ps -ef | grep tomcat（查看所有关于tomcat的进程）

3、强制结束进程
例如：kill -9 27063

4、基本的不想记录的命令
例如：cd myDir （可用Tab键提示）
ll ls（查看当前文件夹）
cd ..（回退）

7、删除操作
删除文件：rm myFile.txt
删除文件夹：rm -rf myDir
删除文件夹下的所有内容：rm -rf myDir/*
ps：一般用rm -rf xuan.txt也可以删除的哦

8、创建文件夹
mkdir myDir

9、创建文件
touch myFile.txt

10、编辑文件
vi myFile.txt

11、退出文件
先按Esc键
不保存：:q
保存：:wq

12、复制
cp myFile.txt /xuan/anan1.txt

13、剪切
mv myFile.txt /xuan/anan2.txt

14、查看当前路径
pwd

15、打包
jar -cvf ROOT.war * (把当前所有文件打包，包文件叫ROOT.war放在当前目录，用JDK的)

16、解压
jar -xvf ROOT.war (解压ROOT.war到当前文件夹)

17、查看以前输入过的命令
history | grep cd

18、使用wget命令从ftp上下载zip包，例子如下：
wget ftp://192.168.0.222/var/xuan.txt

19、用zip命令压缩和解压，例子如下：
zip xuan.zip xuan(后面那个xuan是文件夹)
unzip xuan.zip

20、当你写好一个shell脚本，你要使用前必须先这样
chmod +x install.sh
之后你就可以直接install.sh运行脚本了

21、查看端口占用
lsof -i tcp:8081]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>58</wp:post_id>
		<wp:post_date>2011-12-31 02:21:29</wp:post_date>
		<wp:post_date_gmt>2011-12-31 02:21:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>linux%e5%9f%ba%e7%a1%80%e5%91%bd%e4%bb%a4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e6%9d%82%e8%b0%88"><![CDATA[技术杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[372]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>nginx简单负载均衡配置详解</title>
		<link>http://xuanner.com/wp/2012/01/05/nginx%e7%ae%80%e5%8d%95%e8%b4%9f%e8%bd%bd%e5%9d%87%e8%a1%a1%e9%85%8d%e7%bd%ae%e8%af%a6%e8%a7%a3/</link>
		<pubDate>Thu, 05 Jan 2012 08:56:23 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://xuan.tomner.com/?p=63</guid>
		<description></description>
		<content:encoded><![CDATA[#使用用户
user  nobody;

#启动进程数，一般和cpu数量相等
worker_processes  4;

#错误日志输出路径
error_log  logs/error.log;

#进程PID输出路径
pid  logs/nginx.pid;

events {
    #epoll是多路复用IO(I/O Multiplexing)中的一种方式,但是仅用于linux2.6以上内核,可以大大提高nginx的性能
    use  epoll;
    #单个后台进程（worker_processes）最大连接数
    worker_connections  1024;
}

http {
    #设定mime类型,类型由mime.type文件定义
    include  mime.types;
    #默认
    default_type  application/octet-stream;
    #设定日志格式
    #access_log  logs/access.log  main;

    #sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用，
    #必须设为 on,如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;

    #连接超时时间
    keepalive_timeout  60;
    #开启gzip压缩
    gzip  on;

    #设定负载均衡的服务器列表
    upstream tomcat_173 {
        #weigth参数表示权值，权值越高被分配到的几率越大
        server 192.168.1.173:8080  weight=5;
        server 192.168.1.178:8080  weight=1;
    }

    server {
        listen       80;
        server_name  jxhl.edu88.tst;
        charset      utf-8;

	#定义服务器的默认网站根目录位置
	root  /root;
        index  index.html index.htm;
        access_log   logs/access.log;

        location / {
	    #请求转向tomcat_173定义的服务器列表
            proxy_pass http://tomcat_173;
            proxy_redirect off;
			
	    #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            client_max_body_size 50M;		#允许客户端请求的最大单文件字节数
            client_body_buffer_size 5M; 	#缓冲区代理缓冲用户端请求的最大字节数
            proxy_connect_timeout 600;  	#nginx跟后端服务器连接超时时间(代理连接超时)
            proxy_send_timeout 300;		#后端服务器数据回传时间(代理发送超时)
            proxy_read_timeout 300;		#连接成功后，后端服务器响应时间(代理接收超时)
            proxy_buffer_size 4k;		#设置代理服务器（nginx）保存用户头信息的缓冲区大小
            proxy_buffers 4 32k;		#proxy_buffers缓冲区，网页平均在32k以下的话，这样设置
            proxy_busy_buffers_size 64k;	#高负荷下缓冲大小（proxy_buffers*2）
            proxy_temp_file_write_size 64k;     #设定缓存文件夹大小，大于这个值，将从upstream服务器传
        }
    }
}
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>63</wp:post_id>
		<wp:post_date>2012-01-05 08:56:23</wp:post_date>
		<wp:post_date_gmt>2012-01-05 08:56:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>nginx%e7%ae%80%e5%8d%95%e8%b4%9f%e8%bd%bd%e5%9d%87%e8%a1%a1%e9%85%8d%e7%bd%ae%e8%af%a6%e8%a7%a3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e6%9d%82%e8%b0%88"><![CDATA[技术杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[56]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>冒泡排序</title>
		<link>http://xuanner.com/wp/2012/01/05/%e5%86%92%e6%b3%a1%e6%8e%92%e5%ba%8f/</link>
		<pubDate>Thu, 05 Jan 2012 11:13:00 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://xuan.tomner.com/?p=67</guid>
		<description></description>
		<content:encoded><![CDATA[int[] a = { 3, 6, 22, 1, 90, 666, 4, 98 };
int temp;
for (int i = a.length - 1; i &gt; 0; i--) {
for (int j = 0; j &lt; i; j++) {
if (a[j] &gt; a[j + 1]) {
temp = a[j];
a[j] = a[j + 1];
a[j + 1] = temp;
}}}]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>67</wp:post_id>
		<wp:post_date>2012-01-05 11:13:00</wp:post_date>
		<wp:post_date_gmt>2012-01-05 11:13:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%86%92%e6%b3%a1%e6%8e%92%e5%ba%8f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[44]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>一句超带感的SQL语法</title>
		<link>http://xuanner.com/wp/2012/01/06/%e4%b8%80%e5%8f%a5%e8%b6%85%e5%b8%a6%e6%84%9f%e7%9a%84sql%e8%af%ad%e6%b3%95/</link>
		<pubDate>Fri, 06 Jan 2012 07:05:59 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=79</guid>
		<description></description>
		<content:encoded><![CDATA[语法例子：
select 'INSERT INTO eb_user(id, name) VALUES( ' || id || ',''' || name || ''')' from eb_user

查处来的数据：
INSERT INTO eb_user(id, name) VALUES( 3500011002,'教师2')
INSERT INTO eb_user(id, name) VALUES( 3500011003,'教师3')
INSERT INTO eb_user(id, name) VALUES( 3500011005,'教师4')

这些可以用来干什么，你懂的。
注意：1、sql语法中仿佛字符串连接符用||的，还留意'这个转义
2、在Sybase中，如果id是数字类型，那么要convert(varchar, id)这样转成才可以]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>87</wp:post_id>
		<wp:post_date>2012-01-06 07:05:59</wp:post_date>
		<wp:post_date_gmt>2012-01-06 07:05:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%b8%80%e5%8f%a5%e8%b6%85%e5%b8%a6%e6%84%9f%e7%9a%84sql%e8%af%ad%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%95%b0%e6%8d%ae%e5%ba%93"><![CDATA[数据库]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[53]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JS的document.all的用法</title>
		<link>http://xuanner.com/wp/2012/01/06/js%e7%9a%84document-all%e7%9a%84%e7%94%a8%e6%b3%95/</link>
		<pubDate>Fri, 06 Jan 2012 11:29:35 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=83</guid>
		<description></description>
		<content:encoded><![CDATA[1、document.all是页面元素的一个集合
如：document.all表示第一个元素

2、可判断是否为IE浏览器
如：if(document.all) ? alert("is IE") : alert("not IE");

3、也可以通过给某个元素设置id(id=aaa)，然后可用document.all.aaa调用该元素

4、可以这样玩
如：&lt;input id=aaa value=aaa1 />
&lt;input id=aaa value=aaa2 />
document.all("aaa",0).value取到对象元素的值]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>88</wp:post_id>
		<wp:post_date>2012-01-06 11:29:35</wp:post_date>
		<wp:post_date_gmt>2012-01-06 11:29:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>js%e7%9a%84document-all%e7%9a%84%e7%94%a8%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="jshtml"><![CDATA[JS/HTML/CSS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[34]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>PHP简单入门</title>
		<link>http://xuanner.com/wp/2012/01/06/php%e7%ae%80%e5%8d%95%e5%85%a5%e9%97%a8/</link>
		<pubDate>Fri, 06 Jan 2012 07:28:51 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=93</guid>
		<description></description>
		<content:encoded><![CDATA[1、嵌入方法

	&lt;?php 这里是php代码 ?> 或者 &lt;? 这里是php代码 ?>

2、引用文件

	(1)require 的使用方法。例如 require("MyRequireFile.php")
	这个函数通常放在 PHP 程序的最前面，PHP 程序在执行前，就会先读入 require 所指定引入的文件。
	使它变成 PHP 程序网页的一部份。常用的函数，亦可以这个方法将它引入网页中。
	
	(2)include 的使用方法。例如 include("MyIncludeFile.php")
	这个函数一般是放在流程控制的处理部分中。PHP 程序网页在读到 include 的文件时，才将它读进来。
	这种方式，可以把程序执行时的流程简单化。

3、注释方法

	// 本例是 C++ 语法的注释
	/* 本例采用多行的注释方式 */
	# 本例使用 UNIX Shell 语法注释
	
4、变量类型

	$mystring = "我是字符串" ; 
	$NewLine = "换行了n" ; 
	$int1 = 38 ; 
	$float1 = 1.732 ; 
	$float2 = 1.4E+2 ; 
	$MyArray1 = array( "子" , "丑" , "寅" , "卯" );
	注意：这里引出两个问题，首先PHP变量以$开头，第二PHP语句以;结尾。没有变量的声明，赋值什么，就是什么。
	
5、运算符号

	(1)数学运算: 符号 意义
	+  加法运算  
	-  减法运算  
	*  乘法运算  
	/  除法运算  
	%  取余数  
	++  累加  
	--  递减
	
	(2)字符串运算
	运算符号只有一个，就是英文的句号。它可以将字符串连接起来，变成合并的新字符串。
	例如：	&lt;?
			$a = "PHP 4" ; 
			$b = "功能强大" ; 
			echo $a.$b; 
			?> 
	注意：这里也引出两个问题：首先PHP中输出语句是echo，第二，PHP中也可以<?=变量?>
	
	(3)逻辑运算: 符号 意义
	<  小于  
	>  大于  
	<=  小于或等于  
	>=  大于或等于  
	==  等于  
	!=  不等于  
	&&  而且 (And)  
	and  而且 (And)  
	||  或者 (Or)  
	or  或者 (Or)  
	xor  异或 (Xor)  
	!  不 (Not)
	
6、php的流程控制

	(1)if..else 循环有三种结构
	
		if (expr) { statement }
		if (expr) { statement1 } else { statement2 }
		if (expr1) { statement1 } elseif(expr2) { statement2 } else { statement3 }
	
	(2)for 循环就单纯只有一种，没有变化
	
		for (expr1; expr2; expr3) { statement }
	
	(3)switch 循环(java中expr只能是int或char，这里好像字符串也OK)
	
		switch (expr) { 
			case expr1: statement1; break; 
			case expr2: statement2; break; 
			default: statementN; break;
		}
	
7、连接数据库

	(1)连接MySQL数据库
		
		打开 MySQL 服务器连接
		语法: int mysql_connect(string [hostname] [:port], string [username], string [password]);
		在使用数据库时，早点使用 mysql_close() 将连接关掉可以节省资源。
		
		选择一个数据库
		语法: int mysql_select_db(string database_name, int [link_identifier]);
		
		以上两个的例子：
		$conn=mysql_connect ("127.0.0.1", "", "");
		mysql_select_db("shop");
		连接机MY SQL数据库，打开SHOP数据库。当然，在实际应用中应当加强点错误判断。
		
	(2)读取数据
	
		语法: int mysql_query(string query, int [link_identifier]);
		语法: object mysql_fetch_object(int result, int [result_typ]);
		
		看个简单的例子：
		&lt;? 
			$exec="select * from user"; 
			$result=mysql_query($exec);
			while($rs=mysql_fetch_object($result))
			{
				echo "username:".$rs->username."<br>"; 
			}
		?>
		当然，表user中有一个username的字段
		
	(2)数据的添加修改删除
		
		单这个语句就可以执行所有的操作了，不同的是传入的语法不一样而已
		添加：$exec="insert into tablename (item1,item2) values ('".$_POST['item1']."',".$_POST['item1'].")";
		删除：$exec="delete from tablename where...";
		修改：$exec="update tablename set item1='".$_POST['item1']."' where ...";
		
8、表单中的数据传递
	
	如果表单中的一个 &lt;input name="item1" type="text" id="item1">
	表单以POST提交的，那么处理表单文件就可以用$_POST['item1']得到变量值
	同样以GET提交的就是$_GET['item1']

9、session的使用

	开启：session_start();
	赋值：$_SESSION['item']="item1"
	取值：$item1=$_SESSION['item'];
	判空：empty($_SESSION['inum']);
	
10、分页显示

	表示当前页的变量：$page(对于$page如果没有我们就让它=0，如果有<0就让它也=0，如果超过了总的页数就让他=总的页数。)
	表示总共的记录数：$num
	
	//得到总共的记录数
	$execc="select count(*) from tablename ";
	$resultc=mysql_query($execc);
	$rsc=mysql_fetch_array($resultc);
	$num=$rsc[0]; 
	
	//得到总页数,一页10条记录
	$pageNum = ceil($num/10));
	
	//那么分页可以这么写
	if(empty($_GET['page'])){
		$page=0;
	}else{
		$page=$_GET['page'];
		if($page<0) {
			$page=0;
		}
		if($page>=ceil($num/10)){
			$page=ceil($num/10)-1;
		}//因为page是从0开始的，所以要-1
	} 
	
	//写数据查询语句时可以这样写
	$exec="select * from tablename limit ".($page*10).",10";
	
	//做几个链接
	&lt;a href="xxx.php?page=0">第一页</a> 
	&lt;a href="xxx.php?page=<?=($page-1)?>">上一页</a> 
	&lt;a href="xxx.php?page=<?=($page+1)?>">下一页</a> 
	&lt;a href="xxx.php?page=<?=ceil($num/10)-1?>">最后一页</a>
	
11、上传文件

	上传文件表单必须加上 enctype="multipart/form-data"
	&lt;input type="file" name="file">这个是表单上传文件的控件
	
	//接受并保存文件
	$f=&$HTTP_POST_FILES['file'];                		//接受文件
	$dest_dir='uploads';                          		//设定上传目录
	$dest=$dest_dir.'/'.date("ymd")."_".$f['name'];		//我这里设置文件名为日期加上文件名避免重复
	$r=move_uploaded_file($f['tmp_name'],$dest);		//把你上传的文件从临时目录移动到指定目录
	chmod($dest, 0755);									//设定上传的文件的属性(具体什么属性不知道，用时再可以查的)
	
12、发邮件

	mail("收件人地址","主题","正文","From:发件人rnReply-to:发件人的地址");
	注意：mail()需要服务器的支持，在WINDOWS下还需要配置SMTP服务器，一般来说外面的LINUX空间都行
	
13、总结

	真心的发出一声感叹，一些语言就是纸老虎
	不过要精通还需久而久而]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>93</wp:post_id>
		<wp:post_date>2012-01-06 15:28:51</wp:post_date>
		<wp:post_date_gmt>2012-01-06 07:28:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>php%e7%ae%80%e5%8d%95%e5%85%a5%e9%97%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[64]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>章节一（相逢何必曾相识，相识便得有缘续）</title>
		<link>http://xuanner.com/wp/2012/01/10/%e7%9b%b8%e9%80%a2%e4%bd%95%e5%bf%85%e6%9b%be%e7%9b%b8%e8%af%86%ef%bc%8c%e7%9b%b8%e8%af%86%e4%be%bf%e5%be%97%e6%9c%89%e7%bc%98%e7%bb%ad/</link>
		<pubDate>Tue, 10 Jan 2012 03:11:27 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=100</guid>
		<description></description>
		<content:encoded><![CDATA[小T急促的给我挂了个电话，大概意思说，要去相亲，让我去凑人数。
我说：别急，什么情况。
他断断续续缠缠绵绵的阐述了事情的来龙去脉。
其实我压根就没整明白，只知道有妞看，我就一口答应了。
他有点害怕胆怯。
我说：放心，咱们主场作战，就约在KTV，最近哥也刚好练了俩嗓子，先压压她们的士气再说。

站在KTV门外，门内整整齐齐排列着四双美腿
我严厉的指责了小T
四个啊四个，你叫我怎么hold的住呢
小T弱弱的说：不是你说要先压压她们的火气的嘛
我张望着门内问小T：那你看上的是哪一个
那个！
哪个？
就那个嘛！
是哪个啊？
门突然嘎吱一声开了，其实门开的并没有声音，我是用强大的内心模拟出了这么一声。
我马上端正衣冠，绅士般的咳嗽一声，很温柔的对小T说：是这里吧。
开门的应该是个女生，因为KTV里就四个人，我凭借超强的推断能力，顾不上看小T和开门的人，就径直进去了。
我打了声招呼，却不知道她们都长什么样，我并不承认我的观察力愚钝，也并不承认我虚了。
我端坐在KTV软软的沙发上，总觉得手脚不听使唤，不知道什么时候，身体好像有些僵硬了。
小T倒是跟她们熟络了起来，因为跟其中一位认识，就像一个气球，只要有一个切入点，所有看似牢固的外表，都将一击而破。

而我，仿佛是看着他们的观众。
小T倒是依依给我介绍了她们的名字，记不住啊。
于是，我用仅存的一丝胆量再撒点莫名的愤怒，对的，我怒了。
我悄悄的点了一首歌曲并切到了列表的最前列。
我淡若的看着她们，我想我可以淡若的，淡若是个蛋东西，当歌曲开始切入刹那。
我知道空气很安静，那时真希望淡若不是蛋东西，因为会很疼。
为什么，视频的曲调跟我的不一样，唱了一半，我可以用余光看到她们似若勉强的笑容，为什么，
这首歌可以如此之长。

音乐停止了，我的心也开始受伤了。
我知道小T是好意，当他在音乐间隙安静的那一瞬间，喊出了估计是我这一生中最难忘的一个好字时。
整个人，我被彻底击败了。

接下来的整个时间，我已不是我，灵魂说我恨铁不成刚，练了一夜的歌居然给唱成这样，用脚指头唱都比我有腔调。它离家出走了。
隐约我只记得那一首《梦醒了》是跟一个女孩一起合唱的。
当音乐响起，灵魂虽已丢，但我还是用我的肉体感动了自己，这一种似感非感，似动未动的境界，我想也许只有我能办到了。

那四个女孩邀请我们去她们家吃饭，灵魂却悄然归位，他说你去吧，仿佛带着一种兴奋的口吻。
我说不去不去，怎么能随随便便去女孩子家吃饭呢。
灵魂依然亢奋的说着：去看看她们的房间嘛。
我说：不去不去。
去吧去吧。
不去不去。
靠，你个伪君子。
我没有说话，有时候，不说话确实是一种默认的好方法。因为这样
我可以依然决然踏上去她们家的公交车，而又可以勉强的不违背自己不知哪来的一套羞涩的矜持。

我勤奋的洗着菜，我说这些小意思嘛。都交给我好了。
她们说，你洗的真干净，很专业嘛。
接下来，灵魂又开始挂机。因为我的行为是那么贤良持家。塑造这种形象我是多么的拿手。
我吃着笑着，笑着吃着，多少笑是真的好笑，多少笑只是一种习惯。傻傻分不清楚。
我只知道，坐在我对面的那个女孩，她端庄的坐着，筷子小心翼翼的接吻着嘴唇，偶尔微笑，让我时而走神。
我不停的把她的样子刻录在脑子中，长卷的头发让她略显成熟，但俏皮的眼神散发着年轻的气息。析白的皮肤，没有化妆的痕迹。
真想上去捏捏她的脸颊。然后。。。然后就没有然后了，我想我还是很纯洁的，这句话可以当真话来听。
灵魂鄙视的看着我，麻木久了，是不是感觉心动很爽啊。
我担忧的说：唉，还不确定呢，我倒地要不要喜欢她呢。好纠结啊。要还是不要呢。
灵魂说：要吧。
不好吧。
喜欢一下又不会死。
再看看吧。
无语的灵魂用两倍鄙视的目光看着我说：你可以去死了，装死你得了。

小T说很晚了，要没车了，怎么办呢。
她们开玩笑的说，要不睡我们客厅吧。
我想：好啊好啊。
我说：我住的挺近的，走走就到了，就不打扰了，明儿还上班呢。
我鄙视着我自己，依依不舍的离开了。

路上小T问我，看上哪个没有啊。
我问小T，那个女孩叫什么名字，他说叫小享。
号码呢？
对，本性就是应该这种时候勇敢的站出来。
他说你上那啥网自己搞定吧。这种事情要自己来。
我郁郁的回家了。
路上我说：到底要不要加她好友呢。
本性说：加呗，加一下又不会死。
我说：会不会太冒昧了。
灵魂这时突然愤怒的说：冒昧你个P。
我说：也对哈。不过。。。
。。。
。。。
。。。]]></content:encoded>
		<excerpt:encoded><![CDATA[小T急促的给我挂了个电话，大概意思说，要去相亲，让我去凑人数。
我说：别急，什么情况。
他断断续续缠缠绵绵的阐述了事情的来龙去脉。
其实我压根就没整明白，只知道有妞看，我就一口答应了。
......]]></excerpt:encoded>
		<wp:post_id>100</wp:post_id>
		<wp:post_date>2012-01-10 11:11:27</wp:post_date>
		<wp:post_date_gmt>2012-01-10 03:11:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%9b%b8%e9%80%a2%e4%bd%95%e5%bf%85%e6%9b%be%e7%9b%b8%e8%af%86%ef%bc%8c%e7%9b%b8%e8%af%86%e4%be%bf%e5%be%97%e6%9c%89%e7%bc%98%e7%bb%ad</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%80%aa%e4%ba%ba%e4%bc%a0%e8%af%b4"><![CDATA[怪人传说]]></category>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[884]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[Todd]]></wp:comment_author>
			<wp:comment_author_email>helloping1980@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://budapestdakar.com</wp:comment_author_url>
			<wp:comment_author_IP>46.251.237.94</wp:comment_author_IP>
			<wp:comment_date>2012-03-17 08:50:01</wp:comment_date>
			<wp:comment_date_gmt>2012-03-17 08:50:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[支持一下！]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>javaandswing@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.160.76.74</wp:comment_author_IP>
			<wp:comment_date>2012-04-11 09:12:14</wp:comment_date>
			<wp:comment_date_gmt>2012-04-11 09:12:14</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[多谢多谢。。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>14</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>章节二（有缘千里能相识，无缘对面也可知）</title>
		<link>http://xuanner.com/wp/2012/01/12/%e6%9c%89%e7%bc%98%e5%8d%83%e9%87%8c%e8%83%bd%e7%9b%b8%e8%af%86%ef%bc%8c%e6%97%a0%e7%bc%98%e5%af%b9%e9%9d%a2%e4%b9%9f%e5%8f%af%e7%9f%a5/</link>
		<pubDate>Thu, 12 Jan 2012 01:15:41 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=109</guid>
		<description></description>
		<content:encoded><![CDATA[点开那啥网，输入小享的名字，我长叹一口气，幸好她用的是真名。
加一下吧，多认识一个人也是好的。
太唐突了，太冒昧了，太轻浮了，就见了一面就要认识人家，会不会觉得很肤浅。
看她相册的照片，真的挺不错。
不行不行，再也伤不起了，完全没有胜算。
错过了会很可惜，就加个好友，大不了换个账号。上次申请的还剩几个没用。
那不行，这种事做多了不好。
。。。
嘀咕嘀咕着，突然面前出现了一张贱贱的笑脸，这次不是幻想。
同事小欣说你怎么跟老太婆一样，整天都念念道道些什么啊。
在受惊之余我流畅的按下Alt+Tab键，把屏幕切回代码处。
那速度，没得比。。。我想很多人都懂的，就像你爸每次进你的房间为什么总是看到你在看电脑桌面一样。
我说，我靠。
此时解释太多反而会更加引起小欣的好奇心。
他见我无趣没再说话，也就不搭理我了。

傻傻坐在一个名叫沙县的沙县等沙县。
我掏出手机又塞回口袋，我又掏出手机塞回口袋。。。
一整天看那些拼拼凑凑的代码，再加上反复循环的纠结，一不小心灵魂就能出窍，然后傻傻的看着我重复的搬运着手机。
那时完全顾不上在芸芸众生之中长时间的暴露诺基亚牌子的手机会多么的霸气侧漏。
以至于沙县老板娘在喊了N遍之后才忽然醒悟，我接过要带走的沙县。走了。
对，我也许还没付钱。
接下来的情节已和谐，但掩盖不住我一颗男人脆弱的心。
我说：一个男人怎么可以被一个女人纠结成这样，长点出息，长点能耐，重在参与嘛，想这么多有毛线用。
夜以深，小小手机屏幕闪现着飞快的字。
我答应自己，只有5分钟，就5分钟，她回了便是她，她不回便不是她。多么清晰霸气的逻辑。
至于之前我是怎么要到她的号码，有没有加她好友之类情节。实属机密无可奉告，那不重要，重要是我确实拿到了。
短信发送的时间是20时03分07秒，在20时08分10秒的时候手机颤抖了，作为一名程序员，只精确到秒是一种及不负责的做法，可惜这不是诺基亚的长项。
诺基亚真正的长项是敲核桃，不够硬你都不好意思拿诺基亚来敲。
扯远了，其实什么5分钟不5分钟的，那都是扯蛋，她回了就好嘛。对，我就是这样说服自己的。
更何况，移动那破信息网肯定也延迟了不少，这样客观原因和主观原因都找全了，谁还反对，那就是对不起全国百姓对不起党，我可以代表全国人民鄙视你。
所以我只好说我信了。

聊着聊着聊着聊着。。。
为什么进度这么快，我的理解是做大事不拘小节，什么故事背景，场景描述，人物造型，当事人记不得了就记不得了嘛。
人们说恋爱中的人是盲目的。而我，还没恋爱，就开始迫不及待的丢了自己。
她说要给我取个小名喊喊。
舍弃为什么要取，怎么取，取了什么，那都不重要，重要的是我想到了该死的偶像剧情景。
每一对恋人对会有属于他们自己的称呼，难道说。。。我豪不客气不知羞耻的说，当时我就这么认为的。
这也是后来为什么会有如此沉重的伤痛的一种重要原因。这句话你可以理解为笔者在透剧，但你千不可万不能理解这是一悲剧的下场。生命因奇迹而光彩。
我说以后我要生女儿，女儿可爱，好打扮，我要让她漂漂亮亮的，然后再嫁给像我这样诚实优秀乐观积极努力懂事。。。的好孩子。
女人的思维难道真的是怪异的。
她说，你怎么重女轻男呢。
我真想说，大姐，可以把侧重点放在后半句否？
当然，在人与人之间第一次的印象很重要，所以我比较绅士的跟她解释了，其实我并不是这样的人。我还是比较开明的一个人。
她说，你真逗。
我很逗吗，这让我想起大学里为什么会有一门叫女人心理学的课，而为什么没有男人心理学。
如果女人心思的复杂度有这样大的话，那么男人心思的复杂度只能有这么大。

一整晚兴奋的不行，就因为要到了她的扣扣号。
好像不是，是我给了扣扣号，她答应加我。
最后一条信息她说，下次扣扣聊。我真的是沉不住气，差点把床蹬崩掉。我可以理解成她对我也有好感吗。
我说：唉，现在压力大了。要是她也真的喜欢我怎么办。其实我还没了解她。万一最后发现我不喜欢她怎么办。
千万不能伤害了人家小姑娘。恩，对。要处理好和她的关系。那我到底要不要喜欢她呢。好难办啊。怎么办啊。
突然灵魂对我说：你就这样臭美狗屁好了，赶紧去撒泡尿照一下。
本性也忍不住说：过了，过了，这下真的过了，不要想太多了。
其实我一直想问，难道我撒完尿，然后再用尿照照自己就能看到真实的自己？我照做了前半句，但没有执行后半句。也不至于无聊到这种地步。

窗外街灯透过侧脸，仿佛一个情愿深陷泥潭的人，从他眼中开始发射明亮的光。
仿佛他宁愿撇下久积忧郁的伤口，开始挣扎着爬向岸边。
仿佛他想再试一次。
]]></content:encoded>
		<excerpt:encoded><![CDATA[点开那啥网，输入小享的名字，我长叹一口气，幸好她用的是真名。
加一下吧，多认识一个人也是好的。
太唐突了，太冒昧了，太轻浮了，就见了一面就要认识人家，会不会觉得很肤浅。
看她相册的照片，真的挺不错。
......]]></excerpt:encoded>
		<wp:post_id>109</wp:post_id>
		<wp:post_date>2012-01-12 09:15:41</wp:post_date>
		<wp:post_date_gmt>2012-01-12 01:15:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%9c%89%e7%bc%98%e5%8d%83%e9%87%8c%e8%83%bd%e7%9b%b8%e8%af%86%ef%bc%8c%e6%97%a0%e7%bc%98%e5%af%b9%e9%9d%a2%e4%b9%9f%e5%8f%af%e7%9f%a5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%80%aa%e4%ba%ba%e4%bc%a0%e8%af%b4"><![CDATA[怪人传说]]></category>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[184]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>sql将查询结果插入表中范例</title>
		<link>http://xuanner.com/wp/2012/02/02/sql%e5%b0%86%e6%9f%a5%e8%af%a2%e7%bb%93%e6%9e%9c%e6%8f%92%e5%85%a5%e8%a1%a8%e4%b8%ad%e8%8c%83%e4%be%8b/</link>
		<pubDate>Thu, 02 Feb 2012 05:54:47 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=121</guid>
		<description></description>
		<content:encoded><![CDATA[insert into ex_sync_school(school_id) select id from eb_school]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>121</wp:post_id>
		<wp:post_date>2012-02-02 05:54:47</wp:post_date>
		<wp:post_date_gmt>2012-02-02 05:54:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>sql%e5%b0%86%e6%9f%a5%e8%af%a2%e7%bb%93%e6%9e%9c%e6%8f%92%e5%85%a5%e8%a1%a8%e4%b8%ad%e8%8c%83%e4%be%8b</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%95%b0%e6%8d%ae%e5%ba%93"><![CDATA[数据库]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[87]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>WorldPress数据库连接信息修改</title>
		<link>http://xuanner.com/wp/2012/03/10/worldpress%e6%95%b0%e6%8d%ae%e5%ba%93%e8%bf%9e%e6%8e%a5%e4%bf%a1%e6%81%af%e4%bf%ae%e6%94%b9/</link>
		<pubDate>Sat, 10 Mar 2012 15:24:59 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=170</guid>
		<description></description>
		<content:encoded><![CDATA[只要在修改wp_admin/wp-config.php文件中的配置信息即可，文件注释很详细。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>170</wp:post_id>
		<wp:post_date>2012-03-10 15:24:59</wp:post_date>
		<wp:post_date_gmt>2012-03-10 15:24:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>worldpress%e6%95%b0%e6%8d%ae%e5%ba%93%e8%bf%9e%e6%8e%a5%e4%bf%a1%e6%81%af%e4%bf%ae%e6%94%b9</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="worldpress"><![CDATA[WorldPress]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[44]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>简单简洁的框框</title>
		<link>http://xuanner.com/wp/2012/03/10/%e6%af%94%e8%be%83%e5%a5%bd%e7%9a%84%e6%a1%86%e6%a1%86%ef%bc%88%e6%ac%a3%e6%ac%a3%e5%81%b7%e6%9d%a5%e7%9a%84%ef%bc%89/</link>
		<pubDate>Sat, 10 Mar 2012 16:13:07 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=182</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;fieldset&gt;
&lt;legend&gt;标题&lt;/legend&gt;
&lt;div style="”background: #f0f0f0; height: 300px”;"&gt;正文&lt;/div&gt;
&lt;/fieldset&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>182</wp:post_id>
		<wp:post_date>2012-03-10 16:13:07</wp:post_date>
		<wp:post_date_gmt>2012-03-10 16:13:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%af%94%e8%be%83%e5%a5%bd%e7%9a%84%e6%a1%86%e6%a1%86%ef%bc%88%e6%ac%a3%e6%ac%a3%e5%81%b7%e6%9d%a5%e7%9a%84%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="jshtml"><![CDATA[JS/HTML/CSS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[50]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>FF和Chrome下js Date的getYear()取值不对</title>
		<link>http://xuanner.com/wp/2012/03/10/ff%e5%92%8cchrome%e4%b8%8bjs-date%e7%9a%84getyear%e5%8f%96%e5%80%bc%e4%b8%8d%e5%af%b9/</link>
		<pubDate>Sat, 10 Mar 2012 16:27:03 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=189</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;script&gt;  date=new Date();    var  year=date.getFullYear();    alert(year);&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>189</wp:post_id>
		<wp:post_date>2012-03-10 16:27:03</wp:post_date>
		<wp:post_date_gmt>2012-03-10 16:27:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ff%e5%92%8cchrome%e4%b8%8bjs-date%e7%9a%84getyear%e5%8f%96%e5%80%bc%e4%b8%8d%e5%af%b9</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="jshtml"><![CDATA[JS/HTML/CSS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[112]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>web.xml中context-param和init-param区别</title>
		<link>http://xuanner.com/wp/2012/03/10/web-xml%e4%b8%adcontext-param%e5%92%8cinit-param%e5%8c%ba%e5%88%ab/</link>
		<pubDate>Sat, 10 Mar 2012 08:56:17 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=192</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>1、context-param是application范围内的参数，存放在servletcontext中，在web.xml配置如下</strong>
&lt;context-param&gt;
&lt;param-name&gt;context/param&lt;/param-name&gt;
&lt;param-value&gt;avalible during application&lt;/param-value&gt;
&lt;/context-param&gt;
在servlet里面可以通过getServletContext().getInitParameter(“context/param”)得到

<strong>2、init-param是servlet范围内的参数，只能在servlet的init()方法中取得，在web.xml中配置如下：</strong>
&lt;servlet&gt;
&lt;servlet-name&gt;MainServlet&lt;/servlet-name&gt;
&lt;servlet-class&gt;com.wes.controller.MainServlet&lt;/servlet-class&gt;
&lt;init-param&gt;
&lt;param-name&gt;param1&lt;/param-name&gt;
&lt;param-value&gt;avalible in servlet init()&lt;/param-value&gt;
&lt;/init-param&gt;
&lt;/servlet&gt;
只能在servlet的init()方法中通过this.getInitParameter(“param1″)取得]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>192</wp:post_id>
		<wp:post_date>2012-03-10 16:56:17</wp:post_date>
		<wp:post_date_gmt>2012-03-10 08:56:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>web-xml%e4%b8%adcontext-param%e5%92%8cinit-param%e5%8c%ba%e5%88%ab</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[47]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>容器(如：Tomcat)启动对web.xml的处理</title>
		<link>http://xuanner.com/wp/2012/03/10/%e5%ae%b9%e5%99%a8%e5%a6%82%ef%bc%9atomcat%e5%90%af%e5%8a%a8%e5%af%b9web-xml%e7%9a%84%e5%a4%84%e7%90%86/</link>
		<pubDate>Sat, 10 Mar 2012 09:02:30 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=195</guid>
		<description></description>
		<content:encoded><![CDATA[1. 启动一个WEB项目的时候,容器(如:Tomcat)会去读它的配置文件web.xml.读两个节点: &lt;listener&gt;&lt;/listener&gt; 和 &lt;context-param&gt;&lt;/context-param&gt;
2.紧接着,容器创建一个ServletContext(上下文),这个WEB项目所有部分都将共享这个上下文.
3.容器将&lt;context-param&gt;&lt;/context-param&gt;转化为键值对,并交给ServletContext.
4.容器创建&lt;listener&gt;&lt;/listener&gt;中的类实例,即创建监听.
5.在监听中会有contextInitialized(ServletContextEvent args)初始化方法,在这个方法中获得ServletContext = ServletContextEvent.getServletContext();
context-param的值 = ServletContext.getInitParameter(“context-param的键”);
6.得到这个context-param的值之后,你就可以做一些操作了.注意,这个时候你的WEB项目还没有完全启动完成.这个动作会比所有的Servlet都要早.
换句话说,这个时候,你对&lt;context-param&gt;中的键值做的操作,将在你的WEB项目完全启动之前被执行.
7.举例.你可能想在项目启动之前就打开数据库.
那么这里就可以在&lt;context-param&gt;中设置数据库的连接方式,在监听类中初始化数据库的连接.
8.这个监听是自己写的一个类,除了初始化方法,它还有销毁方法.用于关闭应用前释放资源.比如说数据库连接的关闭。
如:
&lt;!– 加载spring的配置文件 –&gt;
&lt;context-param&gt;
&lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;
&lt;param-value&gt;/WEB-INF/applicationContext.xml,/WEB-INF/action-servlet.xml,/WEB-
INF/jason-servlet.xml&lt;/param-value&gt;
&lt;/context-param&gt;
&lt;listener&gt;
&lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;
&lt;/listener&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>195</wp:post_id>
		<wp:post_date>2012-03-10 17:02:30</wp:post_date>
		<wp:post_date_gmt>2012-03-10 09:02:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%ae%b9%e5%99%a8%e5%a6%82%ef%bc%9atomcat%e5%90%af%e5%8a%a8%e5%af%b9web-xml%e7%9a%84%e5%a4%84%e7%90%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[33]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>静态变量先声明再赋值</title>
		<link>http://xuanner.com/wp/2012/03/11/%e9%9d%99%e6%80%81%e5%8f%98%e9%87%8f%e5%85%88%e5%a3%b0%e6%98%8e%e5%86%8d%e8%b5%8b%e5%80%bc/</link>
		<pubDate>Sun, 11 Mar 2012 10:23:35 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=198</guid>
		<description></description>
		<content:encoded><![CDATA[如果在类中有：
static{
i=100;
}
private static int i=0;
system.out.print("i="+i);

首先可以肯定的，编译绝对可以通过，且i=0。因为JVM处理int i=0;时会先声明int i;然后从上到下赋值，先i=100;再i=0;所以最后输出的是i=0哦。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>198</wp:post_id>
		<wp:post_date>2012-03-11 10:23:35</wp:post_date>
		<wp:post_date_gmt>2012-03-11 10:23:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%9d%99%e6%80%81%e5%8f%98%e9%87%8f%e5%85%88%e5%a3%b0%e6%98%8e%e5%86%8d%e8%b5%8b%e5%80%bc</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[40]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>java中String池</title>
		<link>http://xuanner.com/wp/2012/03/11/java%e4%b8%adstring%e6%b1%a0/</link>
		<pubDate>Sun, 11 Mar 2012 10:38:21 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=200</guid>
		<description></description>
		<content:encoded><![CDATA[如果类中有：
String str1="xuan";
String str2="xuan";
String str3=new String("xuan");
String str4=str3.intern();
system.out.print(str1==str2);
system.out.print(str1==str3);
system.out.print(str1==str4);

先看结果分别是：ture，false，true。Java中凡是String str1="xuan";这样产生的串都会被放在一个String池里 ，下次如果要产生串了，就先去String池了找有没有现成一样的，明显str1和str2是同一个引用。但String str3=new String("xuan");产生的不会放到String池里，所以str1和str3不会是用一个引用。intern()是判断由new产生的String是否在String池里有，如果有就返回那个池中的引用，如果没有就把这个引用加到String池中去，所以str1和str4是String池中的用一个引用。（PS:不用担心引用被多次使用而造成数据的混乱，String被设置成不可继承和不可修改的，所以如果str1="anan";这样赋值了不是改String引用的内容，而是直接修改了引用，指向另一个引用了）]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>200</wp:post_id>
		<wp:post_date>2012-03-11 10:38:21</wp:post_date>
		<wp:post_date_gmt>2012-03-11 10:38:21</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>java%e4%b8%adstring%e6%b1%a0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[44]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>在拼接字符串时注意摆放的位置</title>
		<link>http://xuanner.com/wp/2012/03/11/%e5%9c%a8%e6%8b%bc%e6%8e%a5%e5%ad%97%e7%ac%a6%e4%b8%b2%e6%97%b6%e6%b3%a8%e6%84%8f%e6%91%86%e6%94%be%e7%9a%84%e4%bd%8d%e7%bd%ae/</link>
		<pubDate>Sun, 11 Mar 2012 10:44:31 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=202</guid>
		<description></description>
		<content:encoded><![CDATA[如果在类中有：
String str1=1+2+"xuan";
system.out.print(str1);
String str2="xuan"+1+2;
system.out.print(str2);

输出：3xuan和xuan12。结果不一样是因为，java中+的符号是这样认为的，当遇到String时，之后的类型都转成String然后拼接（基本类型就直接拼接，如果是对象就toString()后再拼接）。所以，str1是先遇到1和2数字加之再遇到"xuan"时拼接之。而str2是先遇到"xuan"所有后面的都直接拼接之。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>202</wp:post_id>
		<wp:post_date>2012-03-11 10:44:31</wp:post_date>
		<wp:post_date_gmt>2012-03-11 10:44:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8%e6%8b%bc%e6%8e%a5%e5%ad%97%e7%ac%a6%e4%b8%b2%e6%97%b6%e6%b3%a8%e6%84%8f%e6%91%86%e6%94%be%e7%9a%84%e4%bd%8d%e7%bd%ae</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[36]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Java中多线程的优先级最好只用3个</title>
		<link>http://xuanner.com/wp/2012/03/11/java%e4%b8%ad%e5%a4%9a%e7%ba%bf%e7%a8%8b%e7%9a%84%e4%bc%98%e5%85%88%e7%ba%a7%e6%9c%80%e5%a5%bd%e5%8f%aa%e7%94%a83%e4%b8%aa/</link>
		<pubDate>Sun, 11 Mar 2012 10:48:23 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=204</guid>
		<description></description>
		<content:encoded><![CDATA[Java中多线程的优先级有10个等级，但不是说优先级高的不一定会被先执行。他的优先级定义是：哪个等级高，在抢在CPU的概率就高。这也就说明了，概率高不一定就先执行。所以最好只用0,5,10这个三个等级。这样可以确保我们想要的效果。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>204</wp:post_id>
		<wp:post_date>2012-03-11 10:48:23</wp:post_date>
		<wp:post_date_gmt>2012-03-11 10:48:23</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>java%e4%b8%ad%e5%a4%9a%e7%ba%bf%e7%a8%8b%e7%9a%84%e4%bc%98%e5%85%88%e7%ba%a7%e6%9c%80%e5%a5%bd%e5%8f%aa%e7%94%a83%e4%b8%aa</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[64]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ThreadPoolExecutor线程池</title>
		<link>http://xuanner.com/wp/2012/03/11/threadpoolexecutor%e7%ba%bf%e7%a8%8b%e6%b1%a0/</link>
		<pubDate>Sun, 11 Mar 2012 15:21:35 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=207</guid>
		<description></description>
		<content:encoded><![CDATA[线程池类为 java.util.concurrent.ThreadPoolExecutor，常用构造方法为：
ThreadPoolExecutor(int corePoolSize, int maximumPoolSize,
long keepAliveTime, TimeUnit unit,
BlockingQueue&lt;Runnable&gt; workQueue,
RejectedExecutionHandler handler)

参数解释：
corePoolSize： 线程池维护线程的最少数量
maximumPoolSize：线程池维护线程的最大数量
keepAliveTime： 线程池维护线程所允许的空闲时间
unit： 线程池维护线程所允许的空闲时间的单位
workQueue： 线程池所使用的缓冲队列
handler： 线程池对拒绝任务的处理策略

一个任务通过 execute(Runnable runable)方法被添加到线程池。所谓任务就是一个继承Runnable接口类的对象，任务的执行方法就是 Runnable类型对象的run()方法。

当一个任务通过execute(Runnable)方法欲添加到线程池时：

1、如果此时线程池中的数量小于corePoolSize，即使线程池中的线程都处于空闲状态，也要创建新的线程来处理被添加的任务。

2、如果此时线程池中的数量等于 corePoolSize，但是缓冲队列 workQueue未满，那么任务被放入缓冲队列。
<p align="left">3、如果此时线程池中的数量大于corePoolSize，缓冲队列workQueue满，并且线程池中的数量小于maximumPoolSize，建新的线程来处理被添加的任务。</p>
<p align="left">4、如果此时线程池中的数量大于corePoolSize，缓冲队列workQueue满，并且线程池中的数量等于maximumPoolSize，那么通过 handler所指定的策略来处理此任务。</p>
<p align="left">5、当线程池中的线程数量大于 corePoolSize时，如果某线程空闲时间超过keepAliveTime，线程将被终止。这样，线程池可以动态的调整池中的线程数。</p>
<p align="left">另外常用选择：</p>
<p align="left">1、unit可选的参数为java.util.concurrent.TimeUnit中的几个静态属性：
NANOSECONDS、MICROSECONDS、MILLISECONDS、SECONDS。</p>
<p align="left">2、workQueue常用的是：java.util.concurrent.ArrayBlockingQueue

3、handler有四个选择：
(1)ThreadPoolExecutor.AbortPolicy()
抛出java.util.concurrent.RejectedExecutionException异常
(2)ThreadPoolExecutor.CallerRunsPolicy()
重试添加当前的任务，他会自动重复调用execute()方法
(3)ThreadPoolExecutor.DiscardOldestPolicy()
抛弃旧的任务
(4)ThreadPoolExecutor.DiscardPolicy()
抛弃当前的任务

</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>207</wp:post_id>
		<wp:post_date>2012-03-11 15:21:35</wp:post_date>
		<wp:post_date_gmt>2012-03-11 15:21:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>threadpoolexecutor%e7%ba%bf%e7%a8%8b%e6%b1%a0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[31]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JS创建一个现实HTML的对话框</title>
		<link>http://xuanner.com/wp/2012/03/12/js%e5%88%9b%e5%bb%ba%e4%b8%80%e4%b8%aa%e7%8e%b0%e5%ae%9ehtml%e7%9a%84%e5%af%b9%e8%af%9d%e6%a1%86/</link>
		<pubDate>Mon, 12 Mar 2012 09:45:42 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=210</guid>
		<description></description>
		<content:encoded><![CDATA[模式对话框: var myArgs = window.showModalDialog(url, [param], [feature]);
非模式对话框: var myArgs = window.showModalessDialog(url, [param], [feature]);

参数介绍:
url: 必选，要现实内容的地址
[param]: 可选，向对话框传参数，对话框用window.dialogArguments获取
[feature]: 描述对话框
描述对话框的参数介绍:
1.dialogHeight: 对话框高度，不小于100px
2.dialogWidth: 对话框宽度。
3.dialogLeft: 离屏幕左的距离。
4.dialogTop: 离屏幕上的距离。
5.center:{ yes | no | 1 | 0 }: 是否居中，默认yes，但仍可以指定高度和宽度。
6.help:  {yes | no | 1 | 0 }: 是否显示帮助按钮，默认yes。
7.resizable: {yes | no | 1 | 0 } [IE5+]: 是否可被改变大小。默认no。
8.status: {yes | no | 1 | 0 } [IE5+]: 是否显示状态栏。默认为yes[ Modeless]或no[Modal]。
9.scroll:{ yes | no | 1 | 0 | on | off }: 是否显示滚动条。默认为yes。

PS: 1.模式对话框就是处理本对话框就不能处理父对话框，非模式就是能
2.如果在对话框中设置window.returnValue="xuan"，那么myArgs.toString就可以去到"xuan"
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>210</wp:post_id>
		<wp:post_date>2012-03-12 09:45:42</wp:post_date>
		<wp:post_date_gmt>2012-03-12 09:45:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>js%e5%88%9b%e5%bb%ba%e4%b8%80%e4%b8%aa%e7%8e%b0%e5%ae%9ehtml%e7%9a%84%e5%af%b9%e8%af%9d%e6%a1%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="jshtml"><![CDATA[JS/HTML/CSS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[48]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Java中的4种引用</title>
		<link>http://xuanner.com/wp/2012/03/13/java%e4%b8%ad%e7%9a%844%e7%a7%8d%e5%bc%95%e7%94%a8/</link>
		<pubDate>Tue, 13 Mar 2012 09:44:26 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=214</guid>
		<description></description>
		<content:encoded><![CDATA[1、强引用
一般通过Date date = new Date();这样实现，如果对象还持有引用，不会被JVM回收。

2、软引用
如果JVM发现内存不够就会回收软引用所有持有的对象，回收了还不够那就报OutOfMemory异常
private SoftReference dataRef;
dataRef = new SoftReference(new byte[1024*1024]);
可以这样使用，当然由于引用有可能会被回收，每次最好
byte[] dataArray = dataRef.get();
判断dataArray是否还存在

3、弱引用
到JVM回收垃圾时，无论弱引用持有的对象不否还在，也回收。
用WeakReference表示，在集合类哈希表中用的比较多，哈希表一般会持有很多对象，所以应用弱应用。
不然哈希表不回收所有被持有的对象也不会被回收了。

4、幽灵引用(PhantomReference)
Object中有个finalize方法，在对象被回收之前会调用。但是JVM回收是不确定性的，所有finalize什么时候被调用也变得不确定。
幽灵引用的对象在被调用finalize方法后这个幽灵引用会被加到一个队列中去，所以我们可以根据检查队列，确定finalize方法是否
被调用过是否对象将被回收。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>214</wp:post_id>
		<wp:post_date>2012-03-13 09:44:26</wp:post_date>
		<wp:post_date_gmt>2012-03-13 09:44:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>java%e4%b8%ad%e7%9a%844%e7%a7%8d%e5%bc%95%e7%94%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[34]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Tomcat乱码server.xml配置</title>
		<link>http://xuanner.com/wp/2012/03/13/tomcat%e4%b9%b1%e7%a0%81server-xml%e9%85%8d%e7%bd%ae/</link>
		<pubDate>Tue, 13 Mar 2012 07:07:04 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=216</guid>
		<description></description>
		<content:encoded><![CDATA[在配置端口的地方，加上useBodyEncodingForURI="true"这个属性即可以，好像只解决get请求的乱码，至于如果post有乱码，可以另寻办法，一般页面和服务器的编码最好统一：

例子：
&lt;Connector port="8080" protocol="HTTP/1.1" connectionTimeout="20000" redirectPort="8443" useBodyEncodingForURI="true"/&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>216</wp:post_id>
		<wp:post_date>2012-03-13 15:07:04</wp:post_date>
		<wp:post_date_gmt>2012-03-13 07:07:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tomcat%e4%b9%b1%e7%a0%81server-xml%e9%85%8d%e7%bd%ae</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[75]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>单例模式</title>
		<link>http://xuanner.com/wp/2012/03/13/%e5%8d%95%e4%be%8b%e6%a8%a1%e5%bc%8f/</link>
		<pubDate>Tue, 13 Mar 2012 15:25:20 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=220</guid>
		<description></description>
		<content:encoded><![CDATA[1、定义
确保某一个类只有一个实例，而且自行实例化并向整个系统提供这个实例。

2、代码示例
[java]
public class SingleTest{
  private static final SingleTest single = new SingleTest();

  private SingleTest(){}

  public static SingleTest getInstance(){
    return single;
  }
}
[/java]

3、示例代码补充
（1）构造函数用private修饰防止被外部new实例化，但如果用反射setAccessible()方法设置获取权限，还是能被实例化的。
（2）如果在获取实例的方法中实例化对象，小心线程安全性，因为多线程共用一个实例。
（3）可以扩展多个实例模式。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>220</wp:post_id>
		<wp:post_date>2012-03-13 15:25:20</wp:post_date>
		<wp:post_date_gmt>2012-03-13 15:25:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%8d%95%e4%be%8b%e6%a8%a1%e5%bc%8f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f"><![CDATA[设计模式]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[52]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>工厂模式</title>
		<link>http://xuanner.com/wp/2012/03/13/%e5%b7%a5%e5%8e%82%e6%a8%a1%e5%bc%8f/</link>
		<pubDate>Tue, 13 Mar 2012 15:54:46 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=223</guid>
		<description></description>
		<content:encoded><![CDATA[1、定义
定义一个用于创建对象的接口，让子类决定实例化哪一个类。工厂方法使一个类的实例化延迟到其子类。

2、Spring的Ioc就是这个模式，先来个静态工厂模式（不用反射）代码示例
[java]
//定义一个产品要继承的接口
public interface Product(){
  public void doSomting();
}

//具体产品1
public class ConcreteProduct1 implements Product(){
  @Override
  public void doSomting(){
    system.out.println("我是产品1");
  }
}

//具体产品2
public class ConcreteProduct2 implements Product(){
  @Override
  public void doSomting(){
    system.out.println("我是产品2");
  }
}

//最后定义一个工厂类
public class Factory(){
  public static Product getProduct(String name){
    if("product1".equals(name)){
      return (Product)new ConcreteProduct1();
    }else if("product2".equals(name)){
      return (Product)new ConcreteProduct2();
    }
  }
}
[/java]

3、示例代码补充
（1）这样，有几个产品在工厂类里定义一下就可以，用时只要：
Product product = Factory.getProduct("product1");这样获取就可以
（2）当然，工厂可以改进，用反射，这样在添加产品时就不用修改工厂类了，如：
[java]
public class Factory(){
  public T getProduct(Class c){
    Product product = null;

    try{
      product = (Product)Class.forName(c.getName()).newInstance();
    }catch(Exception e){
      //ignore
    }

    return (T)product;
  }
}
[/java]
（3）这里用到了泛型，表示所有继承Product接口的实例。这样在要用的时候可以这样实例化：Product product = Factory.getProduct(ConcreteProduct1.class);哈哈，是不是很简单，当然这个只是原理，实例应用可以变种和完善。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>223</wp:post_id>
		<wp:post_date>2012-03-13 15:54:46</wp:post_date>
		<wp:post_date_gmt>2012-03-13 15:54:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%b7%a5%e5%8e%82%e6%a8%a1%e5%bc%8f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f"><![CDATA[设计模式]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[58]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Hashtable和HashMap以及ConcurrentHashMap的比较</title>
		<link>http://xuanner.com/wp/2012/03/14/hashtable%e5%92%8chashmap%e4%bb%a5%e5%8f%8aconcurrenthashmap%e7%9a%84%e6%af%94%e8%be%83/</link>
		<pubDate>Wed, 14 Mar 2012 02:50:19 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=225</guid>
		<description></description>
		<content:encoded><![CDATA[1、HashMap首先是线程不安全的，所以在多线程并发访问时要进行加锁处理
2、Hashtable是线程安全的，但是比较老，性能不行
3、ConcurrentHashMap是JDK1.5后添加的，线程安全，性能比较好

比较Hashtable和ConcurrentHashMap如下：
因为每次一个线程访问Hashtable，都会锁住整个哈希表，性能可见一斑了。而ConcurrentHashMap用的桶锁机制，就比如说把一个ConcurrentHashMap分成16个桶锁，这样理论上可有同时16个线程访问ConcurrentHashMap，比起每次只能有一个线程访问Hashtable的性能当然要好的多。当然实际没这么多。至于怎么实现桶锁的，另查资料看，这里只做一下区别。所有以后在并发高的程序里，用ConcurrentHashMap比较好。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>225</wp:post_id>
		<wp:post_date>2012-03-14 02:50:19</wp:post_date>
		<wp:post_date_gmt>2012-03-14 02:50:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>hashtable%e5%92%8chashmap%e4%bb%a5%e5%8f%8aconcurrenthashmap%e7%9a%84%e6%af%94%e8%be%83</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[38]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Vector和ArrayList以及CopyOnWriteArrayList区别</title>
		<link>http://xuanner.com/wp/2012/03/14/vector%e5%92%8carraylist%e4%bb%a5%e5%8f%8acopyonwritearraylist%e5%8c%ba%e5%88%ab/</link>
		<pubDate>Wed, 14 Mar 2012 03:09:34 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=228</guid>
		<description></description>
		<content:encoded><![CDATA[1、ArrayList是线程不安全的
2、Vector是比较古老的线程安全的，但性能不行
3、CopyOnWriteArrayList在兼顾了线程安全的同时，又提高了并发性所以性能比Vector就好多了，可以从他的命名上看出些端倪

插一句：
LinkedList也是线程不安全的，他和ArrayList的区别的基于不用数据结构实现，LinkedList基于链表实现，ArrayList基于线性表实现。所以LinkedList添加删除性能好，便利某个元素不行。ArrayList添加删除性能不好，便利某个元素效率高。你自己看着办。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>228</wp:post_id>
		<wp:post_date>2012-03-14 03:09:34</wp:post_date>
		<wp:post_date_gmt>2012-03-14 03:09:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>vector%e5%92%8carraylist%e4%bb%a5%e5%8f%8acopyonwritearraylist%e5%8c%ba%e5%88%ab</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[123]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Queue接口的用法</title>
		<link>http://xuanner.com/wp/2012/03/14/queue%e7%9a%84%e7%94%a8%e6%b3%95/</link>
		<pubDate>Wed, 14 Mar 2012 03:24:42 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=230</guid>
		<description></description>
		<content:encoded><![CDATA[Queue实现了数据结构中队列的概念，java5新添加的
1、插入元素时用add或offer,不过offer方法比较优，尽量用这个
2、删除用remove方法
3、查看并移除用poll方法
4、查看但是不移除用element或poll方法]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>230</wp:post_id>
		<wp:post_date>2012-03-14 03:24:42</wp:post_date>
		<wp:post_date_gmt>2012-03-14 03:24:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>queue%e7%9a%84%e7%94%a8%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[50]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>ThreadLocal的浅淡</title>
		<link>http://xuanner.com/wp/2012/03/14/threadlocal%e7%9a%84%e6%b5%85%e6%b7%a1/</link>
		<pubDate>Wed, 14 Mar 2012 06:09:47 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=233</guid>
		<description></description>
		<content:encoded><![CDATA[ThreadLocal并不是一个Thread，而是Thread的局部变量
比如某一个公共资源，会被多线程访问到，而要求这个资源不同线程都有它自己的副本，就是修改了不会影响别的线程的自己的该资源，就可以用ThreadLocal存放。

主要可用方法：
(1)set方法，将当前线程自己的副本值设置进去
(2)get方法，获取当前线程自己的副本值
(3)remove方法，移除当前线程的副本值，不是必须的，因为JVM回收机制会自动回收，但用了可以加快回收
(4)initialValue初始化方法，第一次调get方法时会调用，但如果之前调过set方法就是不会执行了，此方法只调一次，但如果remove过后，可能还会被调用。
还有注意的是此方法时protected的就是让子类重写，如果不重写默认初始时null

实现原理：
ThreadLocal类内部其实定义了一个ThreadLocalMap用来存放不同线程的副本值。
如果get方法大概可以这样实现：
Thread curThread = Thread.currentThread();//获取当前线程
Object o = values.get(curThread);//去ThreadLocalMap中取对应的本线程的对应副本值
if (o == null &amp;&amp; !values.containsKey(curThread))//如第一取副本值没有set过，就调用上面说到的initialValue初始化方法
{
o = initialValue();
values.put(curThread, o);
}
return o;

set方法可以这样实现：
values.put(Thread.currentThread(), newValue); 
当然这里的values是一个全局的ThreadLocalMap，而且注意是要保证线程安全的，如可以这样定义
private Map values = Collections.synchronizedMap(new HashMap()); ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>233</wp:post_id>
		<wp:post_date>2012-03-14 06:09:47</wp:post_date>
		<wp:post_date_gmt>2012-03-14 06:09:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>threadlocal%e7%9a%84%e6%b5%85%e6%b7%a1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[28]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JDBC浅谈</title>
		<link>http://xuanner.com/wp/2012/03/14/jdbc%e6%b5%85%e8%b0%88/</link>
		<pubDate>Wed, 14 Mar 2012 07:21:16 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=236</guid>
		<description></description>
		<content:encoded><![CDATA[JDBC就是一套协议接口，具体实现是由不同数据库厂家实现的
常用方法的就纯JAVA本地协议驱动，由数据库厂家实现

<strong>JDBC的API</strong>
1、java.sql.Driver接口, 它的实现类就代码驱动程序
2、DriverManger类, 创建Connection的一个工厂类
3、Connection接口, 不同数据会产生不同连接
4、Statement接口, 用于发送和执行Sql的数据库操作对象
5、ResultSet接口, 返回的结果集
6、Types类, 数据类型

<strong>JDBC应用步骤</strong>
1、注册驱动，即加载驱动的类，常用如：
String driver = "oracle.jdbc.driver.OracleDriver";
Class.forName(driver);
2、建立连接，常用如：
String url = "jdbc:oracle:thin:@192.168.0.103:1521:tarena";
Stirng username = "root";
String password = "zdsoft";
Connection con = DriverManager.getConnection(url,username,password);
DriverManager类中的getConnection方法其实把参数传到Driver中的connect()方法来实现的
3、用Connection创建一个Statement
4、处理返回的ResultSet集
5、关闭连接，注意按顺序先关闭ResultSet，Statement，Connection

<strong>不同数据库的URL格式</strong>
1、oracle的，其中tarena是数据库名：
jdbc:oracle:thin:@192.168.0.103:1521:tarena
2、MySql的：
jdbc:mysql://192.168.0.103:3306/test
3、SQLServer的：
jdbc:microsoft:sqlserver://192.168.0.103:1433

用比较先进PreparedStatement类执行Sql，它可以用?代替参数，它会先将带参语句发给数据库预编译，以后每次只要
传入参数执行一下就可以，如果有多条同一个类型参数不同的语法，那这个会大大提高效率。因为第一次预编译好，接下来
都可以用。

CallableStatement执行数据库的存储过程或方法，例子如下：
CallableStatement cstmt = con.prepareCall("{call getTestData(?, ?)}");
设置返回类型：
cstmt.registerOutParameter(1, java.sql.Types.TINYINT);
设置输入值：
cstmt.setByte(1, 25);
执行：
cstmt.executeQuery();
得到返回值：
byte x = cstmt.getByte(1);
具体方法可查询JDBC的API

<strong>结果集元数据</strong>
ResultSet rs = ps.executeQuery(sql);
ResultSetMetaData m = rs.getMetaData();
getColumnCount();//获取实际列数
getColumnName(int column);//获得指定行列名
getColumnType(int column);//获得指定行数据类型
getColumnTypeName(int column);//获得指定行数据类型名

<strong>JDBC的事务控制</strong>
JDBC的事务控制控制在Connection，一般默认会自动提交，如果要手动控制先设置
con.setAutoCommite(false);
然后执行一些语句，再在try语块里
con.commit()；即可
如果提交失败，就可以在catch中回滚如
con.rollback();]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>236</wp:post_id>
		<wp:post_date>2012-03-14 07:21:16</wp:post_date>
		<wp:post_date_gmt>2012-03-14 07:21:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jdbc%e6%b5%85%e8%b0%88</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[46]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Java反射常用API</title>
		<link>http://xuanner.com/wp/2012/03/14/java%e5%8f%8d%e5%b0%84%e5%b8%b8%e7%94%a8api/</link>
		<pubDate>Wed, 14 Mar 2012 11:41:27 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=240</guid>
		<description></description>
		<content:encoded><![CDATA[在JVM维护每个类都有一个Class对象，而我们可以用Class对象操作一些方法，这样就可以清楚的知道，每个类的内部结构，既传说中在运行时可以得到类的内部结构，并动态的生成类的实例等。<strong>反射性能不好</strong>，要衡量着用。<strong>但反射能绕过例如private这个修饰的限制</strong>，只要在获取到对应的Constuctor或Field或Method对象时调用setAccessible设置true即可。

举例有一个类：
class MyClass{
public int count;
pubic MyClass(int n){
count = n;
}
public void increase(int m){
count = count+m;
}
}
我们可以这样得到这个类的类对象：
Class myClass = MyClass.class;
获取构造方法：
Constructor constructor = myClass.getConstructor(int.class);
创建对象：
MyClass m = constructor.newInstance(10);
获取方法：
Method method = myClass.getMethod("increase",int.class);
调用方法：
method.invoke(m,5);
获取变量域：
Field field = myClass.getField("count");
获取域的值
int n = field.getInt(m);

用<strong>getDeclaredXXX</strong>这样获取不会获取到父类的，只获取自身声明。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>240</wp:post_id>
		<wp:post_date>2012-03-14 11:41:27</wp:post_date>
		<wp:post_date_gmt>2012-03-14 11:41:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>java%e5%8f%8d%e5%b0%84%e5%b8%b8%e7%94%a8api</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[48]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>BDCP数据连接池的使用</title>
		<link>http://xuanner.com/wp/2012/03/15/bdcp%e6%95%b0%e6%8d%ae%e8%bf%9e%e6%8e%a5%e6%b1%a0%e7%9a%84%e4%bd%bf%e7%94%a8/</link>
		<pubDate>Thu, 15 Mar 2012 05:32:04 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=242</guid>
		<description></description>
		<content:encoded><![CDATA[dbcp是apache下的一个开源，对数据库连接的管理，在用jdbc时，可以代替DriverManage这个类的作用。

首先依赖的jar有3个：
commons-dbcp-1.4-bin
commons-collections-3.2.1-bin
commons-pool-1.6-bin

配置文件的介绍：
#连接设置
driverClassName=com.mysql.jdbc.Driver
url=jdbc:mysql://localhost:3306/test
username=root
password=mysql
#初始化连接
initialSize=10
#最大连接数量，若连接数超过，被挂起等待
maxActive=50
#最大空闲连接，如果池中超过20个空闲连接，就释放掉多余的只保留20个
maxIdle=20
#最小空闲连接
minIdle=5
#超时等待时间以毫秒为单位 6000毫秒/1000等于60秒，不配置的话会无限制等待下去，很危险
maxWait=60000
#编码设置
connectionProperties=useUnicode=true;characterEncoding=gbk
#指定由连接池所创建的连接的自动提交
defaultAutoCommit=true
#driver default 指定由连接池所创建的连接的只读（read-only）状态。
#如果没有设置该值，则"setReadOnly"方法将不被调用。（某些驱动并不支持只读模式，如：Informix）
defaultReadOnly=
#driver default 指定由连接池所创建的连接的事务级别
#可用值：NONE,READ_UNCOMMITTED, READ_COMMITTED, REPEATABLE_READ, SERIALIZABLE
defaultTransactionIsolation=READ_UNCOMMITTED

写个工具类就可以使用了：
public final class JdbcUtils {
private static DataSource myDataSource = null;

private JdbcUtils() {}

static {
try {
Class.forName("com.mysql.jdbc.Driver");
Properties prop = new Properties();
InputStream is = JdbcUtils.class.getClassLoader()
.getResourceAsStream("dbcpconfig.properties");
prop.load(is);
<strong>myDataSource = BasicDataSourceFactory.createDataSource(prop);</strong>
} catch (Exception e) {
throw new ExceptionInInitializerError(e);
}
}

public static DataSource getDataSource() {
return myDataSource;
}

//这个就是要用时可获取一个连接
public static Connection getConnection() throws SQLException {
return myDataSource.getConnection();
}

//关闭连接
public static void free(ResultSet rs, Statement st, Connection conn) {
try {
if (rs != null)
rs.close();
} catch (SQLException e) {
e.printStackTrace();
} finally {
try {
if (st != null)
st.close();
} catch (SQLException e) {
e.printStackTrace();
} finally {
if (conn != null)
try {
conn.close();
} catch (Exception e) {
e.printStackTrace();
}}}}
}

最后使用就可以了：
Connection conn = JdbcUtils.getConnection(); 

PS:这个只是简单的使用，需要详细的了解，最后去看一下源码的实现，会有很大收获的哦。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>242</wp:post_id>
		<wp:post_date>2012-03-15 05:32:04</wp:post_date>
		<wp:post_date_gmt>2012-03-15 05:32:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>bdcp%e6%95%b0%e6%8d%ae%e8%bf%9e%e6%8e%a5%e6%b1%a0%e7%9a%84%e4%bd%bf%e7%94%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[45]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>代理模式</title>
		<link>http://xuanner.com/wp/2012/03/15/%e4%bb%a3%e7%90%86%e6%a8%a1%e5%bc%8f/</link>
		<pubDate>Thu, 15 Mar 2012 08:00:00 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=244</guid>
		<description></description>
		<content:encoded><![CDATA[1、定义
为其他对象提供一种代理以控制这个对象的访问。

2、简单简介
例如：类A主要完成一些核心操作，如果要在这些核心操作上添加一些修饰信息，可以用类AProxy代理类A，然后在类AProxy中添加一些修饰信息，例如日志的监控。代理类和被代理类实现同一个接口。

3、看代码示例
[java]
//申明一个接口：
public interface Ipeople(){
  public void say();
}

//被代理类实现：
public class A implements Ipeople{
  public void say(){
    system.out.print("这个是核心操作");
  }
}

//代理类实现：
public class AProxy implements Ipeople{
  private A a;
  public AProxy(A a){
    this.a = a;
  }

  public void say(){
    system.out.print("类A要说话了");
    a.say();
    system.out.print("类A说完话了");
  }
}

//在使用的时候就这样使用：
//如果只要执行核心业务
A a = new A();
a.say();
//如果在执行核心业务同时需要一些修饰信息，可以这样
A a = new A();
AProxy aproxy = new AProxy(a);
aproxy.say();
[/java]

4、来点PS:
（1）这样的好处是，如果要换修饰信息了，不用修改核心业务的A类，只要继承同一个接口，再写一个代理类就可以了
（3）JDK里支持了一种动态代理，是用反射来扩展这种代理模式，是可以不用频繁的自己写代理类。动态代理，另做笔记。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>244</wp:post_id>
		<wp:post_date>2012-03-15 08:00:00</wp:post_date>
		<wp:post_date_gmt>2012-03-15 08:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%bb%a3%e7%90%86%e6%a8%a1%e5%bc%8f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f"><![CDATA[设计模式]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[57]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>模板方法模式</title>
		<link>http://xuanner.com/wp/2012/03/15/%e6%a8%a1%e6%9d%bf%e6%96%b9%e6%b3%95%e6%a8%a1%e5%bc%8f/</link>
		<pubDate>Thu, 15 Mar 2012 15:55:32 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=252</guid>
		<description></description>
		<content:encoded><![CDATA[1、定义：
定义一个操作中的算法的框架，而将一些步骤延迟到子类中。使得子类可以不改变一个算法的结构即可中定义该算法的某些特定步骤。

2、代码示例
[java]
//抽象模板类
public abstract class AbstractClass{
  //基本方法1
  protected abstract void doOne();

  //基本方法2
  protected abstract void doTwo();

  //模板方法
  public void templateMethod(){
    this.doOne();
    this.doTwo();
  }
}

//具体实现1
public class ConcreteClass1 extends AbstractClass{
  protected void doOne(){
    system.out.print("实现1方法1")；
  }

  protected void deTwo(){
    system.out.print("实现1方法2");
  }
}

//具体实现2
public class ConcreteClass2 extends AbstractClass{
  protected void doOne(){
    system.out.print("实现2方法1")；
  }

  protected void deTwo(){
    system.out.print("实现2方法2");
  }
}

//使用的时候就可以这样：
AbstractClass class1 = new ConcreteClass1();
AbstractClass class2 = new ConcreteClass2();
class1.templateMethod();
class2.templateMethod();
[/java]

3、需要注意的地方
（1）模板方法为protected为了让子类继承，符合迪米特法则。
（2）为了防止恶意操作，一般模板方法都加上final关键字，不允许覆写。
（3）实现类若非必要，尽量不要扩大父类中的访问权限。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>252</wp:post_id>
		<wp:post_date>2012-03-15 15:55:32</wp:post_date>
		<wp:post_date_gmt>2012-03-15 15:55:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%a8%a1%e6%9d%bf%e6%96%b9%e6%b3%95%e6%a8%a1%e5%bc%8f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f"><![CDATA[设计模式]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[43]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>java中equals和==</title>
		<link>http://xuanner.com/wp/2012/03/16/java%e4%b8%adequals%e5%92%8c/</link>
		<pubDate>Fri, 16 Mar 2012 08:53:16 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=255</guid>
		<description></description>
		<content:encoded><![CDATA[1、在java的顶级Object中，用equals比较的是两个对象是否是同一个引用，所以一般的类都会继承Object对象，一般在没有覆写过equals方法的对象比较，就是这样的比较。而如果两个对象用==比较的话，始终是比较两个对象是否是同一个引用。例如：
ClassX a = new ClassX();
ClassX b = new ClassX();
ClassX c = a;
则：
a==b  (false)
a.equals(b)  (false)
a==c  (true)
a.equals(c)  (true)

2、但JDK中的有些类覆写了equals方法。
java.io.file,java.util.Date,java.lang.string,包装类（Integer,Double等）例如：
Integer i1=new Integer(1);
Integer i2=new Integer(1);
String str1=new String("hello");
String str2=new String("hello");
则：
i1==i2  (false)
i1.equals(i2)  (true)
str1==str2  (false)
str1.equals(str2)  (true)

3、为了迎合实际的需求，我们可以自己覆写equals方法。
但是，在重写equals方法时，要注意满足离散数学上的特性
(1)自反性： 对任意引用值X，x.equals(x)的返回值一定为true.
(2)对称性： 对于任何引用值x,y,当且仅当y.equals(x)返回值为true时，x.equals(y)的返回值一定为true;
(3)传递性： 如果x.equals(y)=true, y.equals(z)=true,则x.equals(z)=true
(4)一致性： 如果参与比较的对象没任何改变，则对象比较的结果也不应该有任何改变
(5)非空性： 任何非空的引用值X，x.equals(null)的返回值一定为false

PS:基础在于慢慢积累，求上进，求MM关注]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>255</wp:post_id>
		<wp:post_date>2012-03-16 08:53:16</wp:post_date>
		<wp:post_date_gmt>2012-03-16 08:53:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>java%e4%b8%adequals%e5%92%8c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[33]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>java中final</title>
		<link>http://xuanner.com/wp/2012/03/16/java%e4%b8%adfinal/</link>
		<pubDate>Fri, 16 Mar 2012 11:09:27 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=257</guid>
		<description></description>
		<content:encoded><![CDATA[java中final中有三种用法

1、final成员变量
当在类中定义变量时，在其前面加上final关键字，那便说，这个变量一旦被初始化便不可改变，这里不可改变的意思对基本类型来说是其值不可变，而对于对象变量来说其引用不可再变，但引用变量所指向的对象中的内容还是可以改变的。
其初始化可以在三个地方：
(1)在定义处直接赋值
(2)在构造函数中
(3)在初始化处{}或者static{}
例如：
Class A{
final String str1 = "xuan1";
final String str2;
static final String str3;
public A(){str2="xuan2";}
static{
str3 = "xuan";
}}
注意：
(1)final和static final的细微差别，static final是类变量一个类只有一份，final修饰的还是算一个普通变量
(2)final变量如果没初始化，编译不能通过

2、方法
final方法
将方法声明为final，那就说明你已经知道这个方法提供的功能已经满足你要求，不需要进行扩展，并且也不允许任何从此类继承的类来覆写这个方法，但是继承仍然可以继承这个方法，也就是说可以直接使用。
注意：
类中所有的private方法从某种意义上讲都是属于final的，因为他们在其它地方没法覆盖，你可以在一个private方法前加final修饰符，但没什么意义。

3、final类
当你将final用于类身上时，你就需要仔细考虑，因为一个final类是无法被任何人继承的，那也就意味着此类在一个继承树中是一个叶子类，并且此类的设计已被认为很完美而不需要进行修改或扩展。对于final类中的成员变量，你可以定义其为final，也可以不是final。而对于方法，由于所属类为final的关系，自然也就成了final型的。你也可以明确的给final类中的方法加上一个final，但这显然没有意义。

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>257</wp:post_id>
		<wp:post_date>2012-03-16 11:09:27</wp:post_date>
		<wp:post_date_gmt>2012-03-16 11:09:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>java%e4%b8%adfinal</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[34]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>迪米特法则应用（中介者模式和门面模式）</title>
		<link>http://xuanner.com/wp/2012/03/17/%e8%bf%aa%e7%b1%b3%e7%89%b9%e6%b3%95%e5%88%99%e5%ba%94%e7%94%a8%ef%bc%88%e4%b8%ad%e4%bb%8b%e8%80%85%e6%a8%a1%e5%bc%8f%e5%92%8c%e9%97%a8%e9%9d%a2%e6%a8%a1%e5%bc%8f%ef%bc%89/</link>
		<pubDate>Sat, 17 Mar 2012 14:42:10 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=259</guid>
		<description></description>
		<content:encoded><![CDATA[1、迪米特法则定义
迪米特法则又叫最少知识原则（Least Knowledge Principle 简写LKP），就是说一个对象应当对其他对象有尽可能少的了解,不和陌生人说话。即一个类尽量的少依赖别的类。

2、中介者模式
定义：
用一个中介对象封装系列的对象的交互，中介者使各对象不需要显示的相互作用，从而使其耦合松散，而且可以独立的改变它们之间的交互。

3、注意
中介者类在注入一般对象时用setter方法，而一般对象用构造方法注入中介者，因为一般对象必须有中介者，而中介者却可以只有部分一般对象。

4、门面模式
定义：
要求一个子系统的外部与其内部的通信必须通过一个统一的对象进行。门面模式提供一个高层次的接口，使得子系统更易于使用。

5、PS：
因为这两种模式比较简单，所以就不举例子了，如果不明白的地方，就只能另查资料了。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>259</wp:post_id>
		<wp:post_date>2012-03-17 14:42:10</wp:post_date>
		<wp:post_date_gmt>2012-03-17 14:42:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%bf%aa%e7%b1%b3%e7%89%b9%e6%b3%95%e5%88%99%e5%ba%94%e7%94%a8%ef%bc%88%e4%b8%ad%e4%bb%8b%e8%80%85%e6%a8%a1%e5%bc%8f%e5%92%8c%e9%97%a8%e9%9d%a2%e6%a8%a1%e5%bc%8f%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f"><![CDATA[设计模式]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[34]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>观察者模式</title>
		<link>http://xuanner.com/wp/2012/03/18/%e8%a7%82%e5%af%9f%e8%80%85%e6%a8%a1%e5%bc%8f/</link>
		<pubDate>Sun, 18 Mar 2012 09:47:56 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=262</guid>
		<description></description>
		<content:encoded><![CDATA[1、定义
定义对象间一种一对多的依赖关系，使得每当一个对象改变状态，则所有依赖它的对象都会得到通知并被自动更新。

2、分析下两个角色：
(1) Subject被观察者对象：
它的职责就是管理观察者并通知观察者
(2) Observer观察者：
在收到消息后，进行update更新操作

3、举个代码例子
[java]
//被观察者的抽象类，主要把通用的代码抽取出来给具体被观察者继承：
public abstract class Subject {
  //定义观察者列表
  private List<Observer> observerList = new ArrayList<Observer>();

  //添加观察者操作
  public void addObserver(Observer o){
    this.observerList.add(o);
  }

  //删除观察者操作
  public void delObserver(Observer o){
    this.oberverList.remove(o);
  }

  //通知观察者
  public void notifyObserver(){
    for(Observer o : observerList)
    o.update();
  }
}

// 具体的被观察者，我们可以继承上面的抽象类，这样就不用重复写上面的代码了：
public class ConcreteSubject extends Subject {
  //具体业务的实现
  public void doSomething(){
    ...
    super.notifyObserver();
  }
}

//编写一个观察者的接口：
public interface Observer() {
  //更新方法
  public void update();
}

// 具体的各种观察者继承这个接口就可以了：
public class ConcreteObserver implements Observer {
  //实现具体的更新方法
  public void update(){
  system.out.print("我被更新了");
}

//最后在场景类中就可以这样使用了
//创建一个被观察者
ConcreteSubject subject = new ConcreteSubject();
//创建一个观察者
ConcreteObserver observer = new ConcreteObserver();
//把观察者绑定到被观察者中去
subject.addObserver(observer);
//这时当被观察者活动时，就会通知观察者了
subject.doSomething();
[/java]

4、当观察者多了的时候，通知观察者是个很大的问题，当一个通知被卡住了，其他通知就会被卡住，所以可以改进通知成异步处理，多线程，EJB是个很好的例子。

5、其实JDK中这种模式的框架已经搭建好了
(1) 其中被观察者的抽象类已经被实现，叫Observable，我们继承他就好了，例如我们的具体被观察者可以写成这样：
[java]
public class ConcreteSubject extends Observable {
  //具体业务逻辑
  public void doSomething{
    ...
    //通知观察者
    super.setChanged();//表示是否通知过
    super.notifyObserver();//正式通知
  }
}

//观察者实现Observer接口就好了,使用时记得用addObserver()方法登记即可
public class Concretebserver implements Observer {
  //覆写接口方法
  public void update(Observable observable, Object object){
    system.out.print("我被更新了");
  }
}
[/java]

6、来个PS:
其实很多好的设计模式JDK都给我搭好框架了，所以多看看JDK的API也是好的哦。多说一句，观察者模式也可以说是订阅发布模型。

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>262</wp:post_id>
		<wp:post_date>2012-03-18 09:47:56</wp:post_date>
		<wp:post_date_gmt>2012-03-18 09:47:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%a7%82%e5%af%9f%e8%80%85%e6%a8%a1%e5%bc%8f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f"><![CDATA[设计模式]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[54]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>java自定义注解</title>
		<link>http://xuanner.com/wp/2012/03/19/java%e8%87%aa%e5%ae%9a%e4%b9%89%e6%b3%a8%e8%a7%a3/</link>
		<pubDate>Mon, 19 Mar 2012 07:16:34 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=265</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>1、自定义注解在写一些框架模板的时候还是很有用的</strong>

<strong>2、先来看看JDK自带的一些元注解：</strong>
(1) @Target 注解使用范围: 构造方法(CONSTRUCTOR), 类变量(FIELD), 局部变量(LOCAL_VARIABLE), 方法(METHOD), 包(PACKAGE),
参数(PARAMETER), 类或接口或enum(TYPE)
(2) @Retention 注解的生命周期: 在源文件有效(SOURCE),在class中有效(CLASS),在运行时有效(RUNTIME)
(3) @Documented 将注释包含在JavaDoc中
(4) @Inherited 允许子类继承父类的注释

<strong>3、接下来我们可以自己写一个注解，用@interface：</strong>
public @interface XuanAnnotation {
public int id();
// 这个注解参数的默认值是"hello world"
public String description() default "hello world";
}

<strong>4、使用</strong>
public class UseXuanAnnotation {
public String name;
public String password;

@XuanAnnotation(id = 1, description = "setPassword")
public void setPassword(String password) {
this.password = password;
}
@XuanAnnotation(id = 2, description = "getPassword")
public String getPassword() {
return password;
}
@XuanAnnotation(id = 3, description = "getName")
public String getName() {
return name;
}
@XuanAnnotation(id = 4)
public void setName(String name) {
this.name = name;
}}

5、配合反射，可以利用注释做标记
public class ProcessAnnotation {
public static void printAnnotation(Classc) {
// 打印注解
for (Method m : c.getDeclaredMethods()) {
XuanAnnotation x = m.getAnnotation(XuanAnnotation.class);
if (null == x) {
System.out.println("这个没有注解！");
}
else {
System.out.println("注解id: " + x.id());
System.out.println("注解description: " + x.description());
}}}

public static void main(String[] arg) {
printAnnotation(UseXuanAnnotation.class);
}}

PS：在写一些模板的时候非常有用哦，只是用反射，效率低点]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>265</wp:post_id>
		<wp:post_date>2012-03-19 07:16:34</wp:post_date>
		<wp:post_date_gmt>2012-03-19 07:16:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>java%e8%87%aa%e5%ae%9a%e4%b9%89%e6%b3%a8%e8%a7%a3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[51]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>构造函数的继承</title>
		<link>http://xuanner.com/wp/2012/03/21/%e6%9e%84%e9%80%a0%e5%87%bd%e6%95%b0%e7%9a%84%e7%bb%a7%e6%89%bf/</link>
		<pubDate>Wed, 21 Mar 2012 02:19:07 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=267</guid>
		<description></description>
		<content:encoded><![CDATA[1、说明：
如果一个子类继承了父类,那么子类在调用自己构造方法前，必须先调用其父类的构造方法，因为
是先要有父类才会有子类吗。

2、各种情况说明：
(1) 如果子类和父类都用了默认构造，那么不会有任何问题
(2) 如果父类只有无参构造，在子类的所有构造中可以不用显示的用super调用父类构造，父类无参构造会默认先调用
(3) 如果父类只有带参构造，那么在子类的所有构造方法中必须显示的用super调用，确保父类会被先调用
(4) 如果父类既有无参和带参构造，那看子类的具体构造具体调用，如果没有显示用super，那父类无参构造会默认先调用
(5) 如果父类的构造都被修饰private了，那悲剧，他不能被继承了]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>267</wp:post_id>
		<wp:post_date>2012-03-21 02:19:07</wp:post_date>
		<wp:post_date_gmt>2012-03-21 02:19:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%9e%84%e9%80%a0%e5%87%bd%e6%95%b0%e7%9a%84%e7%bb%a7%e6%89%bf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[28]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>样式display:none的元素值也会传递</title>
		<link>http://xuanner.com/wp/2012/03/22/%e6%a0%b7%e5%bc%8fdisplaynone%e7%9a%84%e5%85%83%e7%b4%a0%e5%80%bc%e4%b9%9f%e4%bc%9a%e4%bc%a0%e9%80%92/</link>
		<pubDate>Thu, 22 Mar 2012 04:27:53 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=272</guid>
		<description></description>
		<content:encoded><![CDATA[1、表单中样式display:none的元素值也会传递，例如：
&lt;form action="#"&gt;
&lt;input type="text" value="rrrrrr" id="aa" name="aa" style="display: none" /&gt;
&lt;input type="submit" value="fffff" onclick="gg()" /&gt;
&lt;/form&gt;

2、JS也能取到值，例如：
&lt;script&gt;
function gg(){
alert(document.getElementById("aa").value);
}
&lt;/script&gt;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>272</wp:post_id>
		<wp:post_date>2012-03-22 04:27:53</wp:post_date>
		<wp:post_date_gmt>2012-03-22 04:27:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%a0%b7%e5%bc%8fdisplaynone%e7%9a%84%e5%85%83%e7%b4%a0%e5%80%bc%e4%b9%9f%e4%bc%9a%e4%bc%a0%e9%80%92</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="jshtml"><![CDATA[JS/HTML/CSS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[94]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>jQuery和其他JS框架冲突</title>
		<link>http://xuanner.com/wp/2012/03/22/jquery%e5%92%8c%e5%85%b6%e4%bb%96js%e6%a1%86%e6%9e%b6%e5%86%b2%e7%aa%81/</link>
		<pubDate>Thu, 22 Mar 2012 05:38:13 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=274</guid>
		<description></description>
		<content:encoded><![CDATA[1、一句话很灵的：
&lt;script language="javascript"&gt;
jQuery.noConflict();
&lt;/script&gt;

2、在处理prototype框架时，把jQuery放在他前面，好像也可以的]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>274</wp:post_id>
		<wp:post_date>2012-03-22 05:38:13</wp:post_date>
		<wp:post_date_gmt>2012-03-22 05:38:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jquery%e5%92%8c%e5%85%b6%e4%bb%96js%e6%a1%86%e6%9e%b6%e5%86%b2%e7%aa%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="jshtml"><![CDATA[JS/HTML/CSS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[47]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>jQuery异步post数组参数传递</title>
		<link>http://xuanner.com/wp/2012/03/22/jquery%e5%bc%82%e6%ad%a5post%e6%95%b0%e7%bb%84%e5%8f%82%e6%95%b0%e4%bc%a0%e9%80%92/</link>
		<pubDate>Thu, 22 Mar 2012 07:21:46 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=276</guid>
		<description></description>
		<content:encoded><![CDATA[1、常用post例子：
jQuery.post("loadSchool4regionId.htm",data,function(msg){alert(msg);});
alert(11)
在java后端可以这个配合：
response.getWriter().print("xuan");//回调函数就会收到msg=xuan，中文时注意编码

2、数组参数传递：
var sectionBoxs = new Array();
var boxs = document.getElementsByName("sectionBox");
var j=0;
for(var i=0; i&lt; boxs.length; i++){
if(boxs[i].checked == true){
sectionBoxs[j++] = boxs[i].value;
}}
其中data的写法这样：
{'regionId':regionId, '<strong>sectionBoxs[]</strong>':sectionBoxs}

注意：
JS的执行不会等回调函数执行完才执行，也就是说，异步操作后面的JS代码和回调函数的是异步执行的，正如第一点alert(11)和alert(msg)那个先执行不确定，异步的。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>276</wp:post_id>
		<wp:post_date>2012-03-22 07:21:46</wp:post_date>
		<wp:post_date_gmt>2012-03-22 07:21:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jquery%e5%bc%82%e6%ad%a5post%e6%95%b0%e7%bb%84%e5%8f%82%e6%95%b0%e4%bc%a0%e9%80%92</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="jshtml"><![CDATA[JS/HTML/CSS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[39]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JS实现div定位弹出层</title>
		<link>http://xuanner.com/wp/2012/03/23/js%e5%ae%9e%e7%8e%b0div%e5%ae%9a%e4%bd%8d%e5%bc%b9%e5%87%ba%e5%b1%82/</link>
		<pubDate>Fri, 23 Mar 2012 08:06:16 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=281</guid>
		<description></description>
		<content:encoded><![CDATA[1、效果描述：
鼠标单击某个元素，发生事件，在该元素附近弹出一个层

2、div部分：
&lt;div id="divShow" style="display: none; position: absolute; width: 320px;height: 300px;border:5px solid #B8CECE; background-color: white;"&gt;这里是div中要显示的内容&lt;/div&gt;
一般在div内部可以定义一个按钮，用来隐藏div，具体要什么样好看的样式，可以自己定义

3、JS部分：
function showDiv(obj) {
var el = obj;
// 获得元素的偏移量
var left = obj.offsetLeft;
var top = obj.offsetTop;
// 循环获得元素的父级控件，累加左和顶端偏移量
while (obj = obj.offsetParent) {
left += obj.offsetLeft;
top += obj.offsetTop;
}
// 定位div,具体位置可以微调
document.getElementById("divShow").style.left = (left-320)+"px";
document.getElementById("divShow").style.top = (top-300)+"px";
document.getElementById("divShow").style.display = "";
}
注意：offsetLeft和OffsetTop不是获得元素和页面的距离，只是获得元素和父元素的的距离所以要进行while循环一层层累加距离

4、使用部分：
&lt;a onclick="showDiv( this)"&gt;查看&lt;/a&gt;
注意：这里好像href="javascript:showDiv( this)"不行，还有如果href="#"这样写会类似刷新本页一样，自己可以试下效]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>281</wp:post_id>
		<wp:post_date>2012-03-23 08:06:16</wp:post_date>
		<wp:post_date_gmt>2012-03-23 08:06:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>js%e5%ae%9e%e7%8e%b0div%e5%ae%9a%e4%bd%8d%e5%bc%b9%e5%87%ba%e5%b1%82</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="jshtml"><![CDATA[JS/HTML/CSS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[37]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>java泛型中? T K V E的意思</title>
		<link>http://xuanner.com/wp/2012/03/23/java%e6%b3%9b%e5%9e%8b%e4%b8%ad-t-k-v-e%e7%9a%84%e6%84%8f%e6%80%9d/</link>
		<pubDate>Fri, 23 Mar 2012 17:06:48 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=284</guid>
		<description></description>
		<content:encoded><![CDATA[？ 表示不确定的java类型。
T  表示java类型。
K V 分别代表java键值中的Key Value。
E 代表Element

ps：具体关于泛型的知识，到时候补充]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>284</wp:post_id>
		<wp:post_date>2012-03-23 17:06:48</wp:post_date>
		<wp:post_date_gmt>2012-03-23 17:06:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>java%e6%b3%9b%e5%9e%8b%e4%b8%ad-t-k-v-e%e7%9a%84%e6%84%8f%e6%80%9d</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[56]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>jQuery的keypress事件绑定</title>
		<link>http://xuanner.com/wp/2012/03/28/jquery%e7%9a%84keypress%e4%ba%8b%e4%bb%b6%e7%bb%91%e5%ae%9a/</link>
		<pubDate>Wed, 28 Mar 2012 03:28:38 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=286</guid>
		<description></description>
		<content:encoded><![CDATA[定义：
每次输入都会触发事件，和keydown,keyup类似
例子：
jQuery("#spellName").keypress(function(evt){
  if(evt.keyCode!=13){
  }else{
    matchUser('<%=action.getGroupId()%>');
  }
});
其中13表示enter键]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>286</wp:post_id>
		<wp:post_date>2012-03-28 03:28:38</wp:post_date>
		<wp:post_date_gmt>2012-03-28 03:28:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jquery%e7%9a%84keypress%e4%ba%8b%e4%bb%b6%e7%bb%91%e5%ae%9a</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="jshtml"><![CDATA[JS/HTML/CSS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[39]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>jQuery制作拖动层效果</title>
		<link>http://xuanner.com/wp/2012/03/30/jquery%e5%88%b6%e4%bd%9c%e6%8b%96%e5%8a%a8%e5%b1%82%e6%95%88%e6%9e%9c/</link>
		<pubDate>Fri, 30 Mar 2012 04:13:28 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=289</guid>
		<description></description>
		<content:encoded><![CDATA[var isClick=false;//记录鼠标是否按下
var moveX;//偏移量
var moveY;
jQuery(function(){
jQuery("#divShow").mousedown(function(e){//
isClick = true;

DivTop=$("#divShow").css("top");
DivLeft=$("#divShow").css("left");
DivTop=parseFloat(String(DivTop).substring(0,String(DivTop).indexOf("px")));
DivLeft=parseFloat(String(DivLeft).substring(0,String(DivLeft).indexOf("px")));
moveX = e.pageX - DivLeft;
moveY = e.pageY - DivTop;
});

jQuery("#divShow").mouseup(function(){
isClick = false;
});

jQuery("#divShow").mousemove(function(e){
var mouseTop = e.pageY;
var mouseLeft = e.pageX;

if(isClick){
jQuery("#divShow").css("top",mouseTop-moveY);
jQuery("#divShow").css("left",mouseLeft-moveX);
}
});
});

其中注意：
1、DivTop=$("#divShow").css("top");取到带有px的
2、var mouseTop = e.pageY;取到鼠标横坐标，直接是数字]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>289</wp:post_id>
		<wp:post_date>2012-03-30 04:13:28</wp:post_date>
		<wp:post_date_gmt>2012-03-30 04:13:28</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>jquery%e5%88%b6%e4%bd%9c%e6%8b%96%e5%8a%a8%e5%b1%82%e6%95%88%e6%9e%9c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="jshtml"><![CDATA[JS/HTML/CSS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[51]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JS用eval()函数解析JSON串</title>
		<link>http://xuanner.com/wp/2012/03/30/js%e7%94%a8eval%e5%87%bd%e6%95%b0%e8%a7%a3%e6%9e%90json%e4%b8%b2/</link>
		<pubDate>Fri, 30 Mar 2012 12:42:11 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=291</guid>
		<description></description>
		<content:encoded><![CDATA[1、当JSON串是一个对象时：
var msg1="{'id':'myid', 'name':'myname'}";
var object = eval('('+msg1+')');
alert(object.id);
alert(object.name);

2、当JSON串是一个数组
var msg2="[{id:'myid1',name:'myname1'},{id:'myid2',name:'myname2'}] ";
var objects = eval(msg2);
for(var i=0;i alert(objects[i].id);
alert(objects[i].name);
}

PS:
用JSON解析器可以反解析：
myData = JSON.parse(text, function (key, value) {       
return key.indexOf('date') >= 0 ? new Date(value) : value; }); 
其中后面的函数充当一个过滤器。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>291</wp:post_id>
		<wp:post_date>2012-03-30 12:42:11</wp:post_date>
		<wp:post_date_gmt>2012-03-30 12:42:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>js%e7%94%a8eval%e5%87%bd%e6%95%b0%e8%a7%a3%e6%9e%90json%e4%b8%b2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="jshtml"><![CDATA[JS/HTML/CSS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[48]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>不要乱用Volatile</title>
		<link>http://xuanner.com/wp/2012/04/11/%e4%b8%8d%e8%a6%81%e4%b9%b1%e7%94%a8volatile/</link>
		<pubDate>Wed, 11 Apr 2012 09:25:37 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=294</guid>
		<description></description>
		<content:encoded><![CDATA[1、解释：
Volatile修饰的成员变量在每次被线程访问时，都强迫从共享内存中重读该成员变量的值。而且，当成员变量发生变化时，强迫线程将变化值回写到共享内存。
注意的是，这样只能保证共享内存中始终是最新值，而不能用来做多线程的线程安全机制，原因下面有分析。

2、Java语言规范中指出
为了获得最佳速度，允许线程保存共享成员变量的私有拷贝，而且只当线程进入或者离开同步代码块时才与共享成员变量的原始值对比。
即当线程访问某共享成员变量的时候，首先通过对象的引用找到对应在堆内存的变量的值，然后把堆内存
变量的具体值load到线程本地内存中，建立一个变量副本，之后线程就不再和对象在堆内存变量值有任何关系，而是直接修改副本变量的值，
在修改完之后的某一个时刻（线程退出之前），自动把线程变量副本的值回写到对象在堆中变量。这样在堆中的对象的值就产生变化了。

3、不能乱用Volatile做线程安全机制的原因
线程使用共享变量的步骤：
（1）加载共享变量到自己线程的内存中
（2）修改自己线程的内存中的变量值（注意这里修改可以不止一次）
（3）在线程退出之前，修改共享变量
这个3个步骤并不是原子性的，加Volatile修改的变量和不加的区别是：
没加Volatile的共享变量是上面步骤来的不变，而加了以后，其中第二步中，线程每次修改自己内存中的值后，都会强制的更新共享变量，但这并不保证线程安全性。

4、Volatile使用建议
（1）在两个或者更多的线程访问的成员变量上使用volatile。
（2）当要访问的变量已在synchronized代码块中，或者为final修饰的常量时，不必使用。
（3）由于使用volatile屏蔽掉了JVM中必要的代码优化，所以在效率上比较低，因此一定在必要时才使用此关键字。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>294</wp:post_id>
		<wp:post_date>2012-04-11 09:25:37</wp:post_date>
		<wp:post_date_gmt>2012-04-11 09:25:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%b8%8d%e8%a6%81%e4%b9%b1%e7%94%a8volatile</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[47]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>一段有趣的JS代码</title>
		<link>http://xuanner.com/wp/2012/04/25/%e4%b8%80%e6%ae%b5%e6%9c%89%e8%b6%a3%e7%9a%84js%e4%bb%a3%e7%a0%81/</link>
		<pubDate>Wed, 25 Apr 2012 02:51:16 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=297</guid>
		<description></description>
		<content:encoded><![CDATA[&lt;html&gt;
&lt;head&gt;
&lt;style type="text/css"&gt;
span
{
font-family:Wingdings;
font-size:30px;
color:red;
}
&lt;/style&gt;

&lt;script type="text/javascript"&gt;
function initialize()
{
for(i=0;i&lt;255;i++)
{
document.getElementById("sp1").innerHTML+=String.fromCharCode(i)+"&amp;nbsp;";
}
}
&lt;/script&gt;
&lt;/head&gt;
&lt;body onload="initialize()"&gt;
&lt;span id="sp1"&gt;&lt;/span&gt;
&lt;/body&gt;
&lt;/html&gt;

注意：直接新建一个1.html文件，用记事本打开，把这段代码放进去，然后双击打开就可以看到效果了。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>297</wp:post_id>
		<wp:post_date>2012-04-25 02:51:16</wp:post_date>
		<wp:post_date_gmt>2012-04-25 02:51:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%b8%80%e6%ae%b5%e6%9c%89%e8%b6%a3%e7%9a%84js%e4%bb%a3%e7%a0%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="jshtml"><![CDATA[JS/HTML/CSS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[53]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Spring的Assert用法</title>
		<link>http://xuanner.com/wp/2012/04/28/spring%e7%9a%84assert%e7%94%a8%e6%b3%95/</link>
		<pubDate>Sat, 28 Apr 2012 10:05:03 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=299</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>1、前言：</strong>
Assert就是校验参数，当参数不符合时就抛出IllegalArgumentException异常，使我们在校验参数时方便了许多

<strong>2、常用方法有：</strong>
（1） notNull(Object object)
当 object为 null 时抛出异常，notNull(Object object, String message) 方法允许您通过 message 定制异常信息。
和 notNull() 方法断言规则相反的方法是 isNull(Object object) / isNull(Object object, String message)，它要求入参一定是 null；

（2） isTrue(boolean expression) / isTrue(boolean expression, String message) 
当 expression 不为 true 抛出异常； 

（3） notEmpty(Collection collection) / notEmpty(Collection collection, String message) 
当集合未包含元素时抛出异常。notEmpty(Map map) / notEmpty(Map map, String message) 和 notEmpty(Object[] array, String message) / notEmpty(Object[] array, String message) 分别对 Map 和 Object[] 类型的入参进行判断；

（4） hasLength(String text) / hasLength(String text, String message) 
当 text 为 null 或长度为 0 时抛出异常；

（5） hasText(String text) / hasText(String text, String message)  
text 不能为 null 且必须至少包含一个非空格的字符，否则抛出异常；

（6） isInstanceOf(Class clazz, Object obj) / isInstanceOf(Class type, Object obj, String message)  
当 obj 不能被正确造型为 clazz 指定的类将抛出异常；

（7） isAssignable(Class superType, Class subType) / isAssignable(Class superType, Class subType, String message)  
subType 必须可以按类型匹配于 superType，否则将抛出异常；

3、结尾：
Assert 不依赖于 Spring 容器，您可以大胆地在自己的应用中使用这个工具类
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>299</wp:post_id>
		<wp:post_date>2012-04-28 10:05:03</wp:post_date>
		<wp:post_date_gmt>2012-04-28 10:05:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>spring%e7%9a%84assert%e7%94%a8%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[80]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Java并发中CountDownLatch的用法</title>
		<link>http://xuanner.com/wp/2012/04/29/java%e5%b9%b6%e5%8f%91%e4%b8%adcountdownlatch%e7%9a%84%e7%94%a8%e6%b3%95/</link>
		<pubDate>Sun, 29 Apr 2012 14:50:13 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=303</guid>
		<description></description>
		<content:encoded><![CDATA[1、说明：
它是一个同步辅助类，在完成一组正在其他线程中执行的操作之前，它允许一个或多个线程一直等待，直到CountDownLatch的计数值变成0时。

2、用法说明：
（1） 在实例化CountDownLatch对象时，可以赋予它一个计数值，例如：
CountDownLatch countDownLatch = new CountDownLatch(2);
（2） 当有线程调用它的await()方法时，该线程将阻塞
countDownLatch.await();
（3） 当调用它的countDown()方法，可以减小计数值，例如：
countDownLatch.countDown();
（4） 直到countDownLatch的计数值为0时，凡是前面线程调用过的await()方法的，就都可以继续运行了

3、最后：
CountDownLatch是一次性的，即设置计数值只能一次。如果想反复设置，可以用CyclicBarrier这个类]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>303</wp:post_id>
		<wp:post_date>2012-04-29 14:50:13</wp:post_date>
		<wp:post_date_gmt>2012-04-29 14:50:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>java%e5%b9%b6%e5%8f%91%e4%b8%adcountdownlatch%e7%9a%84%e7%94%a8%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[45]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CSS去掉img边框</title>
		<link>http://xuanner.com/wp/2012/07/04/css%e5%8e%bb%e6%8e%89img%e8%be%b9%e6%a1%86/</link>
		<pubDate>Wed, 04 Jul 2012 02:05:30 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=306</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-family: courier new,courier; font-size: small;">当一个图片有链接的时候图片四边就会出现蓝色边框，如果内联的话直接在img里加上border="0", 那么外联CSS同样用border:0;</span>
<span style="font-family: courier new,courier; font-size: small;"> 例:img{border:0;}</span>
<span style="font-family: courier new,courier; font-size: small;"> 就可以将图片链接的蓝边框去掉了</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>306</wp:post_id>
		<wp:post_date>2012-07-04 02:05:30</wp:post_date>
		<wp:post_date_gmt>2012-07-04 02:05:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>css%e5%8e%bb%e6%8e%89img%e8%be%b9%e6%a1%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="jshtml"><![CDATA[JS/HTML/CSS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[54]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CMD下启动mysql</title>
		<link>http://xuanner.com/wp/2012/07/05/cmd%e4%b8%8b%e5%90%af%e5%8a%a8mysql/</link>
		<pubDate>Thu, 05 Jul 2012 01:59:04 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=309</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-family: courier new,courier; font-size: small;">1、先决条件：MySql安装目录为“d:MySql”</span>

<span style="font-family: courier new,courier; font-size: small;">2、启动服务：</span>
<span style="font-family: courier new,courier; font-size: small;"> 进入命令行输入窗口（DOS命令输入） 进入“d:MySqlbin”目录下运行“mysqld -u root” 命令。写法： <strong>d:MySqlbinmysqld -u root (Enter)</strong></span>

<span style="font-family: courier new,courier; font-size: small;">3、启动客户端进入操作：</span>
<span style="font-family: courier new,courier; font-size: small;"> <strong>d:MySqlbinmysqld -u root -p(Enter)</strong></span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>309</wp:post_id>
		<wp:post_date>2012-07-05 01:59:04</wp:post_date>
		<wp:post_date_gmt>2012-07-05 01:59:04</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cmd%e4%b8%8b%e5%90%af%e5%8a%a8mysql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%95%b0%e6%8d%ae%e5%ba%93"><![CDATA[数据库]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[99]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Tomcat安装admin</title>
		<link>http://xuanner.com/wp/2012/07/09/tomcat%e5%ae%89%e8%a3%85admin/</link>
		<pubDate>Sun, 08 Jul 2012 21:33:26 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=311</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-family: courier new,courier; font-size: small;">1、首先下载一个tomcat这个是必备的，在这就不多说了，要是这个不会admin也就别整了</span>

<span style="font-family: courier new,courier; font-size: small;">2、去apache官网下载admin项目，地址：</span>
<span style="font-family: courier new,courier; font-size: small;"> <a href="http://tomcat.apache.org/download-55.cgi">http://tomcat.apache.org/download-55.cgi</a></span>

<span style="font-family: courier new,courier; font-size: small;">3、拷贝admin配置文件。解压包以后，把admin项目下的apache-tomcat-5.5.35confCatalinalocalhostadmin.xml这个配置文件，放到tomcat目录下的apache-tomcat-6.0.29confCatalinalocalhost目录下，目录一般都给你整好了，你找找对应一下就可以了，这个admin.xml相当于server.xml文件，你打开看一下会有惊喜哈，其中项目放在哪里就可以在里面看</span>

<span style="font-family: courier new,courier; font-size: small;">4、拷贝admin项目。根据admin.xml中的配置，可以把admin项目文件夹拷贝到tomcat的apache-tomcat-6.0.29serverwebapps目录下，默认的tomcat目录下没有server这个文件夹，你自己整一个呗</span>

<span style="font-family: courier new,courier; font-size: small;">5、添加用户名/密码。在这个apache-tomcat-6.0.29conftomcat-users.xml文件中添加好了。类似这样，在&lt;/tomcat-users&gt;之前添加这一行就OK的&lt;user username="admin" password="123456" roles="admin,manager"/&gt;</span>

<span style="font-family: courier new,courier; font-size: small;">6、重启tomcat就可以了，地址一般就：localhost:8080admin，我的因为是默认80端口，所以127.0.0.1/admin就可以了</span>

<span style="font-family: courier new,courier; font-size: small;">7、注意点：至少我是这样的，打开网址报错了，看了错误信息，少了一些JAR包，加在admin项目的lib下就好了：commons-logging-1.1.jar（apache的日志框架）、commons-modeler-2.0.1.jar（apache的JMX框架，因为tomcat是用JMX管理的，所以需要这个）</span>

<span style="font-family: courier new,courier; font-size: small;">8、好了希望这个对你们有用，自己也做个备份，以防以后忘记了。主要步骤就：3、4、5这个三步重要一些。</span>

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>311</wp:post_id>
		<wp:post_date>2012-07-09 05:33:26</wp:post_date>
		<wp:post_date_gmt>2012-07-08 21:33:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tomcat%e5%ae%89%e8%a3%85admin</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="tomcat%e5%8e%9f%e7%90%86"><![CDATA[Tomcat原理]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[53]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>一年工作总结</title>
		<link>http://xuanner.com/wp/2012/07/10/%e4%b8%80%e5%b9%b4%e5%b7%a5%e4%bd%9c%e6%80%bb%e7%bb%93/</link>
		<pubDate>Tue, 10 Jul 2012 02:07:07 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=314</guid>
		<description></description>
		<content:encoded><![CDATA[时间过的真心不慢，转眼毕业就1年了。还记得毕业那会儿，感谢佳姐（我们班团支书）帮我投的简历。找第一份工作，那也是记忆难忘。那时记得我去面试了13家公司，大大小小的，结果拿到了10个offer（其中一个说我要求太高，刚出来就想那年薪6 7万的，可明明是你自己让我填的嘛，一个是去了档案局，你让我一个做java的去做C++笔试题，结果当然可想而知，一个是通过了上半场，结果下半场有现在这个公司的面试，浙大万朋，所以就推掉了），虽然大都些小公司，但在这里还是小小欣慰一下。

刚进万朋第一天，说老赵（研二部门经理）出差了，是黄工（黄维佳，二部的系统架构师）引我进门的，先搭环境，那时刚毕业，真心什么都不懂，只记得装一个JDK就花了我一个上午，确实很废。黄工算是我工作上的第一个导师吧，他的一些严谨作风，现在还记得一些让我受益匪浅。刚开始，让我做的是keeldemo的项目，就一个练习的项目。做了有两个礼拜。在验收时，真心受了而一些折磨，不过黄工在代码中连一个空格都锱铢必较的严格督促下，才有了现在的代码的严谨，那时我还一度崇拜他，想让他收我为徒，他最后送我的那句话，至今还记得：勿在浮沙驻高台。

我是在万朋实习了两个月，试用一个月就转正了。这一点，我一直觉得老赵是一个对自己员工真心不错的好人。做完keeldemo应该是6月份的事了，熟悉了一下家校的项目，我是想老赵可能会把我安排在家校这个项目组里。在此期间算是在家校项目中做了几个功能，不过最后有没有上线，就不得而知了，因为这几个功能大多的目的是让我熟悉家校这个项目。

后来C组中的有个项目（余姚社区）比较缺人，于是我就被借调过去，也被正式启用了。那时哪做过什么项目啊，幸好那个是相对一个全新的项目。这里十分感谢王智兵（余姚社区的主负责人）和叶工（C组组长，系统分析师），那时的项目是用webwork+Spring，前端用的是prototype，在学校里哪见过这些啊，所以每走一步都非常艰难，而且像一些数据库软件，PDF，SSH工具，甚至ftp都没怎么用过，那段时间是压力最大的，几乎每天都好学很多。所以我到处问，和我一起进来的葛欣。还有进来好你年的阿牛（黄文气），还有已经离职的莉莉姐，他们都很好，给我不小的帮助和支持，我感谢我的第一步有你们这些好同事好朋友。

做完余姚社区后来又在C组做了一些别的项目，像网校啊等等。差不多8月多的时候，老赵又把调回了B组，做家校项目。因为家校项目是用keel+Spring+ibaties完全不同的框架结构，而且keel又是公司内部的框架，很多不懂没法查资料，也查不到，所以一回来，这样大幅度的项目跨越，着实让我不知所措，很多又忘记了。不过就是因为有了这些经历，才让我成长更快。一开始，跟着倪工（倪文隆家校项目负责人，系统分析师）做任务单。这个我也是相当的感谢。反正那段时间，无论是什么问题，我第一个想到的就是他，倪工。他对我也是极大的帮助。印象最深的是我第一次发布，果断出了问题。记得那是个12点的夜我写的功能是没有问题的，但是没有考虑到外网的大数据量，所以就有问题了，而且问题不是一般的大。几乎要调整很多代码。那时我真的头晕了，不知道要改哪里，就更不知道怎么改了。索性牛逼的倪工，刷刷刷的，帮我搞定了，那时真是想感动的哭了呀。当然夸张了，不过确实很感动，那一次也让我意识到，写代码的严谨，认真，考虑周全，而不仅仅一个简单的实现而已，要想的更多。

也不知道什么时候，我开始独立负责任务单了，独自发布了，过年那会，来了几个比较急的任务单，一下子身上就抗了2 3个大任务单。一度想火，后来还是顶了下来，我告诉自己想要成为一个真正的高手，这些都不算什么。那时几乎每天加班到9点多，连年也没过好，净想着任务单了。那段时间也让我养成了，不到8 9点就不下班的习惯。唉，程序员。伤不起啊。

过完年后，到现在7月份了，工作慢慢进入正轨了。不像之前什么都不懂，做起任务单来也游刃有余了。具体做了哪些任务单，就不一一举例了，真的是太多了。偶尔还给新人检查检查keeldemo，5 6月份的时候黄也走了，不过我把他留下来的严谨也被我用来“迫害”新员工了，哈哈。。。顿时觉得自己好像变得老油条了。现在还一直做这家校这个项目。感谢这一年来公司很多人对我的帮助，包括上面没有提到的，我想至少这个公司，
我们的部门，我的同事们，给了我第一个不错的成长环境。谢谢你们，真心的。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>314</wp:post_id>
		<wp:post_date>2012-07-10 02:07:07</wp:post_date>
		<wp:post_date_gmt>2012-07-10 02:07:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%b8%80%e5%b9%b4%e5%b7%a5%e4%bd%9c%e6%80%bb%e7%bb%93</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e7%94%9f%e6%b4%bb%e7%82%b9%e6%bb%b4"><![CDATA[生活点滴]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[75]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>42</wp:comment_id>
			<wp:comment_author><![CDATA[翁晔]]></wp:comment_author>
			<wp:comment_author_email>736194980@qq.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>122.227.239.134</wp:comment_author_IP>
			<wp:comment_date>2012-07-12 02:53:55</wp:comment_date>
			<wp:comment_date_gmt>2012-07-12 02:53:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[小安安，哥觉得跟你一比，我弱爆了]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>43</wp:comment_id>
			<wp:comment_author><![CDATA[潇依雪]]></wp:comment_author>
			<wp:comment_author_email>starcjhr@126.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>123.156.221.36</wp:comment_author_IP>
			<wp:comment_date>2012-07-20 06:44:48</wp:comment_date>
			<wp:comment_date_gmt>2012-07-20 06:44:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[良师益友确实给了你不少帮助，但是也看得出你自己一直在努力]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>44</wp:comment_id>
			<wp:comment_author><![CDATA[admin]]></wp:comment_author>
			<wp:comment_author_email>javaandswing@163.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>124.160.76.74</wp:comment_author_IP>
			<wp:comment_date>2012-08-10 05:19:11</wp:comment_date>
			<wp:comment_date_gmt>2012-08-10 05:19:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[哈哈，过奖过奖，是不是牛逼吹的有些过了。。。]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>42</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>JS进度条实用脚本</title>
		<link>http://xuanner.com/wp/2012/07/10/js%e8%bf%9b%e5%ba%a6%e6%9d%a1%e5%ae%9e%e7%94%a8%e8%84%9a%e6%9c%ac/</link>
		<pubDate>Tue, 10 Jul 2012 07:46:35 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=317</guid>
		<description></description>
		<content:encoded><![CDATA[<span style="font-size: small; font-family: courier new,courier;">&lt;script&gt;</span>
<span style="font-size: small; font-family: courier new,courier;"> var loadbar = new Ys_LoadBar(4000,"请稍后，系统正在截图","这个是最后闪动的字");</span>
<span style="font-size: small; font-family: courier new,courier;"> loadbar.loadExecute();</span>

<span style="font-size: small; font-family: courier new,courier;">/**</span>
<span style="font-size: small; font-family: courier new,courier;"> *  用法：</span>
<span style="font-size: small; font-family: courier new,courier;"> *  var loarbar = new Ys_LoadBar(4000,"请稍后，系统正在截图","这个是最后闪动的字");</span>
<span style="font-size: small; font-family: courier new,courier;"> *  loarbar.loadExecute();</span>
<span style="font-size: small; font-family: courier new,courier;"> *</span>
<span style="font-size: small; font-family: courier new,courier;"> *  param:</span>
<span style="font-size: small; font-family: courier new,courier;"> *  totalTime:进度条的时间</span>
<span style="font-size: small; font-family: courier new,courier;"> *  strTip:上面的提示字符</span>
<span style="font-size: small; font-family: courier new,courier;"> *  strWait:进度条结束后下面跳动的字符</span>
<span style="font-size: small; font-family: courier new,courier;"> */</span>
<span style="font-size: small; font-family: courier new,courier;"> function Ys_LoadBar(totalTime,strTip,strWait){</span>
<span style="font-size: small; font-family: courier new,courier;"> //private properties</span>
<span style="font-size: small; font-family: courier new,courier;"> var loadTotalTime = 0;     //进度条的时间</span>
<span style="font-size: small; font-family: courier new,courier;"> var loadMaxChar = 0;       //进度条的字符数目</span>
<span style="font-size: small; font-family: courier new,courier;"> var loadPerTimeChar = 0;   //setTimeOut's interval</span>
<span style="font-size: small; font-family: courier new,courier;"> var loadstrTip = 0;        //上面的提示字符</span>
<span style="font-size: small; font-family: courier new,courier;"> var loadstrWait = 0;       //进度条结束后下面跳动的字符</span>

<span style="font-size: small; font-family: courier new,courier;">this.loadTotalTime = totalTime;</span>
<span style="font-size: small; font-family: courier new,courier;"> this.loadstrTip = strTip;</span>
<span style="font-size: small; font-family: courier new,courier;"> this.loadstrWait = strWait;</span>

<span style="font-size: small; font-family: courier new,courier;">//private funcitons</span>
<span style="font-size: small; font-family: courier new,courier;"> this.loadInit = loadInit;</span>
<span style="font-size: small; font-family: courier new,courier;"> this.loadExecute = loadExecute;</span>
<span style="font-size: small; font-family: courier new,courier;"> this.loadWork = loadWork;</span>
<span style="font-size: small; font-family: courier new,courier;"> this.loadStop = loadStop;</span>
<span style="font-size: small; font-family: courier new,courier;"> this.loadWaitChange = loadWaitChange;</span>
<span style="font-size: small; font-family: courier new,courier;"> this.loadDisplayDiv = loadDisplayDiv;</span>
<span style="font-size: small; font-family: courier new,courier;"> this.loadDisabledAllForm = loadDisabledAllForm;</span>

<span style="font-size: small; font-family: courier new,courier;">//进行一些必要的初始化</span>
<span style="font-size: small; font-family: courier new,courier;"> this.loadInit();</span>
<span style="font-size: small; font-family: courier new,courier;"> }</span>

<span style="font-size: small; font-family: courier new,courier;">/**</span>
<span style="font-size: small; font-family: courier new,courier;"> *  关闭进度条</span>
<span style="font-size: small; font-family: courier new,courier;"> */</span>
<span style="font-size: small; font-family: courier new,courier;"> function closeLoadFrame(){</span>
<span style="font-size: small; font-family: courier new,courier;"> document.getElementById("loadFrame").style.display = "none";</span>
<span style="font-size: small; font-family: courier new,courier;"> }</span>

<span style="font-size: small; font-family: courier new,courier;">/**</span>
<span style="font-size: small; font-family: courier new,courier;"> *  开始运行</span>
<span style="font-size: small; font-family: courier new,courier;"> */</span>
<span style="font-size: small; font-family: courier new,courier;"> function loadExecute(){</span>
<span style="font-size: small; font-family: courier new,courier;"> loadFrame.style.visibility = "visible";</span>
<span style="font-size: small; font-family: courier new,courier;"> this.loadWork();</span>
<span style="font-size: small; font-family: courier new,courier;"> }</span>

<span style="font-size: small; font-family: courier new,courier;">/**</span>
<span style="font-size: small; font-family: courier new,courier;"> *  初始化</span>
<span style="font-size: small; font-family: courier new,courier;"> */</span>
<span style="font-size: small; font-family: courier new,courier;"> function loadInit(){</span>
<span style="font-size: small; font-family: courier new,courier;"> this.loadDisplayDiv();</span>
<span style="font-size: small; font-family: courier new,courier;"> this.loadMaxChar = 100;</span>
<span style="font-size: small; font-family: courier new,courier;"> this.loadPerTimeChar = this.loadTotalTime/this.loadMaxChar;</span>
<span style="font-size: small; font-family: courier new,courier;"> this.loadDisabledAllForm();</span>
<span style="font-size: small; font-family: courier new,courier;"> }</span>

<span style="font-size: small; font-family: courier new,courier;">/**</span>
<span style="font-size: small; font-family: courier new,courier;"> *  进度条显示</span>
<span style="font-size: small; font-family: courier new,courier;"> */</span>
<span style="font-size: small; font-family: courier new,courier;"> function loadWork(){</span>
<span style="font-size: small; font-family: courier new,courier;"> loadBar.value += "■";</span>
<span style="font-size: small; font-family: courier new,courier;"> loadNum.value = (parseInt(loadNum.value.replace("%",""))+1)+"%";</span>
<span style="font-size: small; font-family: courier new,courier;"> if(parseInt(loadNum.value)&gt;99){</span>
<span style="font-size: small; font-family: courier new,courier;"> loadStop();</span>
<span style="font-size: small; font-family: courier new,courier;"> return ;</span>
<span style="font-size: small; font-family: courier new,courier;"> }</span>
<span style="font-size: small; font-family: courier new,courier;"> setTimeout("this.loadWork()",this.loadPerTimeChar);</span>
<span style="font-size: small; font-family: courier new,courier;"> }</span>

<span style="font-size: small; font-family: courier new,courier;">/**</span>
<span style="font-size: small; font-family: courier new,courier;"> *  进度条停止</span>
<span style="font-size: small; font-family: courier new,courier;"> */</span>
<span style="font-size: small; font-family: courier new,courier;"> function loadStop(){</span>
<span style="font-size: small; font-family: courier new,courier;"> loadNum.style.display = "none";</span>
<span style="font-size: small; font-family: courier new,courier;"> loadWaitChange();</span>
<span style="font-size: small; font-family: courier new,courier;"> }</span>

<span style="font-size: small; font-family: courier new,courier;">/**</span>
<span style="font-size: small; font-family: courier new,courier;"> *  字幕跳动,fix by xuan 改成自动关闭进度条</span>
<span style="font-size: small; font-family: courier new,courier;"> */</span>
<span style="font-size: small; font-family: courier new,courier;"> function loadWaitChange(){</span>
<span style="font-size: small; font-family: courier new,courier;"> //if(loadWait.style.visibility=="visible")</span>
<span style="font-size: small; font-family: courier new,courier;"> //loadWait.style.visibility = "hidden";</span>
<span style="font-size: small; font-family: courier new,courier;"> //else</span>
<span style="font-size: small; font-family: courier new,courier;"> //loadWait.style.visibility = "visible";</span>
<span style="font-size: small; font-family: courier new,courier;"> //setTimeout("this.loadWaitChange()",300);</span>
<span style="font-size: small; font-family: courier new,courier;"> closeLoadFrame();//add by xuan</span>
<span style="font-size: small; font-family: courier new,courier;"> }</span>

<span style="font-size: small; font-family: courier new,courier;">/**</span>
<span style="font-size: small; font-family: courier new,courier;"> *  显示div图层</span>
<span style="font-size: small; font-family: courier new,courier;"> */</span>
<span style="font-size: small; font-family: courier new,courier;"> function loadDisplayDiv(){</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("&lt;div id='loadFrame' style='position:absolute; left:20;bottom:330;  z-index:10; visibility:hidden'&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("    &lt;table width=100% border=0 cellspacing=0 cellpadding=0&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("    &lt;tr&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("    &lt;td align='center'&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("        &lt;table border=2 cellspacing=0 cellpadding=0 bordercolor='#ff9900' width='400' height=151&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("        &lt;tr&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("        &lt;td&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("            &lt;table border=0 width='100%' bgcolor=#eeeeee  height=150&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("                &lt;tr&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("                    &lt;td height='3'&gt;&lt;/td&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("                &lt;/tr&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("                &lt;tr&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("                    &lt;td align='center'&gt;&lt;font style='font-size: 12px; margin-top:0px;color:#66CC33'&gt;"+this.loadstrTip+"&lt;/font&gt;&lt;/td&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("                &lt;/tr&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("                &lt;tr&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("                    &lt;td height='3'&gt;&lt;/td&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("                &lt;/tr&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("                &lt;tr&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("                    &lt;td align='left'&gt;&lt;input type='text' name='loadBar' size='200' style='border:none;background-color:#eeeeee;font-size:4px'&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("                &lt;/tr&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("                &lt;tr&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("                    &lt;td align='center'&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("                        &amp;nbsp;&lt;input type='text' name='loadNum' size=3 value='0%' style='border:none;background-color:#eeeeee'&gt;&amp;nbsp");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("                        &amp;nbsp;&lt;div id='loadWait' style='visibility:hidden'&gt;&amp;nbsp;&lt;font style='font-size: 12px; margin-top:0px;color:#66CC33'&gt;&amp;nbsp;"+this.loadstrWait+"&amp;nbsp;&lt;/font&gt;&lt;/div&gt;&amp;nbsp;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("                    &lt;/td&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("                &lt;/tr&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("                &lt;tr&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("                    &lt;td height='3'&gt;&lt;/td&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("                &lt;/tr&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("            &lt;/table&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("        &lt;/td&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("        &lt;/tr&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("        &lt;/table&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("    &lt;/td&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("    &lt;/tr&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("    &lt;/table&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> document.write("&lt;/div&gt;");</span>
<span style="font-size: small; font-family: courier new,courier;"> }</span>

<span style="font-size: small; font-family: courier new,courier;">/**</span>
<span style="font-size: small; font-family: courier new,courier;"> *  禁止所有表单</span>
<span style="font-size: small; font-family: courier new,courier;"> */</span>
<span style="font-size: small; font-family: courier new,courier;"> function loadDisabledAllForm(){</span>
<span style="font-size: small; font-family: courier new,courier;"> for(i=0;i&lt;document.forms.length;i++){</span>
<span style="font-size: small; font-family: courier new,courier;"> for(j=0;j&lt;document.forms[i].length;j++){</span>
<span style="font-size: small; font-family: courier new,courier;"> document.forms[i].elements[j].disabled = true;</span>
<span style="font-size: small; font-family: courier new,courier;"> }</span>
<span style="font-size: small; font-family: courier new,courier;"> }</span>
<span style="font-size: small; font-family: courier new,courier;"> }</span>
<span style="font-size: small; font-family: courier new,courier;"> &lt;/script&gt;</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>317</wp:post_id>
		<wp:post_date>2012-07-10 07:46:35</wp:post_date>
		<wp:post_date_gmt>2012-07-10 07:46:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>js%e8%bf%9b%e5%ba%a6%e6%9d%a1%e5%ae%9e%e7%94%a8%e8%84%9a%e6%9c%ac</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="jshtml"><![CDATA[JS/HTML/CSS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[39]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JS使用函数封装，持续更新...</title>
		<link>http://xuanner.com/wp/2012/07/10/js%e4%bd%bf%e7%94%a8%e5%87%bd%e6%95%b0%e5%b0%81%e8%a3%85%ef%bc%8c%e6%8c%81%e7%bb%ad%e6%9b%b4%e6%96%b0/</link>
		<pubDate>Tue, 10 Jul 2012 10:20:55 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=320</guid>
		<description></description>
		<content:encoded><![CDATA[<strong><span style="font-size: small; font-family: courier new,courier;">1、禁止所有表单</span></strong>
<span style="font-size: small; font-family: courier new,courier;"> function loadDisabledAllForm(){</span>
<span style="font-size: small; font-family: courier new,courier;">  for(i=0, n=document.forms.length; i&lt;n; i++){      </span>
<span style="font-size: small; font-family: courier new,courier;">   for(j=0, m=document.forms[i].length; j&lt;m; j++){</span>
<span style="font-size: small; font-family: courier new,courier;">    document.forms[i].elements[j].disabled = true;</span>
<span style="font-size: small; font-family: courier new,courier;">   }</span>
<span style="font-size: small; font-family: courier new,courier;">  }</span>
<span style="font-size: small; font-family: courier new,courier;"> }</span>

<strong><span style="font-size: small; font-family: courier new,courier;">2、打开所有表单</span></strong>
<span style="font-size: small; font-family: courier new,courier;"> function loadDisabledAllForm(){</span>
<span style="font-size: small; font-family: courier new,courier;">  for(i=0, n=document.forms.length; i&lt;n; i++){      </span>
<span style="font-size: small; font-family: courier new,courier;">   for(j=0, m=document.forms[i].length; j&lt;m; j++){</span>
<span style="font-size: small; font-family: courier new,courier;">    document.forms[i].elements[j].disabled = false;</span>
<span style="font-size: small; font-family: courier new,courier;">   }</span>
<span style="font-size: small; font-family: courier new,courier;">  }</span>
<span style="font-size: small; font-family: courier new,courier;"> }</span>

<strong><span style="font-size: small; font-family: courier new,courier;">3、选中全选影响单个</span></strong>
<span style="font-size: small; font-family: courier new,courier;"> function checkAll(singleCheckboxName, allCheckboxObj) {</span>
<span style="font-size: small; font-family: courier new,courier;">   var singleCheckboxes = document.getElementsByName(singleCheckboxName);</span>
<span style="font-size: small; font-family: courier new,courier;">   for (i = 0; i &lt; singleCheckboxes.length; i++) {</span>
<span style="font-size: small; font-family: courier new,courier;">     singleCheckboxes[i].checked = allCheckboxObj.checked</span>
<span style="font-size: small; font-family: courier new,courier;">   }</span>
<span style="font-size: small; font-family: courier new,courier;"> }</span>

<strong><span style="font-size: small; font-family: courier new,courier;">4、选中单个影响全选</span></strong>
<span style="font-size: small; font-family: courier new,courier;"> function checkOne(singleCheckboxObj, allCheckboxId) {</span>
<span style="font-size: small; font-family: courier new,courier;">   var selectAll = document.getElementById(allCheckboxId);</span>
<span style="font-size: small; font-family: courier new,courier;">   if (!singleCheckboxObj.disabled &amp;&amp; !singleCheckboxObj.checked &amp;&amp; selectAll.checked) {</span>
<span style="font-size: small; font-family: courier new,courier;">     selectAll.checked = false;</span>
<span style="font-size: small; font-family: courier new,courier;">     return</span>
<span style="font-size: small; font-family: courier new,courier;">   }</span>

<span style="font-size: small; font-family: courier new,courier;">   var selectOne = document.getElementsByName(singleCheckboxObj.name);</span>
<span style="font-size: small; font-family: courier new,courier;">   var i = 0;</span>
<span style="font-size: small; font-family: courier new,courier;">   var length = selectOne.length;</span>

<span style="font-size: small; font-family: courier new,courier;">   for (; i &lt; length; i++) {</span>
<span style="font-size: small; font-family: courier new,courier;">     if (!selectOne[i].checked) {</span>
<span style="font-size: small; font-family: courier new,courier;">       break;</span>
<span style="font-size: small; font-family: courier new,courier;">     }</span>
<span style="font-size: small; font-family: courier new,courier;">   }</span>

<span style="font-size: small; font-family: courier new,courier;">   if (i &gt;= length) {</span>
<span style="font-size: small; font-family: courier new,courier;">     selectAll.checked = true</span>
<span style="font-size: small; font-family: courier new,courier;">   }</span>
<span style="font-size: small; font-family: courier new,courier;"> }</span>

<strong><span style="font-size: small; font-family: courier new,courier;">5、获取字符串的真实长度</span></strong>
<span style="font-size: small; font-family: courier new,courier;"> function getAbsoluteLength(str) {</span>
<span style="font-size: small; font-family: courier new,courier;">   var len = 0;</span>
<span style="font-size: small; font-family: courier new,courier;">   for ( var i = 0; i &lt; str.length; i++) {</span>
<span style="font-size: small; font-family: courier new,courier;">     str.charCodeAt(i) &gt; 255 ? len += 2 : len++</span>
<span style="font-size: small; font-family: courier new,courier;">   }</span>
<span style="font-size: small; font-family: courier new,courier;">   return len;</span>
<span style="font-size: small; font-family: courier new,courier;"> }</span>

<strong><span style="font-size: small; font-family: courier new,courier;">6、给下拉框、复选框、单选框赋值</span></strong>
<span style="font-size: small; font-family: courier new,courier;"> function setElementValue(elementId, value) {</span>
<span style="font-size: small; font-family: courier new,courier;">   var e = document.getElementById(elementId);</span>
<span style="font-size: small; font-family: courier new,courier;">   if (!e) {</span>
<span style="font-size: small; font-family: courier new,courier;">     return</span>
<span style="font-size: small; font-family: courier new,courier;">   }</span>

<span style="font-size: small; font-family: courier new,courier;">   var type = e.type.toLowerCase();</span>
<span style="font-size: small; font-family: courier new,courier;">   if (type == "select-one") {//下拉框</span>
<span style="font-size: small; font-family: courier new,courier;">     for (var i = 0, n = e.length; i &lt; n; i++) {</span>
<span style="font-size: small; font-family: courier new,courier;">       if (e[i].value == value) {</span>
<span style="font-size: small; font-family: courier new,courier;">         e[i].selected = true;</span>
<span style="font-size: small; font-family: courier new,courier;">         break;</span>
<span style="font-size: small; font-family: courier new,courier;">       }</span>
<span style="font-size: small; font-family: courier new,courier;">     }</span>
<span style="font-size: small; font-family: courier new,courier;">   }else if (type == "checkbox" || type == "radio") {</span>
<span style="font-size: small; font-family: courier new,courier;">     if (e.value == value) {</span>
<span style="font-size: small; font-family: courier new,courier;">       e.checked = true</span>
<span style="font-size: small; font-family: courier new,courier;">     }</span>
<span style="font-size: small; font-family: courier new,courier;">   }</span>
<span style="font-size: small; font-family: courier new,courier;"> }</span>

<strong><span style="font-size: small; font-family: courier new,courier;">7、设置首页</span></strong>
<span style="font-size: small; font-family: courier new,courier;"> //&lt;a onclick="SetHome(this,window.location)" style="cursor:hand;"&gt;设为首页&lt;/a&gt;</span>
<span style="font-size: small; font-family: courier new,courier;"> function setHome(a, url) {</span>
<span style="font-size: small; font-family: courier new,courier;">   a.style.behavior = "url(#default#homepage)";</span>
<span style="font-size: small; font-family: courier new,courier;">   a.setHomePage(url);</span>
<span style="font-size: small; font-family: courier new,courier;"> }</span>

<strong><span style="font-size: small; font-family: courier new,courier;">8、加入收藏</span></strong>
<span style="font-size: small; font-family: courier new,courier;"> //&lt;a onclick="addFavorite(<a href="http://www.baidu.com,'/">www.baidu.com,'</a>百度')"  style="cursor:hand;"&gt;收藏百度&lt;/a&gt;</span>
<span style="font-size: small; font-family: courier new,courier;"> function addFavorite(title, url) {</span>
<span style="font-size: small; font-family: courier new,courier;">   if(url){</span>
<span style="font-size: small; font-family: courier new,courier;">     window.external.AddFavorite(url, title);</span>
<span style="font-size: small; font-family: courier new,courier;">   }else{</span>
<span style="font-size: small; font-family: courier new,courier;">     window.external.AddFavorite(window.document.location, title);//不传url就收藏本站本页面</span>
<span style="font-size: small; font-family: courier new,courier;">   }</span>
<span style="font-size: small; font-family: courier new,courier;"> }</span>

<strong><span style="font-size: small; font-family: courier new,courier;">9、查找节点的X坐标</span></strong>
<span style="font-size: small; font-family: courier new,courier;"> function findPosX(obj) {</span>
<span style="font-size: small; font-family: courier new,courier;">   var curleft = 0;</span>
<span style="font-size: small; font-family: courier new,courier;">   if (obj.offsetParent) {</span>
<span style="font-size: small; font-family: courier new,courier;">     while (obj.offsetParent) {</span>
<span style="font-size: small; font-family: courier new,courier;">       curleft += obj.offsetLeft;</span>
<span style="font-size: small; font-family: courier new,courier;">       obj = obj.offsetParent;</span>
<span style="font-size: small; font-family: courier new,courier;">     }</span>
<span style="font-size: small; font-family: courier new,courier;">   }else if (obj.x) {</span>
<span style="font-size: small; font-family: courier new,courier;">     curleft += obj.x;</span>
<span style="font-size: small; font-family: courier new,courier;">   }</span>

<span style="font-size: small; font-family: courier new,courier;">   return curleft;</span>
<span style="font-size: small; font-family: courier new,courier;"> }</span>

<strong><span style="font-size: small; font-family: courier new,courier;">10、查找节点的Y坐标</span></strong>
<span style="font-size: small; font-family: courier new,courier;"> function findPosY(obj) {</span>
<span style="font-size: small; font-family: courier new,courier;">   var curtop = 0;</span>
<span style="font-size: small; font-family: courier new,courier;">   if (obj.offsetParent) {</span>
<span style="font-size: small; font-family: courier new,courier;">     while (obj.offsetParent) {</span>
<span style="font-size: small; font-family: courier new,courier;">       curtop += obj.offsetTop;</span>
<span style="font-size: small; font-family: courier new,courier;">       obj = obj.offsetParent;</span>
<span style="font-size: small; font-family: courier new,courier;">     }</span>
<span style="font-size: small; font-family: courier new,courier;">   }else if (obj.y) {</span>
<span style="font-size: small; font-family: courier new,courier;">     curtop += obj.y;</span>
<span style="font-size: small; font-family: courier new,courier;">   }</span>

<span style="font-size: small; font-family: courier new,courier;">   return curtop;</span>
<span style="font-size: small; font-family: courier new,courier;"> }</span>

<strong><span style="font-size: small; font-family: courier new,courier;">11、是否是数字判断</span></strong>
<span style="font-size: small; font-family: courier new,courier;"> function isNumber(str) {</span>
<span style="font-size: small; font-family: courier new,courier;">   return str != "" &amp;&amp; !isNaN(str);</span>
<span style="font-size: small; font-family: courier new,courier;"> }</span>

<strong><span style="font-size: small; font-family: courier new,courier;">12、获取radio的值</span><span style="font-size: small; font-family: courier new,courier;">：field可以是单个radio对象，可以使radio对象数组</span></strong>
<span style="font-size: small; font-family: courier new,courier;"> function getRadioValue(field) {</span>
<span style="font-size: small; font-family: courier new,courier;">   if (field.length) {</span>
<span style="font-size: small; font-family: courier new,courier;">     for (var i = 0; i &lt; field.length; i++) {</span>
<span style="font-size: small; font-family: courier new,courier;">       if (field[i].checked) {</span>
<span style="font-size: small; font-family: courier new,courier;">         return field[i].value;</span>
<span style="font-size: small; font-family: courier new,courier;">       }</span>
<span style="font-size: small; font-family: courier new,courier;">     }</span>
<span style="font-size: small; font-family: courier new,courier;">   }</span>
<span style="font-size: small; font-family: courier new,courier;">   else {</span>
<span style="font-size: small; font-family: courier new,courier;">     if (field.checked) {</span>
<span style="font-size: small; font-family: courier new,courier;">       return field.value;</span>
<span style="font-size: small; font-family: courier new,courier;">     }</span>
<span style="font-size: small; font-family: courier new,courier;">   }</span>

<span style="font-size: small; font-family: courier new,courier;">   return null;</span>
<span style="font-size: small; font-family: courier new,courier;"> }</span>

<strong><span style="font-size: small; font-family: courier new,courier;">13、获取checkbox值数组，如果没有选中的默认值uncheckedValue</span></strong>
<span style="font-size: small; font-family: courier new,courier;"> //var field = document.getElementsByName("XX");</span>
<span style="font-size: small; font-family: courier new,courier;"> function getCheckboxValues(field, uncheckedValue) {</span>
<span style="font-size: small; font-family: courier new,courier;">   var valueArray = new Array();</span>
<span style="font-size: small; font-family: courier new,courier;">   if (field.length) {</span>
<span style="font-size: small; font-family: courier new,courier;">     for (var i = 0; i &lt; field.length; i++) {</span>
<span style="font-size: small; font-family: courier new,courier;">       if (field[i].checked) {</span>
<span style="font-size: small; font-family: courier new,courier;">         valueArray[i] = field[i].value;</span>
<span style="font-size: small; font-family: courier new,courier;">       }</span>
<span style="font-size: small; font-family: courier new,courier;">       else {</span>
<span style="font-size: small; font-family: courier new,courier;">         valueArray[i] = uncheckedValue;</span>
<span style="font-size: small; font-family: courier new,courier;">       }</span>
<span style="font-size: small; font-family: courier new,courier;">     }</span>
<span style="font-size: small; font-family: courier new,courier;">   }</span>
<span style="font-size: small; font-family: courier new,courier;">   else {</span>
<span style="font-size: small; font-family: courier new,courier;">     if (field.checked) {</span>
<span style="font-size: small; font-family: courier new,courier;">        valueArray[0] = field.value;</span>
<span style="font-size: small; font-family: courier new,courier;">     }</span>
<span style="font-size: small; font-family: courier new,courier;">     else {</span>
<span style="font-size: small; font-family: courier new,courier;">        valueArray[0] = uncheckedValue;</span>
<span style="font-size: small; font-family: courier new,courier;">     }</span>
<span style="font-size: small; font-family: courier new,courier;">   }</span>

<span style="font-size: small; font-family: courier new,courier;">   return valueArray;</span>
<span style="font-size: small; font-family: courier new,courier;"> }</span>

<strong><span style="font-size: small; font-family: courier new,courier;">14、获取html文本</span></strong>
<span style="font-size: small; font-family: courier new,courier;"> function getText(obj) {</span>
<span style="font-size: small; font-family: courier new,courier;">   return document.all ? obj.innerText : obj.textContent;</span>
<span style="font-size: small; font-family: courier new,courier;"> }</span>

<strong><span style="font-size: small; font-family: courier new,courier;">15、设置html文本</span></strong>
<span style="font-size: small; font-family: courier new,courier;"> function setText(obj, value) {</span>
<span style="font-size: small; font-family: courier new,courier;">   return document.all ? obj.innerText = value : obj.textContent = value;</span>
<span style="font-size: small; font-family: courier new,courier;"> }</span>

<strong><span style="font-size: small; font-family: courier new,courier;">16、firefox下强制换行，</span></strong>
<span style="font-size: small; font-family: courier new,courier;"> // intLen为换行的字数</span>
<span style="font-size: small; font-family: courier new,courier;"> function toBreakWord4Firefox(nameOfElements, intLen) {</span>
<span style="font-size: small; font-family: courier new,courier;">   if (document.all) { //if IE, do nothing, return</span>
<span style="font-size: small; font-family: courier new,courier;">     return;</span>
<span style="font-size: small; font-family: courier new,courier;">   }</span>

<span style="font-size: small; font-family: courier new,courier;">   var objs = document.getElementsByName(nameOfElements);</span>
<span style="font-size: small; font-family: courier new,courier;">   var obj;</span>
<span style="font-size: small; font-family: courier new,courier;">   for ( var i = 0; i &lt; objs.length; i++) {</span>
<span style="font-size: small; font-family: courier new,courier;">     obj = objs[i];</span>
<span style="font-size: small; font-family: courier new,courier;">     var strContent = obj.innerHTML;</span>
<span style="font-size: small; font-family: courier new,courier;">     var strTemp = "";</span>
<span style="font-size: small; font-family: courier new,courier;">     while (strContent.length &gt; intLen) {</span>
<span style="font-size: small; font-family: courier new,courier;">       strTemp += strContent.substr(0, intLen) + "&lt;br/&gt;";</span>
<span style="font-size: small; font-family: courier new,courier;">       strContent = strContent.substr(intLen, strContent.length);</span>
<span style="font-size: small; font-family: courier new,courier;">     }</span>
<span style="font-size: small; font-family: courier new,courier;">     strTemp += strContent;</span>
<span style="font-size: small; font-family: courier new,courier;">     obj.innerHTML = strTemp;</span>
<span style="font-size: small; font-family: courier new,courier;">   }</span>
<span style="font-size: small; font-family: courier new,courier;"> }</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>320</wp:post_id>
		<wp:post_date>2012-07-10 10:20:55</wp:post_date>
		<wp:post_date_gmt>2012-07-10 10:20:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>js%e4%bd%bf%e7%94%a8%e5%87%bd%e6%95%b0%e5%b0%81%e8%a3%85%ef%bc%8c%e6%8c%81%e7%bb%ad%e6%9b%b4%e6%96%b0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="jshtml"><![CDATA[JS/HTML/CSS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[50]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>分析中的自己（1）持续更新中...</title>
		<link>http://xuanner.com/wp/2012/07/20/%e5%88%86%e6%9e%90%e4%b8%ad%e7%9a%84%e8%87%aa%e5%b7%b1%ef%bc%881%ef%bc%89%e6%8c%81%e7%bb%ad%e6%9b%b4%e6%96%b0%e4%b8%ad/</link>
		<pubDate>Fri, 20 Jul 2012 19:02:16 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=330</guid>
		<description></description>
		<content:encoded><![CDATA[1、不知道这是一种什么样的性格，总是会被周围的人影响，总会去模仿别人，这种力量用好了就是遇强则强，用不好就是遇弱则弱，还有一种说法就是没有主见，容易被别人的观点和行为改变，但反过来，容易去学习别人，能让自己在模仿中快速成长，就像起初在建这个个人博客一样，一样也是模仿同事，觉得很有趣，就自己也去搞了一个。

2、我也没有否定，哥们儿我有一点点的强迫症，所以我最讨厌修改别人的代码，我总想把别人的代码风格改成我自己的。关于强迫症，用好了算是比较谨慎，用不好就会因为太顾小节而做不成大事。

3、这一点绝对是个缺点。有些人如果在确定做一件事就会想方设法去完成，不管中间有多少不懂得，先完成了再说。而有些人，则在完成一件重要的事时，如果遇到了困难，他就会想去搞明白产生这个困难的但是非必要的原因，所以每次都会发现，实际要做的事没做，反倒在搞一些不是很重要的小细节。这样果断不要，是逃避的一种表现，这个要改之。

4、为什么这么晚还没睡呢，因为有些事需要纠结，什么事呢，请看日记本中的2012-07-21的那篇日记，写在本子上的那篇。如想观看请联系本人。有时候，提建议很容易，做决定真的很难。

5、最后送自己一句话：做自己说过的事，说自己已经做过的事。

6、可怜的程序员，代码写多了，写故事和心情都用1,2,3标注的这么有条理了。可怜啊。。。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>330</wp:post_id>
		<wp:post_date>2012-07-20 19:02:16</wp:post_date>
		<wp:post_date_gmt>2012-07-20 19:02:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%88%86%e6%9e%90%e4%b8%ad%e7%9a%84%e8%87%aa%e5%b7%b1%ef%bc%881%ef%bc%89%e6%8c%81%e7%bb%ad%e6%9b%b4%e6%96%b0%e4%b8%ad</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e7%94%9f%e6%b4%bb%e7%82%b9%e6%bb%b4"><![CDATA[生活点滴]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[49]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>45</wp:comment_id>
			<wp:comment_author><![CDATA[潇依雪]]></wp:comment_author>
			<wp:comment_author_email>starcjhr@126.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>112.12.71.150</wp:comment_author_IP>
			<wp:comment_date>2012-08-17 16:32:04</wp:comment_date>
			<wp:comment_date_gmt>2012-08-17 08:32:04</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[期待遇见更多的你]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
		</wp:comment>
	</item>
	<item>
		<title>WordPress增强编辑器</title>
		<link>http://xuanner.com/wp/2012/08/10/wordpress%e5%a2%9e%e5%bc%ba%e7%bc%96%e8%be%91%e5%99%a8/</link>
		<pubDate>Fri, 10 Aug 2012 07:26:13 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=336</guid>
		<description></description>
		<content:encoded><![CDATA[1、废话不多说，直接教你怎么做。

2、在你的主题下找到functions.php文件。
例如我的是在wp-content/themes/black-with-orange/functions.php下面。

3、加上代码，你懂的。
[php]
function add_editor_buttons($buttons) {
  $buttons[] = 'fontselect';
  $buttons[] = 'fontsizeselect';
  $buttons[] = 'cleanup';
  $buttons[] = 'styleselect';
  $buttons[] = 'hr';
  $buttons[] = 'del';
  $buttons[] = 'sub';
  $buttons[] = 'sup';
  $buttons[] = 'copy';
  $buttons[] = 'paste';
  $buttons[] = 'cut';
  $buttons[] = 'undo';
  $buttons[] = 'image';
  $buttons[] = 'anchor';
  $buttons[] = 'backcolor';
  $buttons[] = 'wp_page';
  $buttons[] = 'charmap';
  return $buttons;
}
add_filter("mce_buttons_3", "add_editor_buttons");//执行
[/php]

4、各种key的含义，可以自由组合添加。
剪切(cut)
复制(copy)
粘贴(paste)
撤销(undo)
重做(redo)
居中(justifycenter)
加粗(bold)
斜体(italic)
左对齐(justifyleft)
右对齐(justfyright)
两端对齐(justfyfull)
插入超链接(link)
取消超链接(unlink)
插入图片(image)
清除格式(removeformat)
下划线(underline)
删除线(strikethrough)
锚文本(anchor)
新建文本(newdocument)
字体颜色(forecolor)
字体背景色(backcolor)
格式选择(formmatselect)
字体选择(fontselect)
字号选择(fontsizeselect)
样式选择(styleselect)
无序列表(bullist)
编号列表(numlist)
减少缩进(outdent)
缩进(indent)
帮助(wp_help)
打开HTML代码编辑器(code)
水平线(hr)
清除冗余代码(cleanup)
上标(sub)
下标(sup)
特殊符号(charmap)
插入more标签(wp_more)
插入分页标签(wp_page)
隐藏按钮显示开关(wp_adv)
隐藏按钮区起始部分(wp_adv_start)
隐藏按钮区结束部分(wp_adv_end)
拼写检查(spellchecker)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>336</wp:post_id>
		<wp:post_date>2012-08-10 07:26:13</wp:post_date>
		<wp:post_date_gmt>2012-08-10 07:26:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wordpress%e5%a2%9e%e5%bc%ba%e7%bc%96%e8%be%91%e5%99%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="worldpress"><![CDATA[WorldPress]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[40]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>IE6下select会挡住弹出div窗的解决方案</title>
		<link>http://xuanner.com/wp/2012/08/10/ie6%e4%b8%8bselect%e4%bc%9a%e6%8c%a1%e4%bd%8f%e5%bc%b9%e5%87%badiv%e7%aa%97%e7%9a%84%e8%a7%a3%e5%86%b3%e6%96%b9%e6%a1%88/</link>
		<pubDate>Fri, 10 Aug 2012 09:18:38 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=362</guid>
		<description></description>
		<content:encoded><![CDATA[1、一种较为直接的办法用iframe挡住select

2、iframe用到的css
[css]
&lt;style type="text/css"&gt;
.zindexDiv {
  position: absolute;
  width: expression(this.nextSibling.offsetWidth);
  height: expression(this.nextSibling.offsetHeight);
  top: expression(this.nextSibling.offsetTop);
  left: expression(this.nextSibling.offsetLeft);
}
&lt;/style&gt;
[/css]

3、把iframe放到要保护的移动的div上，这样的div就不怕被select挡住了，不过IE8好像对上面的样式有点意见，需要修整
[html]
&lt;iframe frameborder="0"&gt;&lt;/iframe&gt;
&lt;div&gt;&lt;/div&gt;
[/html]

4、万恶的IE6，去死好了。

5、还有一种更直接的，就是在弹出层的时候，直接隐藏select，在弹出层固定的情况下这种办法是不错的选择。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>362</wp:post_id>
		<wp:post_date>2012-08-10 09:18:38</wp:post_date>
		<wp:post_date_gmt>2012-08-10 09:18:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ie6%e4%b8%8bselect%e4%bc%9a%e6%8c%a1%e4%bd%8f%e5%bc%b9%e5%87%badiv%e7%aa%97%e7%9a%84%e8%a7%a3%e5%86%b3%e6%96%b9%e6%a1%88</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="jshtml"><![CDATA[JS/HTML/CSS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[35]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>JS简单屏蔽右键，CSS让DIV居中样式</title>
		<link>http://xuanner.com/wp/2012/08/11/js%e7%ae%80%e5%8d%95%e5%b1%8f%e8%94%bd%e5%8f%b3%e9%94%ae%ef%bc%8ccss%e8%ae%a9div%e5%b1%85%e4%b8%ad%e6%a0%b7%e5%bc%8f/</link>
		<pubDate>Sat, 11 Aug 2012 06:55:52 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=370</guid>
		<description></description>
		<content:encoded><![CDATA[1、简单的用JS屏蔽右键很简单一句话。
[java]
document.oncontextmenu=function(e){
return false;
}
[/java]

2、CSS让DIV居中样式的样式大概如下，根据实际情况调整。
[css]
&lt;style type="text/css"&gt;
.parentAuditInfoDivClass{
position: absolute;
left: 50%;
margin-left: -500px;
top: 50%;
margin-top: -300px;
width:835px;
height:550px;
}
&lt;/style&gt;
[/css]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>370</wp:post_id>
		<wp:post_date>2012-08-11 06:55:52</wp:post_date>
		<wp:post_date_gmt>2012-08-11 06:55:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>js%e7%ae%80%e5%8d%95%e5%b1%8f%e8%94%bd%e5%8f%b3%e9%94%ae%ef%bc%8ccss%e8%ae%a9div%e5%b1%85%e4%b8%ad%e6%a0%b7%e5%bc%8f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="jshtml"><![CDATA[JS/HTML/CSS]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[60]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>一款不错的wordpress编辑代码插件</title>
		<link>http://xuanner.com/wp/2012/08/13/%e4%b8%80%e6%ac%be%e4%b8%8d%e9%94%99%e7%9a%84wordpress%e7%bc%96%e8%be%91%e4%bb%a3%e7%a0%81%e6%8f%92%e4%bb%b6/</link>
		<pubDate>Mon, 13 Aug 2012 08:58:32 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=379</guid>
		<description></description>
		<content:encoded><![CDATA[1、首先下载地址：
http://wppluginsj.sourceforge.jp/syntax-highlighter/

2、下载下来后，安装上传到你的wordpress的插件存放地，例如我的是：/wp-content/plugins/

3、使用，如果你要添加代码，就用那种语言的代码中括起来就好了，例如，防止被转义用（）代替了，其实是用[]的哦：
(java) code here (/java)

4、支持的语言有如果列表：
ActionScript3 (as3)
Bash/shell (bash, shell)
C, C++ (cpp, c, c++)
C# (csharp)
ColdFusion (coldfusion)
CSS (css)
Delphi (delphi, pascal)
diff, patch (diff, patch)
Erlang (erlang)
Groovy (groovy)
Java (java)
Java Script (javascript)
JavaFX (javafx)
Perl (perl)
PHP (php)
Plain Text (plain, text)
PowerShell (powershell)
Python (python)
Ruby (ruby)
Scala (Scala)
SQL (sql)
Visual Basic (vb, vbnet)
XML/HTML (xml, html, xhtml, xslt)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>379</wp:post_id>
		<wp:post_date>2012-08-13 08:58:32</wp:post_date>
		<wp:post_date_gmt>2012-08-13 08:58:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%b8%80%e6%ac%be%e4%b8%8d%e9%94%99%e7%9a%84wordpress%e7%bc%96%e8%be%91%e4%bb%a3%e7%a0%81%e6%8f%92%e4%bb%b6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="worldpress"><![CDATA[WorldPress]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_ba82e99db2674737f86e1fc71d827112</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_cff04e71d59f0fd81c9d969e87af1605</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_ba82e99db2674737f86e1fc71d827112</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_cff04e71d59f0fd81c9d969e87af1605</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_e594e77aca8252feafda9e76ed1f0267</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[31]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>WordPress添加CNZZ站点统计</title>
		<link>http://xuanner.com/wp/2012/08/13/wordpress%e6%b7%bb%e5%8a%a0cnzz%e7%ab%99%e7%82%b9%e7%bb%9f%e8%ae%a1/</link>
		<pubDate>Mon, 13 Aug 2012 09:34:20 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://www.xuanner.com/?p=384</guid>
		<description></description>
		<content:encoded><![CDATA[1、先去CDZZ网站注册申请一个账号，然后设置站点获取代码。地址：
<a href="http://www.cnzz.com/">http://www.cnzz.com/</a>

2、下载你的主题的footer.php文件，例如我的：
/wp-content/themes/black-with-orange/footer.php

3、把代码复制到&lt;/body&gt;之前就可以了。其他废话就不多说了。很简单的。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>384</wp:post_id>
		<wp:post_date>2012-08-13 09:34:20</wp:post_date>
		<wp:post_date_gmt>2012-08-13 09:34:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wordpress%e6%b7%bb%e5%8a%a0cnzz%e7%ab%99%e7%82%b9%e7%bb%9f%e8%ae%a1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="worldpress"><![CDATA[WorldPress]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[74]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>装饰模式</title>
		<link>http://xuanner.com/wp/2012/08/18/%e8%a3%85%e9%a5%b0%e6%a8%a1%e5%bc%8f/</link>
		<pubDate>Sat, 18 Aug 2012 15:06:55 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=434</guid>
		<description></description>
		<content:encoded><![CDATA[1、定义
动态地给一个对象添加一些额外的职责。就功能来说，装饰模式比生成子类更为灵活。是替代继承关系的一种方案。

2、定义解释
假设要给一个核心类添加20种额外的功能。用继承实现的话，需要一个一个继承下来，那时非常可怕的，而且不能灵活的选择几种使用。如果使用装饰模式，就只要写20个装饰类，然后再使用的时候，动态地添加修改即可。

3、代码示例
[java]
//核心类的抽象（装饰模式一般有一个最原始的借口或者抽闲类，这个就是）
public abstract class Component{
  public abstract void operate();
}

//核心类的实现，就是没有任何修改的实现
public class ConcreteComponent extends Component{
  @Override
  public void operate(){
    System.out.print("我是核心操作。");
  }
}

//装饰类的抽象，如果只有一个装饰类，那就不用这个抽象也可，仅为抽取公共代码
public abstract Decorater extends Component{
  private Component component = null;

  public Decorater(Component _component){
    this.component = _component;
  }

  @Override
  public void operate(){
    this.component.operate();
  }
}

//好，现在写第一个装饰类
public class ConcreteDecorator1 extends Decorater{
  public ConcreteDecorator1(Component _component){
    super(_component);
  }

  private void method1(){
    System.out.print("我是装饰方法1。");
  }

  @Override
  public void operate(){
    thismethod1();
    super.operate();
  }
}

//来，现在写第二个装饰类
public class ConcreteDecorator2 extends Decorater{
  public ConcreteDecorator2(Component _component){
    super(_component);
  }

  private void method2(){
    System.out.print("我是装饰方法2。");
  }

  @Override
  public void operate(){
    super.operate();
    thismethod2();
  }
}

//看代码中很奇妙的使用
Component component = new ConcreteComponent();
componnet.operate();//这里输出的仅是：我是核心操作

//第一次装饰
componnet = new ConcreteDecorator1(componnet);
componnet.operate();//这里输出的是：我是装饰方法1。我是核心操作

//第二次装饰
componnet = new ConcreteDecorator2(componnet);
componnet.operate();//这里输出的是：我是装饰方法1。我是核心操作。我是装饰方法2。
[/java]

4、装饰模式的优点
（1）装饰类很被装饰类独立发展，不会相互耦合。
（2）是继承的一种替代方案
（3）可以动态的扩张装饰类

5、缺点
（1）只有一个，就是多层装饰，会增加代码的复杂度。
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>434</wp:post_id>
		<wp:post_date>2012-08-18 23:06:55</wp:post_date>
		<wp:post_date_gmt>2012-08-18 15:06:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%a3%85%e9%a5%b0%e6%a8%a1%e5%bc%8f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f"><![CDATA[设计模式]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[38]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Tomcat原理之（总体架构）</title>
		<link>http://xuanner.com/wp/2012/08/24/tomcat%e5%8e%9f%e7%90%86%e4%b9%8b%ef%bc%88%e6%80%bb%e4%bd%93%e6%9e%b6%e6%9e%84%ef%bc%89/</link>
		<pubDate>Thu, 23 Aug 2012 16:49:26 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=436</guid>
		<description></description>
		<content:encoded><![CDATA[1、Tomcat是一个纯Java写的不错的一个能运行Jsp和Servlet的服务器。它的结构以组件的形式存在。主要有：一个连接器（Connector）,四个容器：Engine、Host、Context、Wrapper。下面以一个请求来分析上面的5个组件。

（1）连接器（Connector）
连接器底层是用Java的Socket实现的，简单的就是Java的ServerSocket一直循环监听来自浏览器的请求，一旦收到请求，就把请求内容封装成一个原始的request类和response类，然后提交给他所关联的一个容器，到此他的接受任务完成，继续监听浏览器的请求。当然他还监听来自容器的返回结果，把响应返回给浏览器。

（2）四个容器：Engine、Host、Context、Wrapper
他们是父子关系：Engine代表一个Tomcat引擎，Host代表引擎内的虚拟主机，Context代表虚拟主机内的一个项目，Wrapper代表项目里的一个servlet处理器。所以，Engine可以有多个子Host，Host可以有多个Context，Context可以有多个Wrapper，但是Wrapper是最小的容器了，没有子容器。而这4个容器内都有一个管道，管道内有很多阀，这些阀相当于过滤器。

（3）所以，当一个请求过来，会先被Connector监听到，然后把请求分装成原始request和response对象，提交给Engine，Engine先执行自己体内的管道内的各种阀，一阵过滤之后，提交给Host，Host做同样的事情调用体内的管道后，提交给Context，Context同理处理后，提交给Wrapper，Wrapper就是具体处理我们的servlet的容器，处理完后，再把处理过后的request和response，返回给他的父容器，即Context，Context返回给Host，Host返回给Engine，再有Engine交给Connector，由Connector把响应返回给浏览器。

（4）上面就是Tomcat整个的大致处理请求的一个过程，当然这是精炼的不要再精炼了，真实的Tomcat还有别的很多组件在起作用。下面做一下简单的介绍。具体，日后慢慢补全。

2、Tomcat的国际化组件
Tomcat的国际化是由StringManager类来实现的，Tomcat的每个包下都有一个资源文件，当类想要获取消息时，它就用StringManager类去取它所在的包的资源文件中找，一个包一个StringManager实例，包内的所有类都共享这个实例。

3、Lifecycle接口来实现容器的生命周期
每个容器都会实现这个接口，说白了，这个接口就实现两种功能：
（1）实现接口中的start()方法和stop()方法，Tomcat一个经典的实现就是统一启动/关闭。就是当父容器启动时，它就会调用它的所有子容器的start()方法，用来启动子容器，子容器的子容器就由子容器调用，一直下去直到所有容器启动起来，关闭也是同一个道理。
（2）Lifecycle接口还有一个可以实现触发器的功能，就是在容器中注册了事件后，可以触发相应的事件，具体用那些方法来实现监听触发功能就不多说了。

4、日志组件，接口表示Logger
这个很简单，就是各种日志的输出，每个日志对象中都有一个级别，只有级别低的才会被记录。其中Tomcat默认实现了有：
（1）SystemOutLogger类，这个类就是把日志输出到System.out.println()方法。
（2）SystemErrLogger类，这个类就是日志输出到System.err.()方法。
（3）FileLogger类，这个就是记录到文件中。

5、载入器组件，接口表示Loader
实现了这个接口的类就是载入器了，为什么Tomcat不用JDK自带的载入器内，一下是两点理由：
（1）安全性考虑，servlet不允许随意访问规定以外的类库。
（2）实现类的重载，当一个类变了，Tomcat可以自动识别重新加载。它是用一个线程去轮询每个类来实现知道哪些类变了，然后需要重载。

6、Session管理组件，表示接口Manager
这个不多说，就是记录管理浏览器发起的同一个用户的一些信息。Tomcat的默认实现有：
（1）StandardManager类。这个是将Session记录到内存中的。
（2）还有一个可以存在文件中，一个存在数据库中，对应的类就不列举了，这里只是简要的说明而已。

PS：暂时只看到这里，还有很多组件以后更新，一个完整的Tomcat是包含的很多复杂的组件，特别是Tomcat5之后用JMX来管理Tomcat中的一些对象，所以再接再厉。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>436</wp:post_id>
		<wp:post_date>2012-08-24 00:49:26</wp:post_date>
		<wp:post_date_gmt>2012-08-23 16:49:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tomcat%e5%8e%9f%e7%90%86%e4%b9%8b%ef%bc%88%e6%80%bb%e4%bd%93%e6%9e%b6%e6%9e%84%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<category domain="category" nicename="tomcat%e5%8e%9f%e7%90%86"><![CDATA[Tomcat原理]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[77]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>心情一枚(2012-08-25 23:08)</title>
		<link>http://xuanner.com/wp/2012/08/25/%e5%bf%83%e6%83%85%e4%b8%80%e6%9e%9a2012-08-25-2308/</link>
		<pubDate>Sat, 25 Aug 2012 15:09:14 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=439</guid>
		<description></description>
		<content:encoded><![CDATA[为什么我总是这样。
喜欢。一个人走着走着。想着一些虚无缥缈的东西。

和同事去玩三国杀，狼人。
玩着玩着就会觉得。怎么是在浪费时间浪费生命。

也许。我还不够勇敢，不够执着。不敢勇敢的踏出这一步。
也许。永远不会踏出这一步。

是这个世界改变了的自己。还是自己改变了自己。
走着走着又到了西城广场。
觉得有必要保存一下，上个厕所。

我已经发现。自己不够自信。特别是在陌生人面前。
也许真的是因为。自己天生的情商不够高。但是我不相信这些。

其实。我很明白自己心里在想什么。缺少的是什么？只是不敢面对。不敢承认。才会有这些虚无缥缈的想法。才会犹豫。不敢踏出那所谓的一步。

突然。就这样走迷失了。
不懂得拒绝。会让自己陷入，惆怅，痛苦，迷茫。
懂得要学会拒绝。让自己过的好一点。随心一点。
少了你。世界没差。

总是这么忧郁。心情当然是灰色的。写出来总是会好很多。
怕被人看到。又怕被人看不到。

胡思乱想的走着走着。路总是很短。过了桥，就又到了登新公寓的门口。
毕竟。在那里住了整整一年。买点什么。买根棒冰。祭奠一下什么。

讯飞输入法就是好。可以边走边说。

25岁的男人。想不到自己心爱的东西。是一种悲催的二吗？
吃根冰棍先。

羡慕。是因为得不到。
忌妒。是因为两倍的羡慕。
恨。是因为无限次方的忌妒。

吃了棒冰，居然就到家了。
童鞋。洗洗睡了吧。

-------------------这是分割线（2012-08-26 01:56）----------------------------
结果。我还是不懂得拒绝，随心而动。
想的太多，顾虑的太多，以为的太多。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>439</wp:post_id>
		<wp:post_date>2012-08-25 23:09:14</wp:post_date>
		<wp:post_date_gmt>2012-08-25 15:09:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%bf%83%e6%83%85%e4%b8%80%e6%9e%9a2012-08-25-2308</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e7%94%9f%e6%b4%bb%e7%82%b9%e6%bb%b4"><![CDATA[生活点滴]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[32]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Spring之Filter的代理类：DelegatingFilterProxy</title>
		<link>http://xuanner.com/wp/2012/09/07/spring%e4%b9%8bfilter%e7%9a%84%e4%bb%a3%e7%90%86%e7%b1%bb%ef%bc%9adelegatingfilterproxy/</link>
		<pubDate>Fri, 07 Sep 2012 06:52:09 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=446</guid>
		<description></description>
		<content:encoded><![CDATA[1、DelegatingFilterProxy的原理
DelegatingFilterProxy就是一个对于servlet filter的代理，用这个类的好处主要是通过Spring容器来管理servlet filter的生命周期，还有就是如果filter中需要一些Spring容器的实例，可以通过spring直接注入，另外读取一些配置文件这些便利的操作都可以通过Spring来配置实现。

2、使用方法例子
（1）在web.xml配置代理类,跟一般的filter配置一样一样
[xml]
<filter>
    <filter-name>myFilter</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
</filter>

<filter-mapping>
    <filter-name>myFilter</filter-name>
    <url-pattern>/*</url-pattern>
</filter-mapping>
[/xml]

（2）在Spring的配置文件中配置你真正的filter类，跟配普通的bean一样一样
[xml]
<bean name="myFilter" class="com.net.xuan.MyFilter"></bean>
[/xml]

3、注意事项
<filter-name>中的名字和bean的名字要一样，这样Spring才能找到需要代理的filter帮你执行，或者在配置代理的时候，指定你要被代理的filter，例如：
[xml]
<filter>  
    <filter-name>otherFilter</filter-name>  
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    <init-param>  
        <param-name>targetBeanName</param-name>  
        <param-value>myFilter</param-value>  
    </init-param>
</filter>
[/xml]
这样的配置法，Spring也能找到对应要执行的filter了。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>446</wp:post_id>
		<wp:post_date>2012-09-07 14:52:09</wp:post_date>
		<wp:post_date_gmt>2012-09-07 06:52:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>spring%e4%b9%8bfilter%e7%9a%84%e4%bb%a3%e7%90%86%e7%b1%bb%ef%bc%9adelegatingfilterproxy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[33]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>HttpSessionListener监听器的使用</title>
		<link>http://xuanner.com/wp/2012/09/07/httpsessionlistener%e7%9b%91%e5%90%ac%e5%99%a8%e7%9a%84%e4%bd%bf%e7%94%a8/</link>
		<pubDate>Fri, 07 Sep 2012 11:44:58 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=450</guid>
		<description></description>
		<content:encoded><![CDATA[1、简单介绍
HttpSessionListener是一个session创建销毁的监听器，我们要做的就是实现这个接口，然后把实现的监听器配置在web.xml中即可。当tomcat启动的时候，会去解析web.xml的一些配置，当解析到这个监听器，就会注册到tomcat的session管理器中，每当有新的session创建，或者有session被销毁，就会通知这个监听器。可以用来统计在线人数，但不准确，要准确统计可以用ip，因为同一个人如果开了两个浏览器，在服务器端就会产生两个session

2、使用示例
（1）实现该接口
[java]
public class SessionManager implements HttpSessionListener {

    //session创建时，这个方法会被调用+
    @Override
    public void sessionCreated(HttpSessionEvent sessionEvent) {
        HttpSession session = sessionEvent.getSession();
        //...
    }

    //session失效时，这个方法会被调用
    @Override
    public void sessionDestroyed(HttpSessionEvent sessionEvent) {
        HttpSession session = sessionEvent.getSession();
        //...
    }
}
[/java]
（2）在web.xml中配置监听器即可
[xml]
<listener>
    <listener-class>net.zdsoft.etoh2.client.SessionManager</listener-class>
</listener>
[/xml]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>450</wp:post_id>
		<wp:post_date>2012-09-07 19:44:58</wp:post_date>
		<wp:post_date_gmt>2012-09-07 11:44:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>httpsessionlistener%e7%9b%91%e5%90%ac%e5%99%a8%e7%9a%84%e4%bd%bf%e7%94%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[85]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Spring之IntrospectorCleanupListener监听器使用</title>
		<link>http://xuanner.com/wp/2012/09/07/spring%e4%b9%8bintrospectorcleanuplistener%e7%9b%91%e5%90%ac%e5%99%a8%e4%bd%bf%e7%94%a8/</link>
		<pubDate>Fri, 07 Sep 2012 12:04:10 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=452</guid>
		<description></description>
		<content:encoded><![CDATA[1、简单介绍
这个监听器主要负责处理由JavaBean Introspector使用而引起的缓冲泄露, 它在web应用关闭时清除JavaBean Introspector,在web.xml中注册这个listener可以保证在web应用关闭的时候释放掉与这个web应用相关的class loader和由它管理的类。如果你使用了JavaBeans Introspector来分析应用中的类。Introspector缓冲中会保留这些类的引用.结果在你的应用关闭的时候，这些类以及web应用相关的class loader没有被垃圾回收。
spring托管的bean不需要使用这个监听器.因为spring它自己的introspection所使用的缓冲在分析完一个类之后会被马上从javabeans introspector缓冲中清除掉。
Spring应用程序中的类从来不直接使用JavaBeans Introspector，所以他们一般不会导致内部查看资源泄露，但是一些类库和框架往往会产生这个问题。如:Struts和Quartz。

2、JavaBean Introspector补充介绍
就是用反射来操作一些JavaBean

3、使用示例
（1）很简单，在web.xml配置就OK了
[xml]
<listener>
    <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
</listener>
[/xml]

4、最后一句总结
这个监听器主要是用来解决Struts和Quartz产生的内存泄露问题。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>452</wp:post_id>
		<wp:post_date>2012-09-07 20:04:10</wp:post_date>
		<wp:post_date_gmt>2012-09-07 12:04:10</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>spring%e4%b9%8bintrospectorcleanuplistener%e7%9b%91%e5%90%ac%e5%99%a8%e4%bd%bf%e7%94%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[96]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Android开发笔记20120920</title>
		<link>http://xuanner.com/wp/2012/09/20/android%e5%bc%80%e5%8f%91%e7%ac%94%e8%ae%b0/</link>
		<pubDate>Wed, 19 Sep 2012 16:05:52 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=455</guid>
		<description></description>
		<content:encoded><![CDATA[1、getSystemService
getSystemService是Android很重要的一个API，它是Activity的一个方法，根据传入的NAME来取得对应的Object，然后转换成相应的服务对象

2、ConnectivityManager
主要管理和网络连接相关的操作。可以用上面的方法得到。
[java]
ConnectivityManager connectManager 
= (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
[/java]

3、NetworkInfo
可以用来判断你手机联网的情况。
[java]
if (networkInfo == null 
  || !connectManager.getActiveNetworkInfo().isAvailable()
  || !connectManager.getActiveNetworkInfo().isConnected()) {
       //表示没有网络
}
[/java]

4、AlertDialog
跳出一个对话框。
[java]
AlertDialog networkDialog = 
new AlertDialog.Builder(LoginActivity.this).setCancelable(true)
  .setTitle("标题")
  .setMessage("这里是提示文字")
  .setPositiveButton("设置", new DialogInterface.OnClickListener() {
    @Override
    public void onClick(DialogInterface dialog, int which) {
      Intent intent = new Intent(Settings.ACTION_WIRELESS_SETTINGS);
      startActivity(intent);//跳转到指定Activity
    }
  })
  .setNegativeButton("取消", new DialogInterface.OnClickListener() {
    @Override
    public void onClick(DialogInterface dialog, int which) {
      dialog.dismiss();
    }
  })
  .create();

networkDialog.show();
[/java]

5、Toast
一个吐司提示。哈哈。
[java]
Toast toast = Toast.makeText(getApplicationContext(), "111", Toast.LENGTH_SHORT);
toast.setText("错误提示");
toast.show();
[/java]

6、Handler
主要接受子线程发送的数据, 并用此数据配合主线程更新UI。
解释：
程序启动时，Android首先会开启一个主线程(也就是UI线程)，这个UI线程一直在跑监听一些事件的分发，例如，当你按下一个Button，他就会去执行OnClick事件。但是，UI线程不能执行时间很长的任务，例如连接网络，不然会出现假死现象。这时，你一般会开一个子线程去执行。但涉及到UI更新时，不能用直接用子线程去更新（线程不安全），所有要用Handler把更新UI部分的任务交给UI线程去做。
[java]
Handler handler = new Handler();

new Thread() {
  @Override
  public void run() {
    //这里执行一些时间较长的任务

    //当需要更新UI时，用handler把任务交给UI做，底层是把任务放到一个任务队列中，等UI线程执行
    handler.post(new Runnable() {
      @Override
      public void run() {
        btnLogin.setEnabled(false);
      }
    });
  }
}
[/java]

7、BaseAdapter
用来绑定控件的数据。例如可以绑定ListView。其中BaseAdapter需要重写的方法:
（1）getCount()
（2）getItem(int position)
（3）getItemId(int position)
（4）getView(int position, View convertView, ViewGroup parent)
[java]
convertView = LayoutInflater.from(context).inflate(R.layout.listview_item, null);
[/java]
解释：
listView在开始绘制的时候，系统首先调用getCount()函数，根据他的返回值得到 listView的长度，然后根据这个长度，调用getView()逐一绘制每一行。系统在绘制列表的每一行的时候将调用方法getView()。该方法有三个参数：position表示绘制第几行，convertView就是需要返回的View，我们可以用xml的形式得到一个View，例如上面的代码。parent很少用到。
（5）notifyDataSetChanged方法
可以在不刷新Activity下，通知Activity刷新ListView的数据。

8、LayoutInflater
LayoutInflater的作用类似于findViewById(),不同点是LayoutInflater是用来找layout文件夹下的xml布局文件，并且实例化成View！而findViewById()是找具体某一个xml下的具体 widget控件(如:Button,TextView等)。
[java]
View view=LayoutInflater.from(this).inflate(R.layout.ID, null);
[/java]

9、ProgressDialog
进度条。
[java]
ProgressDialog progressDialog = new ProgressDialog(this);
progressDialog.setTitle("请稍候...");
progressDialog.setCancelable(false);

//显示进度条
progressDialog.show();
//设置进度条最大值
progressDialog.setMax(100);
//消失进度条
progressDialog.dismiss();
[/java]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>455</wp:post_id>
		<wp:post_date>2012-09-20 00:05:52</wp:post_date>
		<wp:post_date_gmt>2012-09-19 16:05:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>android%e5%bc%80%e5%8f%91%e7%ac%94%e8%ae%b0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[34]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Android开发笔记20120921</title>
		<link>http://xuanner.com/wp/2012/09/21/%e5%ae%89%e5%8d%93%e5%bc%80%e5%8f%91%e7%ac%94%e8%ae%b020120921%ef%bc%88%e5%b8%b8%e7%94%a8%e6%8e%a7%e4%bb%b6%ef%bc%89/</link>
		<pubDate>Fri, 21 Sep 2012 15:23:07 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=472</guid>
		<description></description>
		<content:encoded><![CDATA[1、ListView
（1）列表项目之间无缝隙设置
[java]
ListView listView= (ListView) findViewById(R.id.listViewXML);
listView.setDividerHeight(0);
[/java]

2、onBackPressed方法
这个方法是Activity内部方法。如果复写该方法，就可以执行，当你按返回键时的动作。下面如果按返回方法，就触发我们自己定义的按钮。
[java]
Button returnBtn = new Button();

@Override
public void onBackPressed() {
  returnBtn.performClick();
}
[/java]

3、在Activity中打开键盘输入。
[java]
Timer timer = new Timer();
  timer.schedule(new TimerTask() {
  @Override
  public void run() {
    ((InputMethodManager)getSystemService(INPUT_METHOD_SERVICE))
           .toggleSoftInput(0,
           InputMethodManager.HIDE_NOT_ALWAYS);// 200ms后打开键盘
    }
  }, 200);
[/java]

4、Activity的四种加载模式
（1）standard（默认）
如果原来栈中有ABCD，现在D通过Intent跳转到D，那么现在栈中是ABCDD，D在到C，那么会有ABCDDC。
（2）singleTop
如果原来栈中有ABCD，现在D通过Intent跳转到D，那么现在栈中是ABCD，D在到C，那么会有ABCDC。因为C不在栈顶。
（3）singleTask
如果原来栈中有ABCD，现在D通过Intent跳转到D，那么现在栈中是ABCD，D在到C，那么会有ABC。其中D就被销毁了。
（4）singleInstance
被申明为singleInstance会新建一个栈。
如果原来栈中有ABC，现在C通过Intent跳转到D。而D是singleInstance模式，那么会新建一个栈2是D，原来的还是ABC，如果D再到D，栈2还是D，如果D到C，那么栈1就会使ABCC，因为栈1还是原来的standard（默认）模式。

5、Intent
Activity之间的数据传递。
Activity的A
[java]
Intent intent = new Intent();
intent.setClass(A.this, B.class);
intent.setFlags(Intent.FLAG_ACTIVITY_NO_USER_ACTION);//有待？？？
intent.putExtra("name", "xuan");//要传递的参数
startActivity(intent);//跳转到B
[/java]
Activity的B
[java]
Intent intent = getIntent();
String name = intent.getStringExtra("name");
[/java]

6、startActivityForResult方法跳转Activity
为了实现这样的情境：主界面A我要跳到子界面B，然后B处理有返回一些数据给A。position参数是子界面返回的状态，能让A知道是哪个子界面返回的东东。
[java]
startActivityForResult(intent, position);
[/java]
那么A就要覆写onActivityResult方法。requestCode就是子界面返回的标志，就是上面的position了。
[java]
@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data) {
  super.onActivityResult(requestCode, resultCode, data);
}
[/java]
那么B中就可以这样写
[java]
getIntent().putExtra(CONTENT, content.getText().toString());
setResult(RESULT_OK, getIntent());
B.this.finish();
[/java]

7、Bundle
Activity与Activity跳转之间数据传递可以用Bundle实现，比较方便。
Activity的A这样发送数据
[java]
Intent intent = new Intent(A.class, B.class);
  Bundle bundle = new Bundle();
  bundle.putString("name","xuan");
  intent.putExtras(bundle);

  intent.setFlags(Intent.FLAG_ACTIVITY_NO_USER_ACTION);
  startActivity(intent);
[/java]
Activity的B就可以这样收到数据
[java]
Bundle bundle = getIntent().getExtras(); 
String name = bundle.getString("name");//读出数据

//也可以直接
String name = getIntent().getStringExtra("name");
[/java]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>472</wp:post_id>
		<wp:post_date>2012-09-21 23:23:07</wp:post_date>
		<wp:post_date_gmt>2012-09-21 15:23:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%ae%89%e5%8d%93%e5%bc%80%e5%8f%91%e7%ac%94%e8%ae%b020120921%ef%bc%88%e5%b8%b8%e7%94%a8%e6%8e%a7%e4%bb%b6%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[33]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>wait、notify、notifyAll线程之间的协作</title>
		<link>http://xuanner.com/wp/2012/09/22/wait%e3%80%81notify%e3%80%81notifyall%e7%ba%bf%e7%a8%8b%e4%b9%8b%e9%97%b4%e7%9a%84%e5%8d%8f%e4%bd%9c/</link>
		<pubDate>Sat, 22 Sep 2012 15:39:05 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=488</guid>
		<description></description>
		<content:encoded><![CDATA[1、这三个方法是属于Object的。

2、线程只有获取了某个对象的锁之后才能调用该对象的wait方法。即在同步代码块中或者同步方法中进行调用的。这个时候，这个对象的等待队列中就有了这个线程，这个线程并且是挂起的。并且这个线程释放了该对象的锁。注意：sleep和yield是不会释放锁的。

3、要使上面线程继续，就必须有另外一个线程，先获取这个对象的锁，让后调用这个对象的，notify方法，这样刚才挂起的线程就又开始运行了。notifyAll是把该对象中的所有挂起的线程都唤醒。

4、wait(500)表示只等500毫秒，如果还没有别的线程来唤醒他，他就自己运行了，如果不设置参数，就是无限期的等待下去。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>488</wp:post_id>
		<wp:post_date>2012-09-22 23:39:05</wp:post_date>
		<wp:post_date_gmt>2012-09-22 15:39:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wait%e3%80%81notify%e3%80%81notifyall%e7%ba%bf%e7%a8%8b%e4%b9%8b%e9%97%b4%e7%9a%84%e5%8d%8f%e4%bd%9c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[39]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>synchronized的注意点</title>
		<link>http://xuanner.com/wp/2012/09/22/synchronized%e7%9a%84%e6%b3%a8%e6%84%8f%e7%82%b9/</link>
		<pubDate>Sat, 22 Sep 2012 15:55:48 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=490</guid>
		<description></description>
		<content:encoded><![CDATA[1、说个废话，java中类似i++的不是原子性的操作。

2、所有的synchronized方法共享对象的锁。
即如果有该对象中有两个方法：
[java]
synchronized void f(){};
synchronized void g(){};
[/java]
当一个线程调用某个对象的f()方法时，任何线程都不能调用该对象的同步方法了。注意：甚至是不是同步的方法，包括这个对象的任何资源，别的线程都不能操作了。

3、synchronized是可重入的。
即当一个线程调用某个对象的f()方法时，如果在该方法中调用了第二个方法，在该方法中又调用了同一个对象的别的方法，这样是可以的。JVM会计数的，当然前提是你必须先得到那个对象的锁。

4、synchronized static
刚才说的都是对象上的锁，如果在方法加上synchronized static，那么就只就需要获取到类级别的锁才能进入。

5、synchronized除了在方法上添加，还有第二种用法。
[java]
//要获取到syncObject对象的锁才能进入
synchronized(syncObject){
//do something
}
[/java]
上面是临界区的一种写法，只有获取到syncObject的锁才能进入，然后出来后会把锁返回给syncObject对象，这样就能保证do something这块代码永远只会被一个线程执行到。

6、可以利用上面锁是属于对象的特点优化同步关系。由上面分析如果直接用synchronized锁住整个对象，这样太伤了。
[java]
synchronized(syncObject1){
//do something1
}

synchronized(syncObject2){
//do something2
}
[/java]
上面的两个同步区其实是并发的，当一个线程在do something1区时，另一个线程可以在do something2区中，因为这两个同步块用的是不同的对象，互相不受影响，这样就可以优化一下了。

PS：关于锁的概念只要记住，锁是属于Object对象的。OK]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>490</wp:post_id>
		<wp:post_date>2012-09-22 23:55:48</wp:post_date>
		<wp:post_date_gmt>2012-09-22 15:55:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>synchronized%e7%9a%84%e6%b3%a8%e6%84%8f%e7%82%b9</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[31]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Android开发笔记20120923</title>
		<link>http://xuanner.com/wp/2012/09/23/android%e5%bc%80%e5%8f%91%e7%ac%94%e8%ae%b020120923-2/</link>
		<pubDate>Sat, 22 Sep 2012 17:04:38 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=498</guid>
		<description></description>
		<content:encoded><![CDATA[1、BroadcastReceiver
BroadcastReceiver也就是“广播接收者”的意思，顾名思义，它就是用来接收来自系统和应用中的广播。在Android系统中，广播体现在方方面面，例如当开机完成后系统会产生一条广播，接收到这条广播就能实现开机启动服务的功能；当网络状态改变时系统会产生一条广播，接收到这条广播就能及时地做出提示和保存数据等操作；当电池电量改变时，系统会产生一条广播，接收到这条广播就能在电量低时告知用户及时保存进度，等等。

2、Bundle
用于不同Activity之间的数据传递。
一些重要的方法：
[java]
//清除此Bundle映射中的所有保存的数据
clear()

//克隆当前Bundle
clone()

//返回指定key的值
containsKey(String key)

//返回指定key的字符
getString(String key)

//指示是否包含任何捆绑打包文件描述符
hasFileDescriptors()

//如果这个捆绑映射为空，则返回true
isEmpty()

//插入一个给定key的字符串值
putString(String key, String value)

//读取这个parcel的内容
readFromParcel(Parcel parcel)

//移除指定key的值
remove(String key)

//写入这个parcel的内容
writeToParcel(Parcel parcel, int flags)
[/java]

3、SQLiteOpenHelper
（1）使用SQLiteOpenHelper可以更好的操作数据库，我们要做的只要继承SQLiteOpenHelper类，然后覆写下面方法就可以了
[java]
//构造函数
SQLiteOpenHelper(Context context, String name, CursorFactory factory,int version)

//更新和创建方法
onCreate(SQLiteDatabase db)
onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion)
[/java]
（2）构造方法的参数含义
context是为打开创建数据库库用的，
name是数据库的文件名称，
factory设置为空使用默认的，
version是创建或打开的数据库的版本号，这个必须大于等于1
（3）他的工作机制是这样的
当你在程序中调用实现对象的getWritableDatabase()方法的时候，会自动去检查你的databases目录，如果里面不存在你需要打开的数据库文件，则会自动调用你所写的方法onCreate，然后返回你所创建的数据库表象，如果已经存在则会直接返回该数据库的表象。
如果version版本和上一次打开的version不一致的时候，就会自动调用onUpgrade方法。

ps：在Activity中，如果打开了数据库，一定要记得关闭！！！]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>498</wp:post_id>
		<wp:post_date>2012-09-23 01:04:38</wp:post_date>
		<wp:post_date_gmt>2012-09-22 17:04:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>android%e5%bc%80%e5%8f%91%e7%ac%94%e8%ae%b020120923-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[27]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Android的五大布局</title>
		<link>http://xuanner.com/wp/2012/09/25/android%e7%9a%84%e4%ba%94%e5%a4%a7%e5%b8%83%e5%b1%80/</link>
		<pubDate>Tue, 25 Sep 2012 15:47:08 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=503</guid>
		<description></description>
		<content:encoded><![CDATA[1、FrameLayout（框架布局）
最简单的布局，就是你的所有添加的控件，都会被放到左上角。后一个元素会把前一个元素挡住。

2、LinearLayout（线性布局）
可以根据属性，让元素一行一行或者一列一列的排列在屏幕上。

3、RelativeLayout（相对布局）
允许子元素指定他们相对于其它元素或父元素的位置（通过ID 指定）

4、TableLayout（表格布局）
将子元素的位置分配到行或列中。一个TableLayout 由许多的TableRow 组成。

5、AbsoluteLayout（绝对布局）
可以让子元素指定准确的x/y坐标值，并显示在屏幕上。(0, 0)为左上角，当向下或向右移动时，坐标值将变大。不推荐使用。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>503</wp:post_id>
		<wp:post_date>2012-09-25 23:47:08</wp:post_date>
		<wp:post_date_gmt>2012-09-25 15:47:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>android%e7%9a%84%e4%ba%94%e5%a4%a7%e5%b8%83%e5%b1%80</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[71]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Android之BroadCastReceiver广播接收者</title>
		<link>http://xuanner.com/wp/2012/09/26/android%e4%b9%8bbroadcastreceiver%e5%b9%bf%e6%92%ad%e6%8e%a5%e6%94%b6%e8%80%85/</link>
		<pubDate>Wed, 26 Sep 2012 02:44:07 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=506</guid>
		<description></description>
		<content:encoded><![CDATA[1、广播的发送
在 Android 里面有各种各样的广播，比如电池的使用状态，电话的接收和短信的接收都会产生一个广播。可以调用Context.sendBroadcast()、Context.sendOrderedBroadcast()等方法来实现广播的发送。例如在继承了Service的自定义服务中，这样产生一个广播：
[java]
//生成一个需要广播的Intent
Intent mIntent = new Intent("过滤标识串");
//需要传递的参数设置
mIntent.putExtra("name","xuan");
//广播
sendBroadcast(intent);
[/java]

2、广播的接受
接下来就可以用BroadCastReceiver来接受广播了。在接受之前，肯定先要注册，用来告诉系统我需要接受哪些广播。注册一般有两种，在xml中和在代码中。示例如下：

（1）在xml中
[xml]

[/xml]

....以后有空再更新。。。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>506</wp:post_id>
		<wp:post_date>2012-09-26 10:44:07</wp:post_date>
		<wp:post_date_gmt>2012-09-26 02:44:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>android%e4%b9%8bbroadcastreceiver%e5%b9%bf%e6%92%ad%e6%8e%a5%e6%94%b6%e8%80%85</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[78]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Android布局常用属性</title>
		<link>http://xuanner.com/wp/2012/09/26/android%e5%b8%83%e5%b1%80%e5%b8%b8%e7%94%a8%e5%b1%9e%e6%80%a7/</link>
		<pubDate>Wed, 26 Sep 2012 15:51:25 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=508</guid>
		<description></description>
		<content:encoded><![CDATA[1、RelativeLayout用到的一些重要的属性，其中有些在别的布局或控件中也适用

（1）属性值为true或false 
android:layout_centerHrizontal  内部的控件水平居中 
android:layout_centerVertical   内部的控件垂直居中 
android:layout_centerInparent    自己相对父元素居中
android:layout_alignParentBottom 自己贴紧父元素的下边缘 
android:layout_alignParentLeft   自己贴紧父元素的左边缘 
android:layout_alignParentRight  自己贴紧父元素的右边缘 
android:layout_alignParentTop    自己贴紧父元素的上边缘 
android:layout_alignWithParentIfMissing  如果对应的兄弟元素找不到就以父元素做参照

（2）属性值必须为id的引用名"@id/id-name"
android:layout_below   在某元素的下方 
android:layout_above      在某元素的的上方 
android:layout_toLeftOf   在某元素的左边 
android:layout_toRightOf  在某元素的右边 
android:layout_alignTop   本元素的上边缘和某元素的的上边缘对齐 
android:layout_alignLeft  本元素的左边缘和某元素的的左边缘对齐 
android:layout_alignBottom 本元素的下边缘和某元素的的下边缘对齐 
android:layout_alignRight  本元素的右边缘和某元素的的右边缘对齐

（3）第三类：属性值为具体的像素值，如30dp，40px（一般在xml中用dp单位）
android:layout_marginBottom     离某元素底边缘的距离 
android:layout_marginLeft       离某元素左边缘的距离 
android:layout_marginRight      离某元素右边缘的距离 
android:layout_marginTop        离某元素上边缘的距离
PS：这里还有padding的写法，含义跟html中的div布局一样。

2、还有一些常用的
android:gravity="right"
用来设定控件内部位置的定义，例如要上面如果在是Button中的定义，意思就是使Button中的text靠右。

android:layout_gravity="right"
用来设定控件本在上级布局中的位置，例如上面的意思就只让自己摆在上一层布局的右边。

android:hint
设置EditText为空时输入框内的提示信息。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>508</wp:post_id>
		<wp:post_date>2012-09-26 23:51:25</wp:post_date>
		<wp:post_date_gmt>2012-09-26 15:51:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>android%e5%b8%83%e5%b1%80%e5%b8%b8%e7%94%a8%e5%b1%9e%e6%80%a7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[71]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>始于曲院风荷</title>
		<link>http://xuanner.com/wp/2012/10/05/%e5%a7%8b%e4%ba%8e%e6%9b%b2%e9%99%a2%e9%a3%8e%e8%8d%b7/</link>
		<pubDate>Fri, 05 Oct 2012 11:33:14 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=511</guid>
		<description></description>
		<content:encoded><![CDATA[进入曲院风荷，分叉小径何其多。被层层绿包围着。每一条分岔似乎都很幽静。想一探他的故事，惜犹的是不能走遍每一条。只能凭灵感捕捉到一些。，错过一些。

风景是人的风景。人是风景的人。当然，如果少了熙熙攘攘的人群。大概这里，也不会如此的生机勃勃。偶尔出现一两个美女。就像一幅青山绿水中的画，出现的那一两朵红花。好看却不能久留。 

随便转转悠悠便见到了湖。湖中有荷，荷下有鱼，鱼上有船，船顶飞鸟，在下才浅，不得知是什么样的鸟。

天气真是好。微微凉的风，就像少女的清唇亲在脸上，有人肯定会说你思春，确实在一个秋过半询的下午，荷叶潺潺的舞动下，叫人如何不思春。

路过的美女，在东头。远处的美女在西头。带着我转晕了头。觉得有些惊惶失措。但一想到自古英雄难过美人关，自己也就欣慰了许多。

过了曲院风荷的碑中心，便见参楼林木，这些树不算太高，但绝对笔直。林后，隔着更大的湖，这便是西湖的一角了吧。

沿着湖走，突然有些倦了。武松墓？对没错，就是水浒中上山打老虎的那个。介绍还写的栩栩如生，我一较真，便觉得真可悲，太多景点的创意令人惊讶惊叹直至惊艳。

没走几步便是苏小小墓。妾乘油壁车，郎跨青聪马。何处结同心？西陵松柏下。据说是个很漂亮的名技。这让我想到三十六行，行行出状元呀，非常的励志。尽管每个人见了都会问，苏小小是谁呀，然后一个劲的在她墓前拍照，还在光秃秃的墓圈上使劲的拍。名人注定死了也不能安定。不过她算是可以幸运了，至少没收她墓地钱，在西湖边上的均价可是杠杠的。

再往前，就到了秋瑾墓。合着我进墓地了啊。西湖边上怎能到处是墓。一开始还以为秋谨是偶们绍兴人，不自信的百度了一下，原来祖籍是绍兴的。唉，弱弱的问了下，阿姨你怎么跑杭州来了。说句大实话还是您在绍兴的雕像漂亮。

背后有人在喊，去雷锋塔去雷锋塔，我也真心很想去看看白娘娘，要坐车的雷锋他塔10块钱一位。好吧，我表示舍不得，我还是再走走好了。

进了中山公园，原来里面是山，名字取的真坦白，突然回忆起，原来这里就是很久很久以前，乾隆出游的“行宫八景”。鸟鸣叶茂，还有清清池水的小鱼，天然雕琢的石头梯，层层叠叠幽径。果然不错。不过这种风景大多一次看赞美，二次看平淡，三次看就疲乏了。第二次来了，所以便不想多做久留。

还想继续前行，可是天公作丑，下起了点滴的水珠。

走着走着，走些不对，原来上了白堤，哥们儿知道这是条不归路，要是光靠两只脚走出去，那真的天要亮了，果断撤出。也4点半了，是该找找回家的路了。

傻了傻了，居然忘了，这世上还有一种叫自行车的交通工具，果断刷卡取车，勇走白帝堤。

看到有人在人头挤动的桥头带着音响跳舞，很多人好奇的看着。真羡慕他有这样的闲情和勇气，我也觉得，我的脸皮应该再厚一点再厚一点。

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>511</wp:post_id>
		<wp:post_date>2012-10-05 19:33:14</wp:post_date>
		<wp:post_date_gmt>2012-10-05 11:33:14</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%a7%8b%e4%ba%8e%e6%9b%b2%e9%99%a2%e9%a3%8e%e8%8d%b7</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e5%b0%8f%e5%8f%99%e6%95%a3%e6%96%87"><![CDATA[小叙散文]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[220]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Android之getSystemService方法</title>
		<link>http://xuanner.com/wp/2012/10/18/android%e4%b9%8bgetsystemservice%e6%96%b9%e6%b3%95/</link>
		<pubDate>Thu, 18 Oct 2012 08:41:40 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=515</guid>
		<description></description>
		<content:encoded><![CDATA[getSystemService方法可以获取Android系统之内的一些服务，在程序中供我们操作。

使用例子：
1、显示和隐藏软键盘
[java]
public void showSoftInput(boolean isShow, EditText content) {
        InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);

        if (isShow) {
            imm.showSoftInput(content, InputMethodManager.SHOW_IMPLICIT);
        }
        else {
            imm.hideSoftInputFromWindow(getWindow().getDecorView().getApplicationWindowToken(),
                    InputMethodManager.HIDE_NOT_ALWAYS);
        }
    }
[/java]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>515</wp:post_id>
		<wp:post_date>2012-10-18 16:41:40</wp:post_date>
		<wp:post_date_gmt>2012-10-18 08:41:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>android%e4%b9%8bgetsystemservice%e6%96%b9%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[75]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>安卓之keystore的生成</title>
		<link>http://xuanner.com/wp/2012/10/21/%e5%ae%89%e5%8d%93%e4%b9%8bkeystore%e7%9a%84%e7%94%9f%e6%88%90/</link>
		<pubDate>Sat, 20 Oct 2012 17:27:15 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=518</guid>
		<description></description>
		<content:encoded><![CDATA[1、在把安卓应用打包成apk之前，必须要生成一个keystore。下面讲讲用命令生成keystore

2、进入cmd到jdk的bin目录下，输入下面的命令
keytool -genkey -alias android.keystore -keyalg RSA -validity 20000 -keystore android.keystore

3、按下确定之后，会有提示下面的操作
您的名字与姓氏是什么？
[Unknown]： xuan
您的组织单位名称是什么？
[Unknown]：xuan
您的组织名称是什么？
[Unknown]： xuan
您所在的城市或区域名称是什么？
[Unknown]： xf
您所在的州或省份名称是什么？
[Unknown]： zj
该单位的两字母国家代码是什么
[Unknown]： CN
CN=wonder, OU=wonder, O=wonder, L=xf, ST=hb, C=CN 正确吗？
[否]： Y

这样就OK了

4、命令的解释
-alias android.keystore  别名
-keyalg RSA 加密和数字签名的算法
-validity 20000 有效天数]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>518</wp:post_id>
		<wp:post_date>2012-10-21 01:27:15</wp:post_date>
		<wp:post_date_gmt>2012-10-20 17:27:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%ae%89%e5%8d%93%e4%b9%8bkeystore%e7%9a%84%e7%94%9f%e6%88%90</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[80]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Android MediaPlayer使用方法简单介绍</title>
		<link>http://xuanner.com/wp/2012/11/27/android-mediaplayer%e4%bd%bf%e7%94%a8%e6%96%b9%e6%b3%95%e7%ae%80%e5%8d%95%e4%bb%8b%e7%bb%8d/</link>
		<pubDate>Tue, 27 Nov 2012 03:19:56 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=537</guid>
		<description></description>
		<content:encoded><![CDATA[1、获取MediaPlayer实例
（1）直接用new
MediaPlayer mp = new MediaPlayer();
（2）用create方法
MediaPlayer mp = MediaPlayer.create(this, R.raw.test);//这时就不用调用setDataSource了，也不用调用prepare方法了

2、设置播放文件
（1）用户自带文件
MediaPlayer.create(this, R.raw.test);
（2）存储在SD卡中
mp.setDataSource("/sdcard/test.mp3");
（3）从网络中获取
mp.setDataSource("http://www.citynorth.cn/music/confucius.mp3");

3、播放器控制
（1）准备状态，同步和异步
prepare()和prepareAsync()
（2）暂停和停止
pause()和stop()
（3）定位和释放和重置
seekTo()和release()和reset()

4、监听事件
（1）定位完成时触发
MediaPlayer.OnCompletionListener
（2）发送错误时触发
MediaPlayer.OnErrorListener

5、PS一下
MediaPlayer的setDataSource一共四个方法
setDataSource (String path)
setDataSource (FileDescriptor fd)
setDataSource (Context context, Uri uri)
setDataSource (FileDescriptor fd, long offset, long length)

其中使用FileDescriptor时，需要将文件放到与res文件夹平级的assets文件夹里，然后使用：
AssetFileDescriptor fileDescriptor = getAssets().openFd("rain.mp3");
m_mediaPlayer.setDataSource(fileDescriptor.getFileDescriptor(),fileDescriptor.getStartOffset(), fileDescriptor.getLength());
来设置datasource]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>537</wp:post_id>
		<wp:post_date>2012-11-27 11:19:56</wp:post_date>
		<wp:post_date_gmt>2012-11-27 03:19:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>android-mediaplayer%e4%bd%bf%e7%94%a8%e6%96%b9%e6%b3%95%e7%ae%80%e5%8d%95%e4%bb%8b%e7%bb%8d</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>enclosure</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.citynorth.cn/music/confucius.mp3
39
audio/mpeg
]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>enclosure</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.citynorth.cn/music/confucius.mp3
39
audio/mpeg
]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[45]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>安卓之AsyncTask的介绍</title>
		<link>http://xuanner.com/wp/2012/12/12/%e5%ae%89%e5%8d%93%e4%b9%8basynctask%e7%9a%84%e4%bb%8b%e7%bb%8d/</link>
		<pubDate>Wed, 12 Dec 2012 11:10:55 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=542</guid>
		<description></description>
		<content:encoded><![CDATA[1、出生作用：

一般安卓中比较耗时的操作会放在线程中执行，但是在线程中又不能操作更新UI，所以一般在线程中要操作UI时，会用Handler类提交一个任务给UI线程。这样实现起来，代码比较蹩脚，所以AsyncTask的出现就为了解决这个问题的。即google帮你封装了线程和UI之间相互关系。

2、AsyncTask的几个方法用处：

onPreExecute(),该方法在实际操作耗时操作前，会被UI线程调用。初始化提示UI可以在这执行。
doInBackground(Params...)，耗时的操作就写在这里。Params...是在继承实现AsyncTask定义的泛型，其中可以调用publishProgress更新进度
onProgressUpdate(Progress...)，UI在你调用publishProgress时调用该方法
onPostExecute(),任务做完后UI线程调用
onCancelled(),在用户取消线程操作的时候调用。在主线程中调用onCancelled()的时候调用。

3、补充：

AsyncTask定义了三种泛型类型 Params，Progress和Result
Params 输入参数
Progress 中间过程变量百分条
Result 返回的结果

4、和Thread加Handler方案对比：

AsyncTask在单个线任务执行比较方便，代码简洁，但在多个任务调用时比较麻烦，这时Thread加Handler方案就比较灵活了

5、使用例子，自己百度]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>542</wp:post_id>
		<wp:post_date>2012-12-12 19:10:55</wp:post_date>
		<wp:post_date_gmt>2012-12-12 11:10:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%ae%89%e5%8d%93%e4%b9%8basynctask%e7%9a%84%e4%bb%8b%e7%bb%8d</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[67]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>IOS网络开发 - 网络环境的确认</title>
		<link>http://xuanner.com/wp/2013/01/09/ios%e5%bc%80%e5%8f%91%e4%b9%8b%e7%bd%91%e7%bb%9c%e7%8e%af%e5%a2%83%e7%a1%ae%e8%ae%a4/</link>
		<pubDate>Wed, 09 Jan 2013 05:04:01 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=548</guid>
		<description></description>
		<content:encoded><![CDATA[1、检查网络是否可达，可以使用Reachability来实现。只需要拷贝Reachability.h 和Reachability.m到你的工程下。

2、将SystemConfiguration.framework 添加进工程。

3、Reachability中定义了三种网络状态，如下结构体：

[c]
typedef enum {
    NotReachable = 0,              //无连接
    ReachableViaWiFi,            //使用3G/GPRS网络
    ReachableViaWWAN        //使用WiFi网络
} NetworkStatus;
[/c]

4、因此可以这样使用，判断：

[c]
Reachability *r = [Reachability reachabilityWithHostName:@“www.apple.com”];
switch ([r currentReachabilityStatus]) {
    case NotReachable:
        // 没有网络连接
        break;
    case ReachableViaWWAN:
        // 使用3G网络
        break;
    case ReachableViaWiFi:
        // 使用WiFi网络
        break;
}
[/c]

还可以检查当前的网络环境，如下：

[c]
// 是否wifi
+ (BOOL) IsEnableWIFI {
    return ([[Reachability reachabilityForLocalWiFi] currentReachabilityStatus] != NotReachable);
}
[/c]

[c]
// 是否3G
+ (BOOL) IsEnable3G {
    return ([[Reachability reachabilityForInternetConnection] currentReachabilityStatus] != NotReachable);
}
[/c]

4. 链接状态的实时通知

改点有待补充。。。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>548</wp:post_id>
		<wp:post_date>2013-01-09 13:04:01</wp:post_date>
		<wp:post_date_gmt>2013-01-09 05:04:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ios%e5%bc%80%e5%8f%91%e4%b9%8b%e7%bd%91%e7%bb%9c%e7%8e%af%e5%a2%83%e7%a1%ae%e8%ae%a4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ios%e5%bc%80%e5%8f%91"><![CDATA[IOS开发]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[53]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>IOS网络开发 - NSURLConnection获取数据</title>
		<link>http://xuanner.com/wp/2013/01/10/ios%e4%b9%8bnsurlconnection%e8%8e%b7%e5%8f%96%e6%95%b0%e6%8d%ae/</link>
		<pubDate>Thu, 10 Jan 2013 05:46:30 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=553</guid>
		<description></description>
		<content:encoded><![CDATA[IOS网络开发，使用自身NSURLConnection获取网络数据。这个是SDK自带的，需要引入CFNetwork包。步骤如下：

1、利用NSURL构造一个地址:
[c]
NSString *urlString = @"www.renren.com";
NSURL *url = [NSURL URLWithString:urlString];
[/c]

2、利用NSURLRequest实例化一个request对象：
[c]
NSURLRequest *requrst = [NSURLRequest requestWithURL:url 
                   cachePolicy:NSURLRequestUseProtocolCachePolicy
                   timeoutInterval:30.0];
[/c]

3、利用NSURLConnection创建连接，其中下面的self是实现了NSUrlConnectionDelegate协议的代理类，我们可以实现这个协议里的一些方法，来处理接受到的数据和连接操作等一些在交互过程中的数据。
[c]
self.connection = [[NSURLConnection alloc] initWithRequest:requrst delegate:self]; 
if ( self.connection) { 
    NSLog(@"链接成功"); 
}else { 
    NSLog(@"链接失败"); 
} 
[/c]

4、下面是关于NSUrlConnectionDelegate协议中的一些方法。
[c]
- (void)connection:(NSURLConnection *)connection 
                   didReceiveResponse:(NSURLResponse *)response {

    //接受一个服务端回话，在这里一般初始化接受数据的对象 

    NSLog(@"返回数据类型：%@",[response textEncodingName]);  
    NSMutableData *d = [[NSMutableData alloc] init]; 
    self.data = d; 
    [d release]; 
}
[/c]

[c]
- (void)connection:(NSURLConnection *)connection didReceiveData:(NSData *)data { 
    //接受返回的数据，这个方法可能会被调用多次，因此将多次返回数据加起来
     
    NSUInteger datalength = [data length]; 
    NSLog(@"返回数据量：%d",datalength); 
    [self.data appendData:data]; 
} 
[/c]

[c]
- (void)connectionDidFinishLoading:(NSURLConnection *)connection { 
    //连接结束的时候会调用
     
    NSLog(@"%d:",[self.data length]); 
    NSStringEncoding enc 
      = CFStringConvertEncodingToNSStringEncoding(kCFStringEncodingGB_18030_2000); 

    NSString *mystr = [[NSString alloc] initWithData:_data encoding:enc]; 

    NSLog(@"最后的结果：%@",mystr); 

    [mystr release]; 
    [self.connection release]; 
} 
[/c]

[c]
- (void)connection:(NSURLConnection *)connection didFailWithError:(NSError *)error { 
    //链接错误的时候会调用
} 
[/c]

ps一下：
NSStringEncoding是用来在data到NSString过程中编码用的。上面只是部分的代码。注意，写IOS，内存自己管理，切记不能忘。alloc一个就要release一个哦。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>553</wp:post_id>
		<wp:post_date>2013-01-10 13:46:30</wp:post_date>
		<wp:post_date_gmt>2013-01-10 05:46:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ios%e4%b9%8bnsurlconnection%e8%8e%b7%e5%8f%96%e6%95%b0%e6%8d%ae</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ios%e5%bc%80%e5%8f%91"><![CDATA[IOS开发]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[51]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>IOS网络开发 - 第三方ASIHTTPRequest类库</title>
		<link>http://xuanner.com/wp/2013/01/10/ios%e7%bd%91%e7%bb%9c%e5%bc%80%e5%8f%91-%e7%ac%ac%e4%b8%89%e6%96%b9asihttprequest%e7%b1%bb%e5%ba%93/</link>
		<pubDate>Thu, 10 Jan 2013 06:54:43 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=559</guid>
		<description></description>
		<content:encoded><![CDATA[ASIHTTPRequest类库是对CFNetwork API进行的封装，当然肯定比直接用CFNetwork要方便多了。

1、安装
（1）直接把要安装的ASIHTTPRequest类库文件夹，拖动到项目中。
（2）链接相关SDK类库，需要添加类库：CFNetwork.framework、SystemConfiguration.framework、MobileCoreServices.framework、CoreGraphics.framework、libz.1.2.3.dylib这几个。这样就安装完了，说明的比较简单，如果不明白，可以网上找资料。

2、具体说说使用，有两种使用方法，一种是同步请求，一种是异步请求
同步使用例子：
[c]
NSURL *url = [NSURL URLWithString:@"http://blog.xuanner.com"];
ASIHTTPRequest *request = [ASIHTTPRequest requestWithURL:url];

[request startSynchronous];

NSError *error = [request error];

if (!error) {
    NSString *response = [request responseString];
}
[/c]

异步使用例子，需要定义一个代理，当请求结束时，会通知代理：
[c]
NSURL *url = [NSURL URLWithString:@"http://blog.xuanner.com"];
ASIHTTPRequest *request = [ASIHTTPRequest requestWithURL:url];

[request setDelegate:self];
[request startAsynchronous];
[/c]

下面是两个异步请求的代理方法：
[c]
- (void)requestFinished:(ASIHTTPRequest *)request { 
    //请求成功后会调用该方法的

    //获取字符串数据
    NSString *responseString = [request responseString];  
      
    //获取二进制数据
    NSData *responseData = [request responseData];  
}  
[/c]

[c]
- (void)requestFailed:(ASIHTTPRequest *)request {
    //请求失败会调用该方法

    NSError *error = [request error];
}
[/c]

PS一下：
好像要post提交参数可以这样，具体有待查证：
[c]
[request addPostValue:@"Ben" forKey:@"names"];
[/c]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>559</wp:post_id>
		<wp:post_date>2013-01-10 14:54:43</wp:post_date>
		<wp:post_date_gmt>2013-01-10 06:54:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ios%e7%bd%91%e7%bb%9c%e5%bc%80%e5%8f%91-%e7%ac%ac%e4%b8%89%e6%96%b9asihttprequest%e7%b1%bb%e5%ba%93</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ios%e5%bc%80%e5%8f%91"><![CDATA[IOS开发]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[46]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>IOS解析Json - 第三方库JsonKit</title>
		<link>http://xuanner.com/wp/2013/01/10/ios%e8%a7%a3%e6%9e%90json-%e7%ac%ac%e4%b8%89%e6%96%b9%e5%ba%93jsonkit/</link>
		<pubDate>Thu, 10 Jan 2013 07:31:06 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=568</guid>
		<description></description>
		<content:encoded><![CDATA[1、IOS 5之下的SDK居然没有API支持Json的解析。IOS 5之后添加了NSJSONSerialization对Json的支持，速度相对不错，不过不兼容低版本啊。所以最好可以用第三方类库。JsonKit在第三方类库中算是比较快的，而且使用也比较简单。安装很简单，把JsonKit库包引入项目即可。

2、构造Json串
[c]
NSString *res = nil; 
      
//字符串 - 这里输出的res内容是："this is a nsstring" 
NSString *str = @"this is a nsstring";  
res = [str JSONString];  
NSLog(@"res= %@", [NSString stringWithString: res]);
      
//数组 - 这里输出的res内容是：["One","Two","Three"]
NSArray *arr = [[NSArray alloc] initWithObjects:@"One",@"Two",@"Three",nil];
res = [arr JSONString];
NSLog(@"res= %@", [NSString stringWithString: res]);  
[arr release];
 
//字典类型（对象）- 这里输出的res内容是：{"pets":["dog","cat"],"other":[true,30]}
NSArray *arr1 = [NSArray arrayWithObjects:@"dog",@"cat",nil];  
NSArray *arr2 = [NSArray arrayWithObjects:[NSNumber numberWithBool:YES],
                                          [NSNumber numberWithInt:30],nil];  

NSDictionary *dic = [NSDictionary dictionaryWithObjectsAndKeys:arr1,@"pets",
                                                          arr2,@"other",nil]; 

res = [dic JSONString];  
NSLog(@"res= %@", [NSString stringWithString: res]);
[/c]

3、反解析Json串
[c]
JSONDecoder *jd=[[JSONDecoder alloc] init];  

//针对NSData数据  
NSData *data = [dic JSONData];  
NSDictionary *ret = [jd objectWithData:data];

NSLog(@"res= %@", [ret objectForKey:@"pets"]); //res= (dog,cat)

NSLog(@"res= %@", [[ret objectForKey:@"other"] objectAtIndex:0]); //res= 1

//针对NSString字符串数据  
NSString *nstr = [dic JSONString];
NSDictionary *ret2 = [jd 
                objectWithUTF8String:(const unsigned char *)[nstr UTF8String] 
                length:(unsigned int)[nstr length]]; 

NSLog(@"res= %d", [[ret2 objectForKey:@"pets"] indexOfObject:@"cat"]); //res= 1 
  
NSLog(@"res= %@", [[ret2 objectForKey:@"other"] objectAtIndex:1]); //res= 30  

[jd release];
[/c]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>568</wp:post_id>
		<wp:post_date>2013-01-10 15:31:06</wp:post_date>
		<wp:post_date_gmt>2013-01-10 07:31:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ios%e8%a7%a3%e6%9e%90json-%e7%ac%ac%e4%b8%89%e6%96%b9%e5%ba%93jsonkit</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ios%e5%bc%80%e5%8f%91"><![CDATA[IOS开发]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[49]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Android之包名启动</title>
		<link>http://xuanner.com/wp/2013/01/21/android%e4%b9%8b%e5%8c%85%e5%90%8d%e5%90%af%e5%8a%a8/</link>
		<pubDate>Mon, 21 Jan 2013 05:47:11 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=575</guid>
		<description></description>
		<content:encoded><![CDATA[说明：在安卓客户端中，可以嵌入第三方app，并只要知道他们app的启动包名就可以调用。在这里就总结两种启动方式

1、根据启动包名和入口Activity的名字启动，这种方式必须要知道嵌入app的启动包名和入口Activity，其中action和category就是写在intent-filter里的东东了。用来过滤你要启动那个activity哦

[java]
Intent intent = new Intent();
intent.setAction(Intent.ACTION_MAIN);
intent.addCategory(Intent.CATEGORY_LAUNCHER);//过滤，非必要，根据需求添加
intent.setComponent(
       new ComponentName("net.zdsoft.szxy.android", "net.zdsoft.szxy.android.Main"));
[/java]

2、还有一种，就是只要知道启动包名就可以了。其中intent可以带上一些参数，上面的也可以。

[java]
Intent intent = getPackageManager()
         .getLaunchIntentForPackage("net.zdsoft.szxy.android");
intent.putExtra("token", "123456");
startActivity(intent);
[/java]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>575</wp:post_id>
		<wp:post_date>2013-01-21 13:47:11</wp:post_date>
		<wp:post_date_gmt>2013-01-21 05:47:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>android%e4%b9%8b%e5%8c%85%e5%90%8d%e5%90%af%e5%8a%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[53]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>IOS笔记20130121</title>
		<link>http://xuanner.com/wp/2013/01/21/ios%e7%ac%94%e8%ae%b020130121/</link>
		<pubDate>Mon, 21 Jan 2013 15:19:59 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=584</guid>
		<description></description>
		<content:encoded><![CDATA[1. 弹出框UIAlertView的简单用法

[c]
UIAlertView *alert=[[UIAlertView alloc] 
                           initWithTitle:@"提示" 
                           message:@"提示消息" 
                           delegate:self 
                           cancelButtonTitle:@"关闭" 
                           otherButtonTitles:nil];
[alert show];
[alert release];
[/c]



2. 界面切换
简单的界面切换有两种，一种是比较简单粗暴，另一中加了委托模式，相对设计比较优雅。不过这两种方式都用了同一个理念，就是先找到程序的window对象，然后把他的rootViewController属性换成要显示的界面就可以了。

（1）比较直接的一种是
[c]
//先实例化要显示的界面
FrameController *frameController = [[[FrameController alloc] 
             initWithNibName:@"FrameController" 
             bundle:nil] autorelease];

//利用当前的界面找到window对象，替换rootViewController属性成上面要显示的界面
self.view.window.rootViewController = frameController;
[/c]

（2）用了委托设计模式，其实大致的原理也是一样的，只不过先创建一个协议

第一步：先创建一个跳转协议
[c]
@protocol SwitchViewDelegate <NSObject>

//跳转去主登陆框架
- (void)gotoFrame;
@end
[/c]

第二步：让AppDelegate实现该协议，注意在接口部分要引入要实现的协议
接口部分：
[c]
@interface AppDelegate : UIResponder <UIApplicationDelegate, SwitchViewDelegate>
@property (strong, nonatomic) UIWindow *window;
@property (strong, nonatomic) LoginController *loginController;
@end
[/c]

实现部分：
[c]
//实现界面跳转代理方法
- (void) gotoFrame{
    FrameController *frameController = [[[FrameController alloc]
        initWithNibName:@"FrameController" 
        bundle:nil] autorelease];
    self.window.rootViewController = frameController;
}
[/c]
还要注意在didFinishLaunchingWithOptions方法中注入这个委托，例如这样
[c]
//设置代理
self.loginController.delegate = self;
[/c]

第三步：在需要跳转的界面中进行跳转操作，例如这里以loginController为例子，在该类中记得添加委托属性
接口部分：
[c]
@interface LoginController : UIViewController{
    id<SwitchViewDelegate> delegate;//界面切换委托
}
@property(nonatomic,retain) id<SwitchViewDelegate> delegate;

- (IBAction)login:(id)sender;

@end
[/c]

实现部分：
[c]
@synthesize delegate;//委托

......

//因为跳转部分有委托实现了，所以在这里就相当的简单了
- (IBAction)login:(id)sender{
    [delegate gotoFrame];
}
[/c]

3. PS一下
上面的代码不全，所以还要注意类和协议的引入。内存释放的管理等哦。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>584</wp:post_id>
		<wp:post_date>2013-01-21 23:19:59</wp:post_date>
		<wp:post_date_gmt>2013-01-21 15:19:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ios%e7%ac%94%e8%ae%b020130121</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ios%e5%bc%80%e5%8f%91"><![CDATA[IOS开发]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[72]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Android之使用LocationManager简单定位</title>
		<link>http://xuanner.com/wp/2013/01/24/android%e4%b9%8b%e4%bd%bf%e7%94%a8locationmanager%e7%ae%80%e5%8d%95%e5%ae%9a%e4%bd%8d/</link>
		<pubDate>Thu, 24 Jan 2013 03:28:34 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=595</guid>
		<description></description>
		<content:encoded><![CDATA[1、用原生的API定位客户端的经纬度很方便，请看下面一步一步来。
（1）先获取LocationManager的实例，一般这样就可以。
[java]
LocationManager locationManager 
      = (LocationManager)getSystemService(LOCATION_SERVICE);
[/java]

（2）注册更新周期设置，一般如果只是简单的获取一下位置，这个可以不做设置，这个设置主要是监听实时位置的变化。
[java]
locationManager.requestLocationUpdates(LocationManager.GPS_PROVIDER, 1000, 0,
    new LocationListener() {
        @Override
        public void onStatusChanged(String provider, int status, Bundle extras) {
           // Provider的转态在可用、暂时不可用和无服务三个状态直接切换时触发此函数
        }

        @Override
        public void onProviderEnabled(String provider) {
            // Provider被enable时触发此函数，比如GPS被打开
        }

        @Override
        public void onProviderDisabled(String provider) {
            // Provider被disable时触发此函数，比如GPS被关闭
        }

        @Override
        public void onLocationChanged(Location location) {
            // 位置发生变化会调用，如果不发生变化就不会调用
        }
    });

[/java]

（3）获取最近一次地理坐标，不知道为什么，用LocationManager.GPS_PROVIDER死也获取不到，所以就用LocationManager.NETWORK_PROVIDER就可以了。
[java]
Location location = null;
location = locationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER);
[/java]

（4）最后，都懂的啦，就是设置权限
[java]
<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
[/java]

（5）现在就可以用LocationManager实例获取经纬度以及海拔了。这里海拔获取有点问题总是0.0，可能那里要设置一下的吧，要用到的时候再百度一下好了。
[java]
double latitude = location.getLatitude(); // 经度
double longitude = location.getLongitude(); // 纬度
double altitude = location.getAltitude(); // 海拔
[/java]

2、当然后，还可以自己设置规则来自定义。用Criteria这个。简单的例子如下：
[java]
 Criteria criteria = new Criteria();
// 高精度，设置成ACCURACY_FINE这个好像获取不到，所以用这个喽
 criteria.setAccuracy(Criteria.ACCURACY_COARSE);
 criteria.setAltitudeRequired(false);// 不要求海拔
 criteria.setBearingRequired(false);// 不要求方位
 criteria.setCostAllowed(true);// 允许有花费
 criteria.setPowerRequirement(Criteria.POWER_LOW);// 低功耗
        
 // 从可用的位置提供器中，匹配以上标准的最佳提供器
 String provider = locationManager.getBestProvider(criteria, true);

location = locationManager.getLastKnownLocation(provider);
[/java]
 ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>595</wp:post_id>
		<wp:post_date>2013-01-24 11:28:34</wp:post_date>
		<wp:post_date_gmt>2013-01-24 03:28:34</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>android%e4%b9%8b%e4%bd%bf%e7%94%a8locationmanager%e7%ae%80%e5%8d%95%e5%ae%9a%e4%bd%8d</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[43]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>WorldPress之让首页文章只显示摘要</title>
		<link>http://xuanner.com/wp/2013/01/24/worldpress%e4%b9%8b%e8%ae%a9%e9%a6%96%e9%a1%b5%e6%96%87%e7%ab%a0%e5%8f%aa%e6%98%be%e7%a4%ba%e6%91%98%e8%a6%81/</link>
		<pubDate>Thu, 24 Jan 2013 05:15:32 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=604</guid>
		<description></description>
		<content:encoded><![CDATA[说明：默认的worldpress的在显示文章列表的时候会显示文章的所有内容，这个让文章内容很长的时候情何以堪，所以在显示文章列表的时候，我们是希望只显示一部分摘要，然后点看文章的详细时才显示。下面就是用代码的方式来修改实现。

1、定位到你的主题的目录下，找到index.php或home.php之类的入口页面，例如我的是：
/xuan698400/web/wp-content/themes/mflat/index.php

2、修改里面的代码，先找到the_content()方法，可能不同的主题会有不同的参数，例如有的是：
[java]
<div class="entry">
    <?php the_content('Read the rest of this entry &raquo;'); ?>
</div>
[/java]

修改成类似的：
[java]
<div class="entry">
    <?php if(is_category() || is_archive() || is_home() ) {
        the_excerpt();
     }else{
         the_content('Read the rest of this entry &raquo;');
     } ?>
</div>
[/java]

PS一下：
如果你不想修改代码，那只能弄个插件了，什么插件，自己百度呗。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>604</wp:post_id>
		<wp:post_date>2013-01-24 13:15:32</wp:post_date>
		<wp:post_date_gmt>2013-01-24 05:15:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>worldpress%e4%b9%8b%e8%ae%a9%e9%a6%96%e9%a1%b5%e6%96%87%e7%ab%a0%e5%8f%aa%e6%98%be%e7%a4%ba%e6%91%98%e8%a6%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="worldpress"><![CDATA[WorldPress]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[52]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Android之用XML配置菜单</title>
		<link>http://xuanner.com/wp/2013/01/24/android%e4%b9%8b%e7%94%a8xml%e9%85%8d%e7%bd%ae%e8%8f%9c%e5%8d%95/</link>
		<pubDate>Thu, 24 Jan 2013 07:10:31 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=606</guid>
		<description></description>
		<content:encoded><![CDATA[说明：刚开始用硬编码的方式创建菜单，也OK的，不过google给我们提供了一个更简便的方式在创建菜单。步骤如下：

1、编写xml，在res目录下创建一个menu的目录，然后创建一个xml文件，内容如下：
[java]
<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:android="http://schemas.android.com/apk/res/android">
  <group android:id="@+id/group1">
      <item 
          android:id="@+id/guanYu"
          android:title="关于"/>
      <item 
          android:id="@+id/tuiChu"
          android:title="退出"/>
  </group>
</menu>
[/java]

2、在需要创建菜单的Activity中加载进这个xml菜单，覆写onCreateOptionsMenu方法。
[java]
@Override
public boolean onCreateOptionsMenu(Menu menu) {
    getMenuInflater().inflate(R.menu.menu_login, menu);
    return true;
}
[/java]

3、如果要给菜单的选项配上事件处理，就可以覆盖onOptionsItemSelected这个方法。如果用硬编码来创建菜单也是覆盖这两个方法啦。
[java]
@Override
public boolean onOptionsItemSelected(MenuItem item) {
    switch (item.getItemId()) {
    case R.id.guanYu:
        //这里实现点击（关于）的选项的事件处理
        break;
    case R.id.tuiChu:
        //这里实现点击（退出）的选项的事件处理
        break;
    }
    return true;
}
[/java]

4、顺便记录一下代码添加时Menu的add方法参数含义，例如：
[java]
menu.add(Menu.NONE, 1, 0, "帮助");
[/java]
第一个参数：表示组
第二个参数：表示选项的唯一标识
第三个参数：表示显示的排列顺序
第四个参数：表示显示的标题]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>606</wp:post_id>
		<wp:post_date>2013-01-24 15:10:31</wp:post_date>
		<wp:post_date_gmt>2013-01-24 07:10:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>android%e4%b9%8b%e7%94%a8xml%e9%85%8d%e7%bd%ae%e8%8f%9c%e5%8d%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[137]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Android之自定义Application</title>
		<link>http://xuanner.com/wp/2013/01/24/android%e4%b9%8b%e8%87%aa%e5%ae%9a%e4%b9%89application/</link>
		<pubDate>Thu, 24 Jan 2013 07:52:51 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=608</guid>
		<description></description>
		<content:encoded><![CDATA[说明：一般情况下，我们可以不去自定义自己的Application，但是用自定义Application可以维护整个程序的全局变量。如果自定义了Application，那么真正的程序入口可不是那个Main的Activity了，而是这个Application的onCreate方法。步骤如下：

1、先创建一个自定义叫DemoApplication的类，继承原生的Application类就可以。一下的4个方法是Application中有的，可以按自己的要求覆盖。
[java]
public class DemoApplication extends Application {
    @Override
    public void onCreate() {
        super.onCreate();
        //程序的真正入口处
    }

    @Override
    public void onConfigurationChanged(Configuration newConfig) {
        super.onConfigurationChanged(newConfig);
    }

    @Override
    public void onTerminate() {
        super.onTerminate();
    }

    @Override
    public void onLowMemory() {
        super.onLowMemory();
    }
}
[/java]

2、在AndroidManifest.xml中配置使用即可。下面的代码特别注意android:name=".application.DemoApplication"这句就行了。如果不使用自定义Application，那这个属性可以不写，写了就表示指明了，我们要使用DemoApplication这个。
[java]
<application
    android:icon="@drawable/app_icon"
    android:label="@string/app_name"
    android:name=".application.DemoApplication"
    android:theme="@android:style/Theme.NoTitleBar" >
    <activity
        android:name=".LoginActivity">
        <intent-filter>
            <action android:name="android.intent.action.MAIN" />
            <category android:name="android.intent.category.LAUNCHER" />
        </intent-filter>
    </activity>
</application>
[/java]

3、在Activity中，我们就可以用下面的语法获取到这个全局的application对象了。很简单的吧。
[java]
MyApplication application = (MyApplication)getApplication();  
[/java]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>608</wp:post_id>
		<wp:post_date>2013-01-24 15:52:51</wp:post_date>
		<wp:post_date_gmt>2013-01-24 07:52:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>android%e4%b9%8b%e8%87%aa%e5%ae%9a%e4%b9%89application</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[85]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Linux打war包命令</title>
		<link>http://xuanner.com/wp/2013/02/07/linux%e6%89%93war%e5%8c%85%e5%91%bd%e4%bb%a4/</link>
		<pubDate>Thu, 07 Feb 2013 05:13:45 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=617</guid>
		<description></description>
		<content:encoded><![CDATA[jar cvf ../ROOT.war *]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>617</wp:post_id>
		<wp:post_date>2013-02-07 13:13:45</wp:post_date>
		<wp:post_date_gmt>2013-02-07 05:13:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>linux%e6%89%93war%e5%8c%85%e5%91%bd%e4%bb%a4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e6%9d%82%e8%b0%88"><![CDATA[技术杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[145]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>mac下jdk的一些事</title>
		<link>http://xuanner.com/wp/2013/02/07/mac%e4%b8%8bjdk%e7%9a%84%e4%b8%80%e4%ba%9b%e4%ba%8b/</link>
		<pubDate>Thu, 07 Feb 2013 09:35:55 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=620</guid>
		<description></description>
		<content:encoded><![CDATA[1、首先说明Mac系统中是自带JDK的。安装路径一般是：/System/Libray/Frameworks /JavaVM.Framwork/
 在这个目录下有个Versions目录，里面有不同版本的jdk

2、查看当前用的jdk的版本
用命令切换到：cd usr/bin
再输入命令：ls -l java
这样就会显示类似下面的信息，你就在这里可以看到jdk的路径和使用的版本
localhost:bin root# ls -l java 
lrwxr-xr-x  1 root  wheel  74 May 18 10:26 java -> /System/Library/Frameworks/JavaVM.framework/Versions/Current/Commands/java 
上面看到的current版本。其实，mac中current只是一个快捷方式而已，是为了方便设置默认java的。

3、上面指向到哪里，当前使用的jdk就是哪个，但是我们可以不改变这个指向，改变一下当前java就可以。在哪里设置呢，在java偏好中设置，多说无益。

4、在mac中设置环境变量，是在etc的profile中设置就可以了。
在这个文件中添加如下就可以，当然需要重启生效
JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/1.6.0/Home 
export JAVA_HOME]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>620</wp:post_id>
		<wp:post_date>2013-02-07 17:35:55</wp:post_date>
		<wp:post_date_gmt>2013-02-07 09:35:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mac%e4%b8%8bjdk%e7%9a%84%e4%b8%80%e4%ba%9b%e4%ba%8b</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ios%e5%bc%80%e5%8f%91"><![CDATA[IOS开发]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[122]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>2013-02-22 2:49  发布疑难杂症</title>
		<link>http://xuanner.com/wp/2013/02/22/2013-02-22-249-%e5%8f%91%e5%b8%83%e7%96%91%e9%9a%be%e6%9d%82%e7%97%87/</link>
		<pubDate>Thu, 21 Feb 2013 18:51:37 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=623</guid>
		<description></description>
		<content:encoded><![CDATA[环境：jdk1.6.0_32


报错：Caused by: java.lang.NoSuchMethodError: net.zdsoft.etoh2.bean.AddressListBean.getParentsALByClassId(Ljava/lang/String;)Ljava/util/List;
        at net.zdsoft.etoh2.action.android.AddressListAction.listParent(AddressListAction.java:421) ~[AddressListAction.class:na]
        ... 28 common frames omitted
		
		
表面原因：getParentsALByClassId(String... x);  调用getParentsALByClassId(a);
解决：getParentsALByClassId(String[] x);    调用getParentsALByClassId(new String[]{a});


缘由：不详求解，可能是jdk的一个bug又或者我打包出问题了，但我确实clean了要几遍，打了好几次包的。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>623</wp:post_id>
		<wp:post_date>2013-02-22 02:51:37</wp:post_date>
		<wp:post_date_gmt>2013-02-21 18:51:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>2013-02-22-249-%e5%8f%91%e5%b8%83%e7%96%91%e9%9a%be%e6%9d%82%e7%97%87</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e5%8f%91%e5%b8%83bug%e7%96%91%e9%9a%be%e6%9d%82%e7%97%87"><![CDATA[发布BUG疑难杂症]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[131]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>IOS下创建phonegap2.0项目流程，不用启动xcode哦，亲</title>
		<link>http://xuanner.com/wp/2013/03/03/ios%e4%b8%8b%e5%88%9b%e5%bb%baphonegap2-0%e9%a1%b9%e7%9b%ae%e6%b5%81%e7%a8%8b%ef%bc%8c%e4%b8%8d%e7%94%a8%e5%90%af%e5%8a%a8xcode%e5%93%a6%ef%bc%8c%e4%ba%b2/</link>
		<pubDate>Sun, 03 Mar 2013 15:59:55 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=626</guid>
		<description></description>
		<content:encoded><![CDATA[1、首先去phonegap官网下载包，解压，进入到ios目录下的bin目录下。

2、执行命令创建一个能在ios跑的项目，命令格式：./create <项目目录> <项目ID> <项目名称>
例如我的就是：./create /Users/xuan/Documents/demo phonegap_demo

3、项目就创建好了。现在要运行看看。你切到demo目录下的cordova目录下。里面有一些命令。你可以，
./build项目。然后，./emulate跑一下项目。此时他会提示要你设置，ios-sim的path。那就设置一下呗。

4、根据他提示的地址:https://github.com/phonegap/ios-sim下载 ios-sim并安装之。命令上面他都有，我就啰嗦一下。
先下载命令：curl -L https://github.com/phonegap/ios-sim/zipball/1.6 -o ios-sim-1.6.zip
再解压命令： unzip ios-sim-1.6.zip
切到解压后的目录下：rake install prefix=/Users/xuan/Documents/
然后你就会再Documents中看到一个bin文件夹。里面就有一个ios-sim命令。切到这里目录下就可以试着使用一个下。跑一下phonegap再iphone的运行了项目。

5、现在我们来设置PATH。
命令：export PATH＝Users/xuan/Documents/bin
这个重是暂时性的关机就没有了。所以要设置到全局去。再etc/profile文件中修改添加这个命令就可以了。

注意：这个写很危险。你这样写就是把原来的环境变量都替换掉了，会导致基本的命令如ls，vi都失效哦，对的做法是后面添加。例如：
export PATH=/usr/bin:/usr/sbin:/bin:/sbin:/usr/X11R6/bin:/Users/xuan/Documents/bin

6、最后附上一些可能用到的linux命令。
查看文件权限：ls -f profile
修改授权：sudo chmod 777 profile(这样每个人都有权限读和写以及执行了，小心谨慎，这个文件还是很重要的)
设置环境变量： export＝Users/xuan/Documents/bin

7、绝对一手资料，本人亲测哦，亲。。。

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>626</wp:post_id>
		<wp:post_date>2013-03-03 23:59:55</wp:post_date>
		<wp:post_date_gmt>2013-03-03 15:59:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ios%e4%b8%8b%e5%88%9b%e5%bb%baphonegap2-0%e9%a1%b9%e7%9b%ae%e6%b5%81%e7%a8%8b%ef%bc%8c%e4%b8%8d%e7%94%a8%e5%90%af%e5%8a%a8xcode%e5%93%a6%ef%bc%8c%e4%ba%b2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ios%e5%bc%80%e5%8f%91"><![CDATA[IOS开发]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[208]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>IOS开发笔记－phonegap研究</title>
		<link>http://xuanner.com/wp/2013/03/05/ios%e5%bc%80%e5%8f%91%e7%ac%94%e8%ae%b0/</link>
		<pubDate>Tue, 05 Mar 2013 12:43:09 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=628</guid>
		<description></description>
		<content:encoded><![CDATA[1、UIScreen
可以获取设备屏幕的大小。
[c]
// 整个屏幕的大小 {{0, 0}, {320, 480}}  
CGRect bounds = [UIScreen mainScreen].bounds;  
NSLog(@"UIScreen bounds: %@", NSStringFromCGRect(bounds));  

// 应用程序窗口大小 {{0, 20}, {320, 460}}  
CGRect applicationFrame = [UIScreen mainScreen].applicationFrame;  
NSLog(@"UIScreen applicationFrame: %@", NSStringFromCGRect(applicationFrame));  
[/c]

2、UIWindow
iOS程序的一个窗口对象，视图就可以加在窗口上，一般一个应用只有一个窗口对象。

3、self.window.autoresizesSubviews = YES;
如果视图的autoresizesSubviews属性声明被设置为YES，则其子视图会根据autoresizingMask属性的值自动进行尺寸调整。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>628</wp:post_id>
		<wp:post_date>2013-03-05 20:43:09</wp:post_date>
		<wp:post_date_gmt>2013-03-05 12:43:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ios%e5%bc%80%e5%8f%91%e7%ac%94%e8%ae%b0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ios%e5%bc%80%e5%8f%91"><![CDATA[IOS开发]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[268]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>IOS开发之关于UIWebView的一些事事</title>
		<link>http://xuanner.com/wp/2013/04/27/ios%e5%bc%80%e5%8f%91%e4%b9%8b%e5%85%b3%e4%ba%8euiwebview%e7%9a%84%e4%b8%80%e4%ba%9b%e4%ba%8b%e4%ba%8b/</link>
		<pubDate>Sat, 27 Apr 2013 01:13:01 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://blog.xuanner.com/?p=637</guid>
		<description></description>
		<content:encoded><![CDATA[1、点击网页URL调用app 本地代码

(1)网页部分，捕捉到js的点击事件后，调用js
[java]
 //引号中可以改成自己想设置的字符
window.location="getAlter";
[/java]

(2)然后再本地截取设置相应的操作代码，实现UIWebViewDelegate
[java]
-(BOOL)webView:(UIWebView *)webView 
    shouldStartLoadWithRequest:(NSURLRequest *)request 
    navigationType:(UIWebViewNavigationType)navigationType{

    if ([request.mainDocumentURL.relativePath isEqualToString:@"getAlter"]) {
        UIAlertView *alert = [[UIAlertView alloc] 
            initWithTitle:nil 
            message:@"本地代码执行" 
            delegate:self 
            cancelButtonTitle:@"确定" 
            otherButtonTitles: nil];
        [alert show];
        return false;//执行本地代码，返回false不让网页读取网络资源
    }

    return true;//如没有location对应的属性，则读取网络相关资源
}
[/java]

]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>637</wp:post_id>
		<wp:post_date>2013-04-27 09:13:01</wp:post_date>
		<wp:post_date_gmt>2013-04-27 01:13:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ios%e5%bc%80%e5%8f%91%e4%b9%8b%e5%85%b3%e4%ba%8euiwebview%e7%9a%84%e4%b8%80%e4%ba%9b%e4%ba%8b%e4%ba%8b</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ios%e5%bc%80%e5%8f%91"><![CDATA[IOS开发]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[239]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>WordPress文章点击数实现</title>
		<link>http://xuanner.com/wp/2015/07/13/wordpress%e6%96%87%e7%ab%a0%e7%82%b9%e5%87%bb%e6%95%b0%e5%ae%9e%e7%8e%b0/</link>
		<pubDate>Sun, 12 Jul 2015 18:15:32 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://xuanner.com/wp/?p=700</guid>
		<description></description>
		<content:encoded><![CDATA[1、首先把下面两个函数，复制到你的主题下的functions.php文件里。
[php]
function getPostViews($postID){
    $count_key = 'post_views_count';
    $count = get_post_meta($postID, $count_key, true);
    if($count==''){
        delete_post_meta($postID, $count_key);
        add_post_meta($postID, $count_key, '0');
        return "0 View";
    }
    return $count.' Views';
}
function setPostViews($postID) {
    $count_key = 'post_views_count';
    $count = get_post_meta($postID, $count_key, true);
    if($count==''){
        $count = 0;
        delete_post_meta($postID, $count_key);
        add_post_meta($postID, $count_key, '0');
    }else{
        $count++;
        update_post_meta($postID, $count_key, $count);
    }
}
[/php]

2、然后，复制下面的代码到主题的single.php的文件里。
[php]
<?php setPostViews(get_the_ID()); ?>
[/php]

3、最后，把下面的代码拷贝到任意你的主题模板里想要显示点击数的地方。
[php]
<?php echo getPostViews(get_the_ID()); ?>
[/php]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>700</wp:post_id>
		<wp:post_date>2015-07-13 02:15:32</wp:post_date>
		<wp:post_date_gmt>2015-07-12 18:15:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>wordpress%e6%96%87%e7%ab%a0%e7%82%b9%e5%87%bb%e6%95%b0%e5%ae%9e%e7%8e%b0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="worldpress"><![CDATA[WorldPress]]></category>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[221]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Eclipse的debug.keystore及相关</title>
		<link>http://xuanner.com/wp/2015/07/15/eclipse%e7%9a%84debug-keystore%e5%ad%98%e6%94%be%e7%9b%ae%e5%bd%95/</link>
		<pubDate>Wed, 15 Jul 2015 02:05:51 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://xuanner.com/wp/?p=702</guid>
		<description></description>
		<content:encoded><![CDATA[1、mac下存放在，用户目录的.android文件夹中，类似我的就在
/Users/xuan/.android

2、查看证书指纹（SHA1）
运行命令：
keytool -list -keystore "android.keystore"［回车］  输入你设置的keystore密码
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>702</wp:post_id>
		<wp:post_date>2015-07-15 10:05:51</wp:post_date>
		<wp:post_date_gmt>2015-07-15 02:05:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>eclipse%e7%9a%84debug-keystore%e5%ad%98%e6%94%be%e7%9b%ae%e5%bd%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[466]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Android Studo快捷键</title>
		<link>http://xuanner.com/wp/2015/08/22/android-studo%e5%bf%ab%e6%8d%b7%e9%94%ae/</link>
		<pubDate>Fri, 21 Aug 2015 18:18:39 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://xuanner.com/wp/?p=707</guid>
		<description></description>
		<content:encoded><![CDATA[#工欲善其事必先利其器#
#以下是mac下的快捷方式#

1、全局查找文件【Shift + Command + F】
2、用文件名称查找文件【双击Shift】
3、自动填充代码例如Setter、Getter等【Command + N】
4、删除行【Command + delete】
5、查看文件结构，例如属性和方法【Command + F12】
6、生成模板代码【Command + J】
7、注释代码【Command + /】
8、格式化代码【Command + Alt + L】
9、快捷最近打开【Command + E】]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>707</wp:post_id>
		<wp:post_date>2015-08-22 02:18:39</wp:post_date>
		<wp:post_date_gmt>2015-08-21 18:18:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>android-studo%e5%bf%ab%e6%8d%b7%e9%94%ae</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[249]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Android开发注意事项</title>
		<link>http://xuanner.com/wp/2015/09/02/android%e5%bc%80%e5%8f%91%e6%b3%a8%e6%84%8f%e4%ba%8b%e9%a1%b9/</link>
		<pubDate>Wed, 02 Sep 2015 09:51:42 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://xuanner.com/wp/?p=711</guid>
		<description></description>
		<content:encoded><![CDATA[1、当前流行UI美美提供的设计稿应该是720*1280尺寸，对应Android资源文件夹是drawable-xhdpi。所以图片要放在drawable-xhdpi文件夹下。该文件夹对应屏幕密度为2。所以所有UI美美标注的尺寸px为单位要转化成我们程序dp单位的话刚好需要除以2。（请去了解px，dp，sp等单位的区别）

2、所有尺寸都需要在res/values下定义一个dimens.xml文件。参考第一条720*1280的规格来的话，如果UI美美标识这里宽式100px，那么你要在demens中定义一个值，50dp，然后再通过引用来拿到这个值。这样做一个好处，如果以后需要设配大屏手机或者pad，就是copy这份文件，然后乘以相应地系数，放到对应设配的文件夹下面既可。

3、所有程序使用到得文字，都需要再res/values下定义一个strings.xml文件。然后再里面定义一个值，宅男的女人。命名原则可以这样，前两个中文全拼并用下划线隔开,后面多余就用文字的首字母即可。然后再布局文件里，或者代码里都通过这个引用达到文字。这样做一个好处，如果以后APP需要全球化或者翻译成英文版。我们只需要翻译这份资源，然后放到相应适配目录下即可。

4、布局文件基本的命名规范，布局.xml文件基本的命名规则是。如果是Activity，那么就这样：layout_xxx.xml。如果是Dialog布局文件可以是，dlg_xxx.xml。如果是自定义View可以是，View_xxx.xml。通用的布局文件，include_xxx.xml。所以一个原则，布局命名，第一个分割线前面的含义是你这个布局文件的分类。后面再跟上具体名字。原因：因为布局文件不能分文件夹来存放，所以我们要认为的去区分不同种类的布局文件，这样方便检索。

5、控件的基本命名规范，例如，ImageView，那么你的id就可以是xxxIv。例如，TextView，那么你的id可以是xxxTv。例如，Button，那么你的id可以是xxxBtn。例如，RelativeLayout，那么你的id可以是xxxLayout。总归一个原则，使用骆驼峰的形式，前面是控件具体名称含义，后面是控件的简写。然后在Java代码里面定义的变量名称，最好跟id一致。这样做认为的去搞成一致是为了方便查找。例如我在阅读代码里面有个xxxTv，那么我就可以认为布局文件里面肯定会有对应这个id，搜索一下就可以，不用再去绕弯子去对应。

6、关于代码结构上的。怎么来分一个简单地MVC。我的理解是这样，一个布局文件.xml相当于V（视图层），然后会创建一个相应地Activity，相当于C（控制层），然后你要在对应Activity创建一个Model，命名就Activity名字后面加Model。即M（模型层），基本上所有业务逻辑都可以写在这里。Activity只做调用处理。

7、关于代码的封装问题，如果你发现有一段代码，到处都用到，就要想到封装一个工具类什么。如果用的地方真的很多，即使只有两句换也最好弄个方法。然后通用的，或者比较复杂的布局，你们先一个小布局，自定义一个布局类，来处理，这样方便共用，方便代码逻辑清晰。千万不要一推的都写在同一个布局文件里面。

8、关于使用高版本的API。你可以手动把API版本降低到你要支持的哪个版本，在AndroidManifest.xml可以设置。然后查看报错进行修复。一般废弃的API会有对应较新的API。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>711</wp:post_id>
		<wp:post_date>2015-09-02 17:51:42</wp:post_date>
		<wp:post_date_gmt>2015-09-02 09:51:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>android%e5%bc%80%e5%8f%91%e6%b3%a8%e6%84%8f%e4%ba%8b%e9%a1%b9</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[176]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>客户端UI设计尺寸规范</title>
		<link>http://xuanner.com/wp/2015/09/11/%e5%ae%a2%e6%88%b7%e7%ab%afui%e8%ae%be%e8%ae%a1%e5%b0%ba%e5%af%b8%e8%a7%84%e8%8c%83/</link>
		<pubDate>Fri, 11 Sep 2015 03:05:45 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://xuanner.com/wp/?p=720</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>1、Android设计图尺寸</strong>
<blockquote>720*1280</blockquote>
<strong>2、iOS设计图尺寸</strong>
<blockquote>640*960
或者
640*1136</blockquote>
<strong>3、iOS桌面图标尺寸</strong>
<blockquote>58*58
80*80
114*114
120*120
180*180
然后png格式</blockquote>
<strong>4、iOS启动页面尺寸</strong>
<blockquote>640*960
640*1136
750*1334
1242*2208
然后png格式</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>720</wp:post_id>
		<wp:post_date>2015-09-11 11:05:45</wp:post_date>
		<wp:post_date_gmt>2015-09-11 03:05:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%ae%a2%e6%88%b7%e7%ab%afui%e8%ae%be%e8%ae%a1%e5%b0%ba%e5%af%b8%e8%a7%84%e8%8c%83</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="android"><![CDATA[Android]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[173]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>mac升级后pod无法使用问题</title>
		<link>http://xuanner.com/wp/2015/11/12/mac%e5%8d%87%e7%ba%a7%e5%90%8epod%e6%97%a0%e6%b3%95%e4%bd%bf%e7%94%a8%e9%97%ae%e9%a2%98/</link>
		<pubDate>Thu, 12 Nov 2015 06:41:25 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://xuanner.com/wp/?p=727</guid>
		<description></description>
		<content:encoded><![CDATA[1、输入命令：（为了查看当前gem获取资源地址是否正确）
<blockquote>gem sources</blockquote>
输出内容：
<blockquote>*** CURRENT SOURCES ***

http://ruby.taobao.org/</blockquote>
2、输入命令：（使用淘宝代理地址，之前的http改成https）
<blockquote>gem sources --remove http://ruby.taobao.org/</blockquote>
输出内容
<blockquote>http://ruby.taobao.org/ removed from sources</blockquote>
输入命令：
<blockquote>gem sources -a https://ruby.taobao.org/</blockquote>
输出内容：
<blockquote>https://ruby.taobao.org/ added to sources</blockquote>
3、输入命令：(用gem重新安装)
<blockquote>sudo gem install cocoapods</blockquote>
输出内容：
<blockquote>Fetching: nap-1.0.0.gem (100%)
Successfully installed nap-1.0.0
...
...
Parsing documentation for cocoapods-0.39.0
Installing ri documentation for cocoapods-0.39.0
10 gems installed</blockquote>
4、输入命令：（更新项目的podfile文件，需要定位到指定项目下）
<blockquote>pod update --verbose --no-repo-update</blockquote>
5、输入命令：（查看当前pod版本）
<blockquote>pod --version</blockquote>
输出内容：
<blockquote>0.39.0</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>727</wp:post_id>
		<wp:post_date>2015-11-12 14:41:25</wp:post_date>
		<wp:post_date_gmt>2015-11-12 06:41:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mac%e5%8d%87%e7%ba%a7%e5%90%8epod%e6%97%a0%e6%b3%95%e4%bd%bf%e7%94%a8%e9%97%ae%e9%a2%98</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%8a%80%e6%9c%af%e6%9d%82%e8%b0%88"><![CDATA[技术杂谈]]></category>
		<wp:postmeta>
			<wp:meta_key>_oembed_95b7a55905797c2dff5285620032c1c5</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_91d20dd188eff468200943a389eb3367</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[266]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>iOS上传AppStore需要的截图</title>
		<link>http://xuanner.com/wp/2015/11/20/ios%e4%b8%8a%e4%bc%a0appstore%e9%9c%80%e8%a6%81%e7%9a%84%e6%88%aa%e5%9b%be/</link>
		<pubDate>Fri, 20 Nov 2015 04:38:49 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://xuanner.com/wp/?p=733</guid>
		<description></description>
		<content:encoded><![CDATA[logo：1024*1024
3.5英寸截图：640*960(4/4S）
4.0英寸截图：640 × 1136(5/5S/5C)
4.7英寸截图：750 × 1334(6)
5.5英寸截图：1242 × 2208(6Plus)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>733</wp:post_id>
		<wp:post_date>2015-11-20 12:38:49</wp:post_date>
		<wp:post_date_gmt>2015-11-20 04:38:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ios%e4%b8%8a%e4%bc%a0appstore%e9%9c%80%e8%a6%81%e7%9a%84%e6%88%aa%e5%9b%be</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ios%e5%bc%80%e5%8f%91"><![CDATA[IOS开发]]></category>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[ios%e4%b8%8a%e4%bc%a0appstore%e9%9c%80%e8%a6%81%e7%9a%84%e5%9b%be%e7%89%87%e5%b0%ba%e5%af%b8]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[223]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>MySQL报错：Error Code: 1175. You are using safe update mode and you tried to update</title>
		<link>http://xuanner.com/wp/2017/01/20/mysql%e5%87%a0%e4%b8%aa%e6%9c%89%e7%94%a8%e8%af%ad%e6%b3%95/</link>
		<pubDate>Fri, 20 Jan 2017 03:22:05 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://xuanner.com/wp/?p=762</guid>
		<description></description>
		<content:encoded><![CDATA[1、是因为开启了安全模式，解决语法如下：
<blockquote>SET SQL_SAFE_UPDATES = 0;</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>762</wp:post_id>
		<wp:post_date>2017-01-20 11:22:05</wp:post_date>
		<wp:post_date_gmt>2017-01-20 03:22:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mysql%e5%87%a0%e4%b8%aa%e6%9c%89%e7%94%a8%e8%af%ad%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%95%b0%e6%8d%ae%e5%ba%93"><![CDATA[数据库]]></category>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[13]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>MySQL安装启动</title>
		<link>http://xuanner.com/wp/2017/02/04/mysql%e5%ae%89%e8%a3%85%e5%88%b0%e5%90%af%e5%8a%a8%e5%88%b0%e5%88%9b%e5%bb%ba%e6%95%b0%e6%8d%ae%e5%ba%93%e7%ad%89%e8%af%ad%e6%b3%95/</link>
		<pubDate>Sat, 04 Feb 2017 07:40:12 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://xuanner.com/wp/?p=765</guid>
		<description></description>
		<content:encoded><![CDATA[1、用yum安装
<blockquote>
<p class="p1"><span class="s1">yum install mysql-server mysql mysql-devel</span></p>
</blockquote>
<p class="p1">2、配置<span class="s1">/etc/my.cnf文件</span></p>

<blockquote>
<p class="p1"><span class="s1">[mysqld]</span></p>
<p class="p1"><span class="s1">datadir=/var/lib/mysql</span></p>
<p class="p1"><span class="s1">socket=/var/lib/mysql/mysql.sock</span></p>
<p class="p1"><span class="s1">user=mysql</span></p>
<p class="p1"><span class="s1"># Disabling symbolic-links is recommended to prevent assorted security risks</span></p>
<p class="p1"><span class="s1">symbolic-links=0</span></p>
<p class="p1"><span class="s1">lower_case_table_names=1</span></p>
<p class="p1"><span class="s1">default-character-set=utf8</span></p>
<p class="p1"><span class="s1">character-set-server=utf8</span></p>
<p class="p1"><span class="s1">[mysql]</span></p>
<p class="p1"><span class="s1">default-character-set=utf8</span></p>
<p class="p1"><span class="s1">[client]</span></p>
<p class="p1"><span class="s1">default-character-set=utf8</span></p>
<p class="p1"><span class="s1">[mysqld_safe]</span></p>
<p class="p1"><span class="s1">log-error=/var/log/mysqld.log</span></p>
<p class="p1"><span class="s1">pid-file=/var/run/mysqld/mysqld.pid</span></p>
</blockquote>
<p class="p1">3、<span class="s1">启动关闭mysql</span></p>

<blockquote>
<p class="p1"><span class="s1">/etc/rc.d/init.d/mysqld start</span></p>
<p class="p1">/etc/rc.d/init.d/mysqld stop</p>
</blockquote>
<p class="p1">4、创建一个数据库</p>

<blockquote>
<p class="p1">CREATE SCHEMA `数据库名称` DEFAULT CHARACTER SET utf8;</p>
</blockquote>
<p class="p1">5、创建一个用户并且给这个用户授权</p>

<blockquote>
<p class="p1">CREATE USER `数据库名称`@`%` IDENTIFIED BY '密码';</p>
<p class="p1">GRANT ALL PRIVILEGES ON `数据库名称`.* to `用户名`@`%` identified by '密码';</p>
<p class="p1">flush PRIVILEGES;</p>
</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>765</wp:post_id>
		<wp:post_date>2017-02-04 15:40:12</wp:post_date>
		<wp:post_date_gmt>2017-02-04 07:40:12</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mysql%e5%ae%89%e8%a3%85%e5%88%b0%e5%90%af%e5%8a%a8%e5%88%b0%e5%88%9b%e5%bb%ba%e6%95%b0%e6%8d%ae%e5%ba%93%e7%ad%89%e8%af%ad%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%95%b0%e6%8d%ae%e5%ba%93"><![CDATA[数据库]]></category>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>MySQL报错：ERROR 1044 (42000): Access denied for user &#039;&#039;@&#039;localhost&#039; to database &#039;mysql&#039;</title>
		<link>http://xuanner.com/wp/2017/02/04/mysql%e7%9a%84root%e7%94%a8%e6%88%b7%e6%b2%a1%e6%9c%89%e6%9d%83%e9%99%90%e6%8a%a5%e9%94%99/</link>
		<pubDate>Sat, 04 Feb 2017 08:30:31 +0000</pubDate>
		<dc:creator><![CDATA[xuan698400]]></dc:creator>
		<guid isPermaLink="false">http://xuanner.com/wp/?p=767</guid>
		<description></description>
		<content:encoded><![CDATA[解决办法如下：

先关闭数据库
<blockquote>service mysqld stop</blockquote>
再启动绕过权限
<blockquote>mysqld_safe --skip-grant-tables</blockquote>
然后修改root密码
<blockquote>update user set password=password("新密码") where user="root";</blockquote>
删除‘’的用户
<blockquote>delete from user where USER='';</blockquote>
刷新权限退出
<blockquote>FLUSH PRIVILEGES</blockquote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>767</wp:post_id>
		<wp:post_date>2017-02-04 16:30:31</wp:post_date>
		<wp:post_date_gmt>2017-02-04 08:30:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mysql%e7%9a%84root%e7%94%a8%e6%88%b7%e6%b2%a1%e6%9c%89%e6%9d%83%e9%99%90%e6%8a%a5%e9%94%99</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%95%b0%e6%8d%ae%e5%ba%93"><![CDATA[数据库]]></category>
		<wp:postmeta>
			<wp:meta_key>post_views_count</wp:meta_key>
			<wp:meta_value><![CDATA[11]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
